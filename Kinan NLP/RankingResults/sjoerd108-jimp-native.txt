Jimp-native
0.06881549341461944
threads
0.02878370964196892
results
0.02310177593850987
library
0.022121765933519555
code
0.01951187221210038
fast C++ re
0.01888095299684157
async
0.018799129700824053
MIT license
0.01649597194723646
algorithm
0.016183903089840686
existing project
0.01617341070549393
resize
0.015310151236017498
thread
0.01409869766241546
operations
0.013553054446864943
image
0.013455329201829819
Gaussian blur convolution 399.59ms
0.012442702941326817
-
0.011900551952105137
cores
0.010568139004251036
better improvements
0.010012195437587057
Links
0.00999033277989222
default
0.009927035417317138
more benchmarks
0.009898759948045696
amount
0.009725760396432933
other projects
0.009700445939187336
server
0.00957728917637115
exact benchmark code
0.009561522005346757
JavaScript doubles
0.00940200003456434
average time
0.009282149278167404
example.png
0.009227047982535893
% tolerance
0.00904067981188893
demand
0.009023233091857303
Single threaded performance
0.008979755239993763
system dependencies
0.008722868843865026
bilinear
0.008683474523679686
Edge detect convolution 98.43ms
0.008664199142496016
numbers
0.008575203985579318
Original source
0.008484039310583473
colour component
0.008382198007126982
other important things
0.008174899400045873
JS-Image-Resizer - Jimp
0.007952140422971862
require(path
0.007544601294909428
err
0.007291592431163185
image.write(path.join(__dirname
0.0071032301686203185
implementation
0.007085319708155695
await
0.006853757146914528
callback
0.006806819221486969
portions
0.006771867853679676
image.resizeAsync(128
0.006765439444597569
3.27sec
0.006674552629032241
17.29x
0.006513150185479772
console.log(Starting circle
0.0063477713665048546
LICENSE
0.006345538465473363
most areas
0.006254806859650052
parallel
0.00612909526202014
improvement
0.00612485725797638
10px each side
0.006017403896595758
port
0.0060121176387521215
Crop
0.005938581539840266
ImageJS
0.005831813049168101
blur
0.0058224859860452225
vice
0.005786834951148422
stock speed
0.005698528940933275
ORIGINAL_JIMP_LICENSE
0.005622526515330626
Intel Core i7-6700K
0.005614180670948596
small images
0.005596180761740454
Jimp.read(path.join(__dirname
0.005498962320779293
Node.js main loop
0.005465954614495722
raw throughput
0.0054626745814064445
advantage
0.005369011112860208
Tests
0.005322601315469529
comparison
0.005299281830103458
benchmarking tool
0.0052914223007514945
true-async mode
0.005144215050016508
binary level
0.005143497754056709
licensing info
0.0050978322193881015
other words
0.005056275467799772
testing harness
0.005030704875228132
Most C++ optimized functions
0.005020727567730047
database
0.005019647842611421
HTTP requests
0.004995629041747778
case
0.004981193688847381
optimized function
0.004960647144315288
Jimp native speed Speed improvement
2x resize
0.004957912892937063
cases
0.004938479008471761
31.67x
0.004896651613264509
methodName}Async
0.004894217555985544
tolerances
0.004864687213554274
folder
0.004836714327120072
hand
0.004834549887894613
node-gyp
0.004774050042391369
public domain
0.004740890189195972
algorithms
0.004737748607730211
example-results file
0.004725563238432583
usual build tools
0.004721862266976647
promise
0.0047097081678205656
node-addon-api
0.004679338902382893
4.43ms
0.004678503685337088
benefits
0.0046333678198413955
.read(path.join(__dirname
0.004616740889980029
setInterval
0.004614599200730093
minimal overhead
0.004603650118523706
run().catch(console.error
0.004600950177861557
Accuracy
0.004595283245883422
ImageJS - All resize algorithms
0.004575176351118328
microseconds
0.004527011490297805
bilinearInterpolation
0.004488546103348062
example
0.004461522406007721
web assembly
0.004457707568007898
C++
Explore potential port
0.004457198874064263
Jimp plugins / functions
Handle image
0.004446457406130068
console.error(err
0.004438549163344895
common tasks
0.004427466389472258
composite 
blit 
blur 
circle 
colour brightness
0.004397151465016952
degrees
0.0043886043802519705
enough work
0.004368156124646989
default algo 8.87ms 4.71ms 1.88x
Crop
0.004353799145655376
.then((image
0.0042554705417585945
WASM
0.004227746705729718
process.exit(0
0.004165174973521646
JS
0.004140679888534508
console.log(`Circularize
0.004041560091226721
contrast 
posterize 
grayscale/greyscale 
opacity
0.003980574047558567
console.log(`Resize
0.0039035680018216267
drop-in replacement
0.003900726621160871
console.log(`Done
0.0038835558824113067
dither
0.0038550580517443585
crop crop 
autocrop 


displace
0.003823997990949234
convolute
0.0037471201404412225
callbacks
0.0035933322359764973
sever-side Jimp code
0.003141444732411008
