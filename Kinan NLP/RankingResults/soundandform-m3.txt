efficient "operations
0.03777001246047413
stack machine model
0.03495487656989067
fused" operation
0.028869303875725144
M3
0.025935460087913764
interpreter strategy
0.022317175658496686
registers
0.021546111587625125
Most execution trap cases
0.018955479967587594
loop
0.017199852219373295
code
0.015084981206787173
Gestalt
0.014495411490885785
meta machine
0.011645791554236964
stack pointer
0.01147837547255316
C
0.010870218106641686
Lua virtual machine
0.010741956287404328
arguments
0.00997645242301137
Linear memory
0.009915189602653885
fundamental things
0.009873120725787178
outer control structure
0.009492125663576049
fiber
0.00892599014051759
loops
0.008875484741986796
Luas performance
0.00886611886963455
compilation logic
0.008813873586317878
manual Lua conversion
0.00859167770980108
integer register
0.008522820492253955
time
0.008285708260593796
next function
0.008162068711208201
others
0.007644804347813567
%
0.007443953192337703
fp0
0.007313017328630317
problem
0.007151756961271012
case
0.0069958279798613965
reg_t r0
0.006911116468013876
example
0.0067383465153574434
commutative-ness
0.00667899990222837
opcode
0.006524987034595512
state
0.006522586316378826
floating-point register
0.006512949040400837
modern x86 processor
0.006481210674462473
return argument
0.006465451579962069
C compiler
0.006379628427480408
program counter
0.006350685109498858
WebAssembly opcodes
0.006246917469250427
u8 * mem
0.006232310732055668
client code
0.006073097564466149
beautiful property
0.0060659766619331115
branch predictor differences
0.006057099683462121
source languages
0.00597160475344901
additional reference point
0.005849084389244413
simple benchmarks
0.005479042406609829
>
0.005469002990003283
+11
0.005454019437905407
Continue operation returns
0.005450894800489577
faster interpreters
0.005389316025247489
Wasm bytecode structure
0.005111958454211299
Operation_NewObject
0.004994891691805926
result
0.004903621134919779
bytecode
0.004765304911069443
return_t
0.004762719308523039
Traps/Exceptions
0.00475598737496916
decoding overhead

Bytecode/opcodes
0.004738024019236048
convention
0.004663980852766228
repository
0.004658703230468495
source operands
0.004534460946917877
space
0.004482688330300829
GCC
Life
0.004465059453115312
Opcodes map
0.004461077904274588
long periods
0.004447244494181263
number
0.004427197358198848
fibers
0.004421017933339587
xmm0
0.004411649387463281
vectorcall
0.0043582938703291985
mysteries
0.004346788889471154
pages
0.004327672391721288
addq
0.0043167646122722145
https://docs.microsoft.com/en-us/cpp/cpp/vectorcall
0.004304525703843035
0x1000062cb
0.004236859618106982
rsi,%rax,8
0.0042070422701201895
m3`op_u64_Or_sr
0.0041874463026024935
Thoughts
0.004172076718834799
3X
0.004134937185833997
bunch
0.00413045104956657
blocks
0.004119247471129126
Questions
0.004089162688546274
MB
0.004046310891449195
Boost Context
0.004003941456141951
0x1000062c0
0.003920927951699961
gcc
0.003913357652500008
thing
0.0038981333398227305
occurring sequences
0.003842620648359496
reference-counting objects
0.003835415295952744
End Result
0.003825223515430645
-O3

Mandelbrot

C code
0.0038189869220999918
Modules
0.0037840296562439294
block
0.003779447367814319
explicit saving
0.0037752695919699543
examples
0.0037427403836316703
standardized signature
0.0037152735344843594
lexical scoping
0.0036895201473264557
charge
0.0036717403269905012
prior tests
0.0036603241150345925
WebAssembly
0.003659081074990859
mucking
0.003657950684897317
kind
0.003641472235790387
MB?
Traps
0.0036083054269568666
ebp/esp registers
0.003585708873264033
effect
0.003578555737748436
whole purpose
0.0035686578059802255
Registers
0.0035529737315347486
giant switch statement" thing
0.0035496760584144606
mysterious beast
0.003524316233263763
goal
0.003523459707821911
single, fixed function signature
0.003514605955621292
behavior
0.0035137772520467654
trap/exception and program flow control signal
0.003491581512615317
Wasm version
0.0034908090014714515
x86/ARM calling conventions
0.0034730500180613823
tail-call
0.0034648034464053777
host
0.0034479185576508356
runtime usage issue
0.0034414633997231735
mapping
0.003437417263575316
Clang -Os
0.0034260824198448876
movslq
0.0034019090962235116
plain English
0.0033941009986293708
hangs
0.003376190848555908
//
0.0033688748277155333
spin
0.003360962930251725
Chained Operations

M3 operations
0.003345201574299579
improved performance.the modern CPU pipeline
0.0033441406616916717
conventional Windows calling convention
0.003337843723509144
Operation_Whatever
0.003336919546469616
spec
0.0033071764599544437
implementation
0.0032951702808418915
Object o = runtime->CreateObject
0.0032803365094155393
os destructor
0.003278815121417771
+15
0.0032592015140676224
direct and efficient "register file" approach
0.0032419358302372527
optional prologue/epilogue structure
0.003233701332500967
creative flow
0.0032334210611872204
runtime->DestroyObject
0.0032252828116496072
Windows
0.0032032172018839795
rough information
0.0031706669675311584
scope/block/curly-brace
0.0031635363698395104
end
0.0031606391733205183
pseudocode
0.003122694154090171
Register x86 Register
program counter (pc) rdi
stack pointer (sp) rsi
linear memory
0.0031147178370690733
scope and insert dererence
0.003108816187905112
foundation
0.003106011006369024
Massey Meta Machine
0.003097740563274552
exit/return pathway
0.0030899164057203183
years
0.003087597393561312
edges
0.003082069449208801
https://github.com/ColinEberhardt/wasm-mandelbrot

Interpreter Execution Time Relative
0.0030049649087343887
novel, high performance interpreter topology
0.0030008355618898032
own personal programming language
0.0029964587302529584
development
0.002970396533107849
Xcode project file
0.0029685495422708263
intuition
0.002968419323321119
instant-feedback, live-coding environment
0.0029538888691899925
Retina 5K
0.0029275233778128084
GHz Intel Core i7 iMac
0.0029262869157740262
Older CPUs
0.002907118061418578
Wasm validation library
0.0028815382028718993
weird Wasm transcoding
0.0028773852537713985
ideas
0.0028773558701021378
Deep traditional compilation
0.002874212632275429
index
0.002844489590303852
ARM
0.0028298754610519327
complex Wasm compiler system
0.00282747894437503
pre-JIT interpreter
0.0027831767848097164
embedded systems
0.0027315318689053528
progress
0.0026475899496795066
particular Wasm project
0.0026233861770680635
MacBook Pro
0.0025351394035826053
Purpose
0.00246312882418328
Development
0.002419351356739087
