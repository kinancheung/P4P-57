bin folder
0.02561258176482024
webpage
0.020346015679895156
emscripten tools
0.01891775462838854
HTJ2K
0.016196579764099796
OpenJPH library
0.015496779992065716
cmake tool
0.015415241349303327
usage examples
0.015044620077364998
browser
0.014607338526492658
visual studio code container
0.013268376478483623
high-quality image
0.012924698914636568
SIMD instructions
0.01282155647586087
docker user
0.012611123268932115
machine
0.012442657255292347
header
0.012307266559481026
javascript demo
0.011690374862302963
ARM
0.011479019862260832
project
0.011246874123336057
attainable performance
0.011048848159822666
lossy compression
0.010746595933535018
script
0.010691491339814195
code
0.010286539178082463
generated files
0.010257554944490987
Chrome
0.010055935205717901
Firefox
0.01003700697240936
platforms
0.01000577185579502
webserver
0.010002006612129723
Chris
0.009743038960673843
Safari
0.009580142757107179
source
0.009293922893162112
mobile
0.00916479648879989
desktop
0.009080589461457362
Edge
0.00880439297466256
OpenJPH
0.00873030709689881
tablet
0.008535758940138236
-block_size
0.008347783500535555
C++
0.00828689452536277
needed information
0.008126942353748392
provided command line tools
0.00788130770288997
subprojects
0.007872082422649071
small wrapper file
0.007857300143275115
point
0.007495765512689928
features
0.007489963036761211
decoder
0.007313855110026673
--rm
0.007281869895275754
simple python
0.007169594752139156
Xcode project
0.006964224308107456
compilation
0.006875127629543985
Linux
0.00681176045153461
sources
0.006800599335057344
wavelet transform
0.00674181668418683
Intel platforms
0.0067325645812938255
executables
0.006707277528419304
ojph_expand
0.006622719043284582
command
0.006557583883448424
-
0.006473691634752789
default port
0.006248964315676099
web
0.005724530656460832
data
0.005649959314028358
pairs
0.005608326060836572
ITU website
0.005474066397602133
\
0.005366398268388275
CPRL -colour_trans
0.005251126866305503
-prog_order
0.005242610042085637
pixel
0.0051960918538877555
x
0.005175671806170526
js
0.0051336956384343164
columns
0.005127196289706325
Kakadu
0.0050405231838533075
interest
0.005035705443185849
rows
0.005021161070536247
paper
0.004954278121612445
pair
0.004952956272462214
bits
0.004923356263714981
HTJ2K.
0.004921433048383772
interface
0.004840494131225663
encoding
0.004682107489897214
future
0.004598690562180983
input_file.j2c
0.004583640412681663
user-selectable options
0.004578930317082118
wealth
0.00455967389366
libopenjph.wasm
0.004508787698831903
variety
0.004450848120347553
C:\\temp:/usr/src/openjph
0.004445887730329656
documentation
0.0044452856320029675
build environments
0.004388664945023089
codestream
0.0043784091527324515
aarch64 architecture
0.0043621634969436066
provided encoder
0.00435536947881192
purpose
0.004348867349861956
time
0.004342187025839047
ojph_wrapper.cpp
0.00432829322081945
security reasons
0.004315645975556772
input_file.yuv
0.004294445186764491
more details
0.004287278459705748
QEMU
0.004262860686101539
bitrate
0.00425638892659648
suggesting
0.004251080368276315
little urgency
0.004248343178202564
output_file.j2c
0.004208792029240863
short usage statement
0.004206266691993175
emmake
0.004204989634681961
http.server
0.004201954396608884
CPU
0.004189514459601602
Compilation
0.004170740687263239
quantisation step size
0.004165924289584327
arguments
0.004165288868542683
way
0.004135789779090786
provided decoder ojph_expand decodes
0.004126175091839383
src/apps
0.004122485003728591
extension j2c
0.004115627225176766
charge
0.004109801899096564
Visual Studio Code Remote Containers

Visual Studio Code Remote Containers
0.004084739970811846
container
0.004078530868108939
block
0.004072659640958669
qstep
0.004071810659159304
Notes
0.004069706473486423
MacOS
0.004061854011596926
quantization
0.004060356947600709
solution
0.004052224783170234
nice online demonstration
0.0039998824200352225
small demo page
0.003974501696389601
issues
0.003962145606906088
wasm
0.00393811660514584
apps.xcodeproj
0.0039336515264263554
directory
0.0039312146056034196
approach
0.0039041135133197563
Cortex-A57 CPU
0.0038653500513098505
compressed image test.j2c
0.0038310097690891828
index.html decodes
0.0037701228664441867
ojph_compress -i input_file.ppm
0.0037432525913728117
GPU
0.0037413853126055294
blog
0.003739909080297536
development environment
0.0037376020695360024
standard
0.0037228823251925594
example
0.0037181211581817737
openjph
0.003652142924375867
open localhost:8000
0.0036123550208522473
https://gitter.im/OpenJPH

Readme

Open source implementation
0.0036110235160284215
scripts/configuration files
0.003600127723473225
file
0.0035999243788727817
associate site
0.003599242022554446
macOS
0.003595337616880289
downsampling
0.003545261729568526
JPEG2000 Part
0.003524353833264559
chat
0.003507229100455332
.ppm
0.003426474260629653
scripts
0.00339546671900056
Dockerfile
0.003367444322270971
Step
0.003336058627304438
subsampling specify
0.003323214092198726
whole process
0.00331527363928973
interested reader
0.003266518480141409
K 4:4:4 HDR images
0.003225245558242506
cmake -DCMAKE_BUILD_TYPE=Release -DOJPH_DISABLE_INTEL_SIMD
0.0030984881053453665
High-throughput JPEG2000
0.0030953067689481035
JPH
0.0030865800129965108
ISO/IEC
0.002961759192605447
