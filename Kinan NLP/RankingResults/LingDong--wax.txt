wax
0.04303122349308232
C
0.02412100904183148
transpile
0.020311475175175377
--c     path
0.01926635863045203
waxc
0.015012561784334659
syntax
0.014809769916593385
tiny language
0.014148071268000266
many more examples
0.013608522994046213
WebAssembly
0.011773631572385704
C++
0.01159097861607274
Java
0.01146702118370148
TypeScript
0.011206361336981241
structs
0.009831377957646376
other languages
0.009778550926693545
JS
0.009150945149682269
output code
0.008987126188321558
outputs
0.008285319036902402
compile targets
0.00825066845076254
Python
0.008240683842091137
input code
0.008069880121126917
right int
0.00799212219259285
fib.wax example
0.007649339292766854
func qksort_inplace
0.007573577298368812
--ts
0.007573094602878537
Swift
0.007562221531350896
Lua
0.007365964977596728
Quickstart
0.00715568653766707
python       
--cs
0.007053731740050122
C99
0.007040494056133248
./a.out
0.006904949746943077
optimizing compiler
0.006807874149687756
seconds
0.006775854116259295
-
0.006445935203993243
target languages compilers
0.006257708081661625
fib.cs
0.006173000752219226
lines file
0.006168722255119867
wat
0.0061407529513247145
fib.java
0.00611594864952905
gcc
0.006026238395822918
imports
0.0058532320570364085
Compile
0.0058011650773720684
bugs
0.005794026611837069
different types
0.005779167343405058
memory management
0.005766855563663983
+
0.0057166423085331245
param A
0.005494904465453991
readymade wrapper
0.005413151883233905
place
0.00534222244159894
_
0.00528123116224734
world
0.005201512697566227
pivot
0.005162093863594285
brackets
0.005149695030860453
print
0.005122453948553402
arr float
0.005113756410576898
online playground
0.005033351046715276
=
0.004944010467140641
c++11
0.0048266485848013265
Compiles
0.00475120889840551
PR
0.0047093311102759765
fib.lua
0.004655753318119147
lua
0.0046536553769382484
fib.exe
0.0046391707790331095
mono
0.004621803416564789
typescript
0.004540426991956069
--py
0.004531308560526352
scratch
0.0045131543250348845
hashtables
0.0045053823957721326
case
0.004498161865496067
lib.main
0.004464998570924676
arrays
0.004453434167342219
Optimize
0.004407709180052528
dependencies
0.004343226631033984
out.java
0.0042998446973971545
set left
0.004281239235067977
fib
0.0042679166749176765
java
0.00425893304000094
fib.wax
0.004221092106832026
tokens
0.004167360569369923
param lo int
0.004144711423806686
reference implementation
0.004143375792877275
fib.wat
0.004142214969865742
list
0.004093908559809236
out.cs
0.004088005197396191
Optional
0.004077492994714421
binaryen
0.004067012929031453
support
0.004056279290125591
fib.cpp
0.00404733396246998
total
0.004037482722932752
Macbook Pro
0.003990135543363462
C-like macros
0.003947081084960086
wat2wasm
0.003945378600272191
--swift
0.003935334400851404
wabt
0.003921815574888135
massive speedups
0.003909710896041774
keywords
0.003902295058053537
out.c
0.003888545421458896
node fib.js
0.003880404396863512
fib.ts    --py fib.py
0.0038755977849674484
repo
0.0038713863517680033
Playground
0.003845692495118007
flag
0.003832946307441027
details
0.003824664503257411
branches
0.0038170290542618845
print "hello world
0.0038055826002102405
Issues
0.0037942388537784387
parenthesis
0.003787761419773674
calling
0.0037851403937978526
explicit freeing
0.0037795848731660203
Examples
0.003755453225454905
Comparison
0.003742868516705913
tsc
0.0036848078768522644
swiftc fib.swift
0.0036487474498835297
expression
0.003647381360753209
compile target
0.0036286155921573062
transpiles
0.0036145647684162293
garbage collection
0.003609800056549422
methods
0.0035709691378038736
goal
0.0035425047067357334
Overview
0.0035404670187576728
OOP
0.0035172727263718282
WebAssembly.instantiate(bytes
0.003515507844988654
OPTIONS
0.0035123232468851117
resources
0.0035101678518145614
Newlines
0.0034959586553640256
first token
0.0034957882666128396
backends
0.0034817969133962394
keyword/operator
0.0034547462222797596
data
0.003453054016217358
indentations
0.0034500043191816408
design
0.003439252146582009
idea
0.003435841151727665
couple more steps
0.0034338994152819094
Example
0.0034336516957909724
\
0.0033810672920684607
Usage
0.0033672597448052843
index range
0.0033387563231558866
crucial bits
0.003327410586775027
message
0.003325605849802614
constructs
0.0033096523296361163
Haxe
0.0032809109445211984
Array/Vector/Struct sections
0.0032797335509686873
lua 
--wat   path
0.0032742033825978695
.wasm
0.003269229317454635
c99
0.0032644379911040185
tokenization
0.0032559954042537145
type
0.0032503198383927465
rest
0.0032380337240615646
Math
0.0032259488448008983
@include math
0.0032159354051982036
aspects
0.003211045654532666
functional programming
0.0031975406015186413
-std
0.003192455431315358
array
0.0031909291982107958
Editable
0.003180773722058003
--c
0.0031698466378476094
tools
0.003154310453507007
interesting features
0.0031511127914212542
swift  
--lua   path/out.lua
0.00314061098060563
clang
0.003124704423071483
common subset
0.003101875024041442
return
0.0030784683014544825
programmers perspective
0.0030757143760800376
human programmer
0.0030726019086339076
file
0.0030407478872900634
addition
0.0030279875384422866
require("tools
0.00301917989982668
cost
0.0030183452291957054
JSON format
0.0030182546307942885
course
0.0030161015205245026
Oct 27 2020                               

USAGE
0.0030148240025835273
fib.wasm
0.003007995084257369
libraries
0.002993352004585277
most major imperative programming languages
0.002980798739533196
detailed and low-level syntax tree
0.0029764551709509186
World

(func
0.00292974453353709
tour
0.002922184210216079
name
0.0029206400463503046
wasm
0.0029126291250288947
quick taste
0.0028825968693299417
make co.
0.0028663426979598145
func qksort
0.0028604417492501867
Makefile
0.002828335353755806
unique fancy features
0.00273646018040689
Lisp family
0.0027288114768457545
Browser
0.0026915158936603703
QUICKSTART.md
0.0026436783600172938
original names
0.0026315040419281157
user-defined functions
0.002628405916259831
javascript library
0.0025956345543597338
VSCode Extension

Syntax Highlighting
0.0025951799585857884
lib.fib(42
0.0025276232936877517
emlib
0.002477089571094724
func main {result int
0.002473983236476814
node.js app
0.0023758590329307464
rule
0.0023431464520020993
tmp
0.002308797466242973
wax

wax

wax
0.002199290505205715
