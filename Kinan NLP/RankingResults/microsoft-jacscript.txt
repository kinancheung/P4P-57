Math
0.014370918432815566
same role
0.013631036853564949
handler registration
0.01235537558560298
incoming packet
0.010958969960200245
logos
0.010582447979986106
project
0.010436566482435652
value
0.010355910229849236
own fiber
0.009431222138258708
trademarks
0.009083693958617538
code
0.008787758700877031
Jacdac services
0.008715295953150274
builtin functions
0.008572198383800727
Jacdac client libraries
0.008177919484750234
g
0.008079270440783931
b
0.007734014339756937
BuzzerRole.prototype.playNote = function
0.0076805484020249235
small memory
0.007442008326468515
service name
0.007404017225662938
number
0.00727568422251487
register
0.007213620591852875
NaN
0.007210519557364826
time values
0.007135718686046379
plain return
0.00711573567876427
Global and local variables
0.007081040798277325
JavaScript
0.007025512925028878
CLA
0.006825671159124522
byte buffer
0.006704673615778083
syntax
0.006622559048421719
User-defined functions
0.006617366173038972
.onChange() handler
0.006612136593028302
example lamp.brightness.write(0.7
0.006583406161738749
var pot
0.006442299893564735
floating point library
0.0064040318519755154
top-level
0.006391810097446014
next
command
0.006316497194683925
string
0.006279683391173539
y
0.006075807371411463
Comparison operators
0.005949470242293989
custom VM bytecode
0.005936410539571332
var r
0.005850506607704901
Authorized use
0.005824211834930777
Events

Events
0.005822209087436434
numbers
0.005743598355102141
Microsoft
0.005691295028580915
Y
0.005651809022737192
Handler-pending model
0.005649338252242574
roles
0.005416206135491705
pot.position
0.005333643923327463
contributions
0.005291710175941716
events
0.005160500277021421
TODO
0.005070947255561495
status code
0.005060779017604199
more packets
0.004994587737684244
VSCode
run make
0.004844169167469621
C compiler
0.004793227136742289
Jacdac SDK
0.004768224557969621
random bytes
0.0047596306101959866
Conduct
0.004717460474538463
strings
0.004685725639914909
request
0.004675775499567562
error message
0.00459303571563793
volume
0.00458989978338265
second and third examples
0.004577407352101136
cloud
0.004562364786292184
var btnA = roles.button
0.004436247055789344
literal arguments
0.0044241600167703515
function foo(x
0.004405125017997384
CLA bot
0.004394867598727493
handlers
0.004352047856259722
Jacscript
0.004132621981229225
Jacscript VM
compiler/ - sources
0.004121924833422839
var x
0.00411586474263027
time
0.004049109425691499
other fibers
0.00404376372357458
Roles
0.003980840456631655
third-party trademarks
0.003966906616077292
projects
0.0038839203989225477
BG_MAX1 call frames
0.003821555370975502
method
0.003792441927465914
products
0.003744462440790383
boolean flag
0.0037016318176173197
namespace
0.0035150227762566714
LN10
0.003407155702910045
returns
0.0033875129175787388
Reopen
0.0033797776949177905
Trademarks
0.003345471317848877
VSCode
0.0033272574110398694
default
0.003326211037336322
Container
0.0033041573018836256
doubles
0.0032862407451696132
tuple
0.003283969652778853
comments
0.003252189010203407
suggestions
0.0032518185111975427
Implementations
0.003251442547239168
APIs
0.00324187243910285
multiple fields
0.003231575963281159
array
0.0031856503763611037
Terminal
0.003183255602921049
folder
0.003175395418216491
prototype
0.003163200184180832
integer multiplication
0.0031432123751732664
Function parameters
0.003142209099307394
Commands
0.0031271769809458026
modified versions
0.0031124397946149024
Fibers
0.003111208747767626
Registers
0.003107156678271019
pot.reading
0.0030843280160599198
details
0.0030647619112302753
brain
0.003053390729324218
set
0.0030328309104888764
building
0.003030428149661463
sources
0.0030251165625830275
program
0.003006530748448607
legit args
0.0030062051320114656
Use
0.0030028799788800703
additional questions
0.0029931914663943997
RAM
0.0029848147586531747
methods - .onChange
0.002982638671434479
contribution
0.002975430065038396
Math.imul
0.0029685038111164465
reset
0.002963779038098953
SQRT2
0.0029636076743361295
properties
0.002961923206144582
Handlers
0.0029557091543136655
seconds
0.002955224089645887
addition
0.002954692963393269
try_again report
0.002953988090077081
falsy
0.0029480834584727756
colorSensor.color.read
0.0029478603044341867
terminates
0.0029459051531571367
device
0.0029215312745094844
spec
0.002916601156856811
this.playTone(p
0.0029098297725794636
regName
0.0029055497873588377
arrays
0.0028855765885387984
limits
0.002881022204027881
https://cla.opensource.microsoft.com
0.0028711137010543368
reboot
0.0028590611550266026
same semantics
0.00285599907871933
Math.floor
0.0028550833654853707
myRole.regName
0.0028534806866577847
wait(0.3
0.0028409273699520525
Compiler
0.0028341278838159927
errors
0.002822952591352862
fixed upper limit
0.002821708843397108
implementation
0.002808715823099245
Functions
0.0028068402616174717
background
0.002806457440514925
confusion
0.0028006687398731828
Microsoft Open Source Code
0.0027875258892548125
support
0.0027854453651558445
@type BuzzerRole
0.0027814875569718996
bz, len
0.0027763104032390703
frequency, volume, duration
0.002767769864147459
Math.round
Math.ceil
Math.log
Math.random
Math.max
Math.min
Math.pow
Math.sqrt
Math.cbrt
Math.exp
Math.log10
Math.log2
Math.idiv (integer division
0.0027670390830824387
Cloud

specific uploads
0.0027650187609244226
lamp.brightness.write(packet
0.0027619268296082
spaces
0.0027577561583496187
jacdac devtools
0.002754593148157359
more information
0.0027498824549081102
packet.setAt(0
0.002749601232852152
packet.setLength(2
0.00273557676223602
system-wide name
0.0027230189137417826
beep(b
0.0027149750563761994
opcode
0.0027061931922829287
>
0.0027038701988307597
mybuf.getAt(3
0.0027027774103820837
small code (flash) footprint
leave space
0.00270195172606347
.read
0.0027007840911611623
Random
0.002697448766349308
repos
0.0026968501192979047
npm version
0.002696791643828577
equivalent

lamp.brightness.write(0.7
0.002694543346508101
lightweight thread
0.0026932592643495296
rights
0.0026850605011788935
buffer(12
0.0026788940825407974
c
0.00265323316774411
panic(348
0.0026532075570408287
button and barcode reader
0.002642901489985166
many instances
0.0026311068154041745
u16
0.002629349480245613
interruption
0.002627425452563898
hum.autoUpload(5
0.0026219152399531744
Memory usage analysis
0.0026142601586667926
PR
0.0026083283282914817
GNU
0.0026059917421484093
Contributor License Agreement
0.00260499261245334
NaN.

Unused function
0.0026043163670024646
Microsofts Trademark & Brand Guidelines
0.0025985540849359353
changes
0.002582058219291213
constants
0.0025757755741531944
extensions
0.0025740167582256794
bz.playNote(440
0.00257293178360257
Math

Arithmetic operators
0.002570628265199522
mybuf.setAt(3
0.0025669535744731317
pot.position.onChange(0.02
0.0025623273878138905
yields
0.0025550719807401175
X
0.002553794186209618
testing framework
0.0025520658174900514
WASM module
0.0025450101385826036
label
0.0025279697174557946
grown-up POSIX-like operating systems
0.0025255577029731496
cloud.upload("potval
0.0025168044823096016
status check, comment
0.0025058001961794736
B
0.002503628221767971
Usage
0.0024853068961358674
numfmt


shift buffer opcode
0.002484608804113415
scheduler
0.0024720431284674252
+
0.002463624724776674
instructions
0.0024616645846115394
%
auto-upload
0.002460485802296524
embedded platforms
0.0024585320802936062
right
0.002452620509362138
asynchronous operation
0.0024522704900508045
F
0.0024487824323120412
Debugger interface

fiber list
0.0024435761026750827
current execution finishes
0.0024240220624758895
timer expiring
0.002417372918941167
Design goals
0.002416971091506873
size limit
0.0024162130781298402
||
0.0024139490158373404
regular buffers
0.0024138657572855375
cloud.upload("color
0.0024052591650844933
lamp.brightness.write(pot.position.read
0.0024049829840086796
A
0.002397822780135266
following math functions
0.0023964599621465773
suspension
0.002395334867565999
Y=
0.0023869822324075053
Numeric binary and unary expressions
0.0023829970608568573
await keyword
0.0023744477976690146
locals
0.0023703767167442143
executor
0.0023661927153849193
only jump statement
0.0023598398925820732
repository
0.0023586794015292103
runtime
0.0023566560745836604
charDisplay.message.write(format("X
0.002348684546498146
console.log
0.002343440626312907
compiled program - role names
0.002335378133478532
Comparisons
0.002333698946493147
fiber round-robin
0.002323633288114332
console.log("Hello world
0.0023182135356739496
langauge
0.002318002373819923
roles.button
0.0023081855276893245
btnA.up.wait
0.0023081425421190875
Block-based drag-and-drop interface
0.0023028053509508957
Example async operations
0.0022855428996728052
top-level and un-conditionally
0.002277844038862742
Arguments
0.0022654182117398526
programming language
0.002263723674002091
constrained
environments
0.00225540528739387
pre-built files
samples/ - sample Jacscript programs
0.0022541830826426495
source code location
0.0022508538373640094
devcontainer
0.002248519215213845
loop
0.0022376494908247857
cloud.onMethod("set_lights
0.0021980521938563488
hum.humidity.read
0.002183438367215228
precision
0.002173206372888562
format
0.0020960096783799154
myRole.eventName
0.0020887314766548865
roles.lightBulb
0.0020600507020486027
console.log("button
0.002040698282457399
JavaScript-like syntax
0.0020399834211802213
