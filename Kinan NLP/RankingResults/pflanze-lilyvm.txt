bytecode verifier
0.02036439247450407
own GC
0.016832125995289497
Scheme
0.016126008372897585
C
0.016075582341217916
Precise memory management
0.015238515814886883
context
0.014893062460918382
git clone
0.012694335455580923
naive fibonacci
0.012048286620751303
Set
0.010487142095702047
experimental opcodes
0.010407257086267977
lilyvm
0.010016214526327264
code
0.00976589211244273
cc65 compiler
0.009698917802312756
fib_register opcode
0.009587595765061123
clang
0.009558766525419867
other immediates
0.009535299381806368
compiler
0.00951944410186007
execution stack
0.009146470816448319
clang++
0.009088207030711561
opcode*.h
0.009065871246210019
bit words
0.008995301017999396
compiled programs
0.008926408313498611
C-64
0.008609381427228995
process
0.00854472242968702
point
0.008537023484375546
fast bytecode interpreter
0.008486303590148968
pthreads
0.008381544653399615
safe ways
0.008268010107873685
safety
checks
0.008089337957053076
while
0.007999719049750819
result
0.00783277650407463
generated files
0.007265314700179385
concatenative ones
0.007171059370438135
project
0.007022081655671812
SECURITY
0.006863467298728507
booleans
0.006657983815330814
characters
0.006565226082023031
integers
0.006471676560551254
fib_compiled_35.bytecode 
time target-local/lilyvm fib_compiled_register_35.bytecode #
0.006205680179900026
touch
0.006187895164375377
Bignums
0.006093483001189387
C++ mode
0.006073514837723619
compile
0.0060181856935027705
vmtest
0.0058410452709872825
combined ops
0.005812502594608906
dependency
0.0057952901788173
Pairs
0.005748701316203319
progress
0.005725744691169168
FunctionalPerl
0.005628261239006735
executables
0.005609695144893632
addition
0.005594210816712419
chj-ctest
0.005507025566517068
fib_binaryregisters_35.bytecode
0.005497242466014532
CPython
0.005471006586110155
CPLUSPLUS
0.005464646003214965
improvements
0.005457569788578557
security
0.005448047663639649
work
0.00543993837131515
comparison
0.00543120180706144
fib_registers_35.bytecode
0.005424213626651441
C89
0.005410391714478236
bytecode_write_file
0.005393993316133423
Notes
0.005392579082514868
gendeps script
0.005380056878045133
unit
0.005331415609898303
custom ops / compilation
0.005321727921623191
10x
0.005317781887490771
speed
0.005292985677249992
Concurrency
0.005266360227131469
level
0.005247691378365172
https://github.com/pflanze/chj-64lib
git clone https://github.com/pflanze/lilyvm
0.005236823112430858
calls
0.005230868321906213
Gambit
0.0051721123900358296
runtime
0.005170502157996397
help
0.005154842361131417
command line options
0.005150306752825557
globals
0.005146553703987869
shared-nothing processes
0.005132259813202746
CLANG
0.0051006086747742395
local unsafety
0.0050729929351933595
environment
0.005069583920778915
CPU
0.005040957082970947
WASM binary
0.005038384517697236
repository
0.0050364914222128755
macros
0.00500384169457598
aim
0.005001409482741012
fixed-size C array
0.005001161839586834
jump target addresses
0.004997782424924766
hand-coded
examples
0.004989623939557983
makefile runs
0.004983950907332046
Secure separation
0.004973954393266855
lots
0.004955298765092173
assumption
0.004933047926683145
reason
0.004925976717947978
VM_TRACE
0.004898357330725793
manual direction
0.004892450538481256
Note
0.004839777614794737
vm
0.004835762912336505
lazy code
(streams
0.004825909666372387
browser
0.004819912502625874
end
0.004816366652231344
added features
0.004812975066473187
requirements
0.004785993579311375
value
0.004781848909553845
LilyVM
0.004781741614592249
root
0.004776618805039837
lowlevel
data formats
0.004775537953517487
load-time verifier
0.004763659758007388
architecture
0.004754644895364882
generating bloated and slow code
0.004699817032776711
debugging
0.004697581524737722
ASAN
0.004691752528952903
https://metacpan.org/pod/local::lib
0.0046805283499492135
License

Copyright
0.004673283264646923
computed goto
0.004647602198824638
Christian Jaeger
0.00464342289102069
cpan install
0.0046414268369592
bignum{00e3
0.004626845118532291
heap size
0.004621565493547124
page
0.004615502813490681
register
ops
0.004602396630552516
adaptions
0.004598618869577438
fib_combinedop
0.004588551768802353
vmtest.c
0.004566549907393538
VM
0.004550939339670382
CSP / Erlang style
0.004520327940155358
hex
0.004519222761160098
main RAM
0.004510165788392211
existence
0.004503258544189625
small optimized binaries
0.004497290851870352
g++
0.0044930775880035415
current version
0.004491749471578562
larger word
0.004481215759236574
bignum_add
0.004452279100062884
build system
0.0044506881080792335
guest language
0.004446451680334264
source
0.0044398053189193395
simple two-space (Cheney) algorithm
0.004414850009244735
realistic target
0.004412280322806733
link time optimization
0.0043949886475415255
fib(35
0.00435434484043802
other
idea
0.00429480431245725
gcc -O3
0.0042628697470870214
fib(40
0.004257874001880193
fact
0.004236717315876437
CPUs
0.004216901166427321
bits
0.0041775710481956035
numbers
0.0041745707507646656
optim-opcodes.scm
0.004134846385188506
env variables
0.004111113978753525
Efficient call
0.004102258003136118
scheduler
0.004086026816170753
user-space
0.004064008295091532
sections
0.004020698015644775
99;&#x68;&#64;&#99;&#104;&#114;&#x69;&#x73;&#x74;&#x69;&#97;&#x6e;&#x6a;&#97;&#x65;&#103;&#x65;&#114;&#46;&#x63;&#104
0.003961152375934896
mentioned 16-bit
CPU target
0.003941293036718577
env var changes
0.003936692671544995
bignum division
0.003899595659840405
R5RS compatible system
0.003861633672567728
similar languages
0.003779332492105613
assembly
0.003678398173525201
RELEASE=1
0.003584982503121668
disassembler
0.003537458042973967
time target-local/lilyvm fib_35.bytecode
time target-local/lilyvm fib_combinedop_35.bytecode
time target-local/lilyvm fib_registers_35.bytecode
time target-local/lilyvm fib_binaryregisters_35.bytecode
time target-local/lilyvm fib_binaryregisters_frame_35.bytecode
time target-local/lilyvm
0.003425212908752563
microcontrollers
0.003419168636055125
LGPL
0.003239758822138909
other licenses
0.0027189750625644404
