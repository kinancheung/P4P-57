_
0.06196376514533006
Nerd Lang
0.05477267127618265
variable

var
0.051112396267818334
function
0.03430575316989241
name
0.028251282387530115
nerd
0.024918955527881627
variable
0.02459392605173304
age
0.023922335157348713
Arduino
0.020975871812317304
NerdLang
0.019599563163938665
OOP
0.018731605432989094
NodeJS
0.018479208170611917
changeName
0.01576177069041972
Clang
0.012409837127859877
support
0.012360447857315052
Android
0.012223942682203141
Download
0.012062946683051357
brackets
0.012028277131228787
use
0.011917954583641359
comma
0.011880789977118812
=
0.01187951073837597
modules
0.011836840391127297
iOS
0.011803672939371767
ESP32, STM32
0.011800159662279425
https://blog.zakkemble.net/avr-gcc-builds/
0.011796934648510225
GCC
0.011664309200396086
needed standards
0.011590620388254137
functions body
0.011584675735752453
c++17
0.011532871995165393
Windows
0.011461870325517383
program
0.01138922151801457
arg2
0.0113266959801671
pi
0.011315922254697125
FP
0.011312283565123251
JS syntax
0.010878799852198
Wasm
0.010677505747126595
order
0.01061788171387089
avr-gcc
0.010586303285328873
module manager
0.010496414218361786
working directory
0.010406651466166424
other stuffs
0.010308960449832243
object
0.010236450150743169
examples
0.01018008550883304
firmware
0.010164245608603795
classical expressions
0.010141858021328989
npm
0.009970572864930218
Emscripten
0.009865954198369832
classes
0.009863279420122205
interpreter
Add runtimes
0.009796168016301558
list
0.00977126345579411
C/C++
0.009674996706989715
var myFunction = function(_arg1
0.00946051012085102
first file
0.00944087697692333
internal value
0.009086297923458109
different languages
Languagesupport multi variable assignment
switch statement
AST optimization
0.009003129800071773
constant
0.00884164746117254
Grammar / Syntax

Nerd
0.008790435437329786
alpha stage release
0.008773141552064273
native type
0.008488249232523129
chainedFunction().then().then().end
0.007875729551848658
thisScope.age++
0.007815829862029522
way
0.007675186503869214
superlative
0.007673938599868861
an(other
0.007616700994485821
Concepts
0.007541277091843483
main objective
0.007296214495634329
versatile tool
0.00722304504370839
efficient and yet simple language
0.006898182965663717
constProperty
0.006513072407302773
if(1
0.006308106546101077
property
0.006181617867191938
while(1
0.006158485812117276
if(2
0.006057168366670345
i++
0.005719750133698281
this.then
0.00535512492950682
