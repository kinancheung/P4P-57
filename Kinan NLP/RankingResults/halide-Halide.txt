Halide
0.049265541800540553
Hexagon
0.027851024476188344
^
0.01995457167389973
serial build
0.018647937976356662
Windows
0.014928484719003666
Ninja
0.014533734490191618
example
0.013409585696078212
tutorials directory
0.010811132945196417
example code
0.010701191969573235
D:\> git clone
0.010407329945592502
number
0.010184990178159463
Linux
0.010166916205491965
CMake
0.009968481395229198
binary target file
0.009854398921352944
Visual Studio
0.009669608531886947
latest version
0.009499197225053968
LLVM
0.009312996900280666
clang
0.008699950074323174
Python binding
0.008261667632326185
vcpkg install halide
0.007954081427348058
% cmake
0.007707971062737193
HVX
0.00754820259805074
make
0.00735888321563214
active platform
0.0073476563008709975
time
0.0070947841872637165
C++
0.007088229167618715
commands
llvm-config
0.007085173089422337
async scheduling directive
0.006979315371515225
=
0.006880304976818429
vcpkg
0.006879333345712859
above instructions
0.006875941995974405
trunk
0.006854132597339743
versions
0.00674419849282515
simulator
0.006715073547426332
path
0.006575753861414695
shell environment
0.006239852011994948
Ubuntu
0.006191519542132323
threads
0.005867668572334109
default
0.005854006852144443
JIT-compile it
0.005780559725956091
full support
0.0057784799972207795
Android
0.005682132747391091
macOS
0.005671742078486799
bit x86/ARM
Ubuntu Linux
0.005507017664720786
compiler library
0.0054446437609673975
tools-extra ^
0.00540379849241525
tested host toolchain
0.005346702155060943
output
0.005323472689408045
parallel
build
0.005124645342818898
+
0.005071641272849242
Halide

Halide
0.005050929200909688
dependencies
0.0049267639144558156
-DLLVM_ENABLE_EH
0.004900007542722837
writing
0.0047067493631662485
generated pipeline
0.004441521916741589
NNN
0.00440512248067045
-DCMAKE_BUILD_TYPE
0.0043004569216267
-DLLVM_ENABLE_ASSERTIONS
0.0042710596589896795
repository
0.004200823577685305
C++17
0.00419580511491532
binary releases
0.004147075927226387
LLVM_ENABLE_PROJECTS
0.0040736760704105585
tests
0.0040650032186174126
MSVC
0.0040261303154618296
AOT mode
0.003957891246358111
Other package managers
0.003943138169780175
libc++
0.003912285489976547
more detail
0.003870379123360651
binaries
0.0038343563035211623
device
0.0037776615603326846
CPU architectures
0.0037570311300869352
mileage
0.0037390953912397685
Halide source tree
0.0037198711537887452
experience publishing packages
0.0037126336834692577
lib/cmake/llvm
0.0037059160612345583
/location
0.003705913637187976
installer
0.0036964867099459273
OS
0.0036691186041054123
C:\Program Files
0.0036098166213276448
GitHub
0.00360611354946976
variable
0.003604844307792633
AppleClang 12.0.0
0.0035648071600119543
minimum Halide backends
0.003542025900837592
-Thost=x64 -A x64
0.003536667069604299
high-performance image and array processing code
0.0035247073769896567
Download
0.0034634547175606124
Halide/apps/blur
0.003456453297109701
Halides AOT compilation target
0.0033955807542614506
builds
0.003378115578311518
suitable system-wide version
0.0033592421663219208
MSBuild
0.0033470486188635186
environment script
0.003261525190430227
hexagon-32-qurt-hvx
0.0032352281212135845
_ feature
0.0031321283853007606
Clang 9.0.0
0.0031200981293627423
trace
0.0030962501862440484
ClangCL
0.003017974633108452
programming language
0.0030128311170613915
OFF \
        -S llvm-project/llvm -B llvm-build
% cmake
0.0029577727336422186
windows libjpeg-turbo
0.002900472921890453
python
0.002820247774523841
Debian
0.002805657138797981
OpenCL
0.0027946681314584125
error
0.00277124688388157
cores
0.0027269209081634493
option
0.002719102668609707
instance
0.0026469892455154398
mkdir halide_build
% cd
0.002634775327409854
parallel jobs
0.0026339425450823428
PPA
0.0026294164501555434
point
0.002624462174732558
OpenGL Compute Shaders
0.0026218533008587046
HL_TARGET
0.0026061664197445443
Release
0.0025989951839519333
folder
0.0025883280411008068
HL_JIT_TARGET
0.0025828896568465126
work
0.002563473208759332
correctness
0.0025345460627993707
utils/HalideTraceViz.cpp
0.0025308985234974908
set
0.0025303356628049094
LLVM_DIR
0.0025296228581813836
CUDA
0.002524424795734999
byte vector
instruction extensions
0.0024985283492472365
https://github.com/halide/Halide/releases
0.0024911503498761577
original vendors
0.0024898181526595967
Conan
0.002480642678982378
Debug
0.002478752227811413
lld
0.002476959844197627
users
0.002476690293648403
many popular platforms
0.002472597298614067
pseudocode
0.0024664278263406263
selecting Installation
0.0024656969296341247
MacOS
0.002465280313637335
Halide_REQUIRE_LLVM_VERSION
0.00246045281874483
program
0.0024593455896842202
500.2.76
0.0024585218183312873
CentOS/Fedora
0.002451977776622998
parts
0.0024411237884495937
Hexagon Vector eXtensions
0.002427577918904094
Ninja -DCMAKE_BUILD_TYPE=Release
0.0024260546215117344
Subsets
0.0024221513530526106
x64
0.002419772258145097
disk space
0.002416271286552018
/tests
0.0024146668289512555
ARM64
0.002411482991574623
QPM
0.002400517782778084
C ABI
0.0023969757402605425
Android, iOS, Qualcomm QuRT
GPU Compute APIs
0.002385878501445158
appropriate
HVX vector instructions
0.0023852190107294014
supported
combination
0.0023834875106780898
Higher numbers
0.002381553286265294
CPUs
0.002373381009816692
download
0.002372524626017161
D:\Halide
0.002370522842962896
mistake
0.0023698062445567914
lot
0.0023677005284997708
-S
0.0023669630902903526
Qualcomm Snapdragon
845/710 devices
0.0023663332638464776
issue
0.0023543698746689577
Compiler Version
0.002349995653295484
targets
0.0023471826603035065
maximum
0.0023446275936461996
caveat
0.0023437412931422283
above cmake commands
0.0023326781173297556
README
0.0023259157155459983
sets
0.0023198528930043947
respective project
websites
0.002317960783714014
compatibility problem
0.002317033779844207
D:\Halide\build> ctest
0.002313706591755673
HL_DEBUG_CODEGEN=1
0.002310262302517914
Compiled AOT pipelines
0.0023064399301957737
thread
pool
0.002306085531123493
Arch
0.0022959430515604637
addition
0.0022894548747985845
column
0.002283089667572645
Homebrew
0.0022722444264318864
libstdc++
0.0022712218866539993
LLVMConfig.cmake
0.0022606987834938213
https://buildbot.halide-lang.org/master/#/builders
0.0022551528830797047
data
0.0022473506052218214
Hexagon object files
0.00224621116327619
PRs
0.002245804219405455
run_tests
0.0022436284136984393
object file
0.0022401811554177316
active, first-party
0.00223916950610078
generated headers
0.0022338091233260813
same process
0.002233655894506975
place
0.0022205578061235457
cases
0.0022161982242217097
SDK/Hexagon_SDK/4.x
0.0022058003847493517
compliant C compiler
0.002201745342564632
llvm-13.0
0.0021942845435533958
system
0.0021892190077615267
r19c
0.002185920909761838
Apple Metal
0.002181304623686749
suitable binary
release
0.0021798460422211108
x86 linux
host
0.002177924738877287
notes
0.002170677286360333
x86)\Python38
0.0021696813845338203
WebAssembly
0.0021649445701516514
older XCode
0.002160230052333339
different generator
0.002157152246842495
examples
0.0021561697852158206
scenarios
0.0021498224740475655
D
0.002146146745808228
representation
0.0021442154563220623
maintainer
0.0021431528553557204
latest 13.0 release
0.002140215907673309
other package distribution platform
0.002134172337319784
test_apps
0.002132820303318614
Hexagon Series 600 Software
0.002128911666233942
Build
0.0020898708660570405
steps
0.002088699163830536
GB
0.002088606924331817
exception
0.0020748335573357256
pull requests
0.002063246940466254
vcpkg.bat
0.0020607342453049927
speed
0.0020554577525538943
memory
0.002051178793630375
apps compile
0.002047831205601349
D:\> cmake --build llvm-build --config Release
D:\> cmake
0.002041477003246676
things
0.0020349648386792925
bin subdirectory
0.002021722529789043
windows #
0.0020214635555568404
use
0.002016704504478046
full source distribution
0.0020046455412146974
llvm-build --prefix llvm-install
0.0019975686803900133
SDK installation locationexport SDK_LOC=/location
0.001992923519871775
API documentation
0.001982494463701147
branch release/13.x
0.0019748576744886143
vcvars
0.001974359994237326
git repo
0.0019723844109658904
stdio" links
0.0019575961563988104
X86, ARM, MIPS, Hexagon, PowerPC, RISC-V
Operating systems
0.0019523446459761146
halide[target-all]:x64-windows
0.0019464460717197856
Release \
        -DLLVM_ENABLE_PROJECTS="clang;lld;clang-tools
0.0019372011142620772
main
branch
0.0019181850111403454
blur
export HL_HEXAGON_SIM_REMOTE=
0.001911210765262883
install
...
CMake projects
0.0018990591049477916
ON \
0.0018919600819509528
modern machines
0.0018867822645946804
fine
0.001882943567302525
D:\
0.001851442111922961
/src
0.0018117644543901414
libraries
0.0018012862070735016
llvm[target
0.001768704203067272
iss/
0.0017399906551586117
HEXAGON_Tools/8.4.11/Tools/
HL_TARGET
0.0016718501312081874
HL_HEXAGON_TOOLS=$SDK_LOC/Hexagon_Tools/8.x/Tools/
LD_LIBRARY_PATH=
0.0016631315769901254
