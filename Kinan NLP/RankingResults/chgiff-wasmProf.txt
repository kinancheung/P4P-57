JavaScript
0.06247714611349765
WebAssembly initialization
0.06009228927575865
force print
0.05878472132051421
command line
0.05668802145278909
output file
0.05143036313885027
wasm file
0.03980431054780792
instrumented .wasm file
0.032847477957156104
flat profile representation
0.02981804216843583
browser
0.02963097972569858
JavaScript code
0.029258846340962912
data
0.028967318113021036
results
0.027608058770091464
browsers
0.022691762736658176
part
0.020432788012538762
gprof
0.019850702192066992
formatting
0.019531780208460348
snapshot
0.019254765223551924
project
0.01897759447441078
cloned wasmProf director
0.018604802918376035
call graph representation
0.01827955602763993
masters thesis
0.018168434533548817
results.callGraph
0.01787878223840898
results.flatProfile
0.017670342068563116
following commands
0.017501265561922382
example
0.017150861664125567
Emscripten or similar WebAssembly compiler
0.01711616459419574
more info
0.01708305422856672
Output
0.016731483235003647
Node.js
0.016072323980650557
main function
0.015894460059985533
var results = window
0.015367797750406902
default
0.0153122162117568
Cal Poly - San Luis Obispo
0.015242013308564149
WasmProf
0.015213900400728994
recursion
0.014064574820149441
top-level WebAssembly function finishes
0.014015615967043711
.wasm and .js files
0.013957505301678507
Usage

Instrumenting WASM
0.013809682128253817
Usage
0.01368708303413237
full paper
0.01145188457854859
git clone --recurse-submodules git@github.com
0.011034072712615901
repo
0.010545154902863167
