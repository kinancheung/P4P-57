js file
0.049769382267375956
wasm file
0.04165673989012224
ocaml interpreter
0.04108022334241292
Installation instructions
0.04027384773201677
ipfs
0.029240790704612454
script
0.028792445008280484
default
0.02878921119072381
verified computation
0.028695235527893517
64bit
0.028636559904799585
information
0.02849870976435426
results
0.027016225463676165
root directory
0.02612731774778219
wrapper
0.024886700736717865
0xb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d30
0.024679663584782196
Install npm
0.023783269111327717
calls
0.020002775883661707
0
0.019603721293923324
source
0.01796516795188552
memory changes
0.0179364201646985
IO block
0.017559889976268537
correct path
0.016995090705155674
git clone
0.01693299423135839
TrueBit
0.016565657099699437
https://github.com/juj/emsdk.git

cd emsdk

LLVM_CMAKE_ARGS="-DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly
0.01648516583705826
https://hub.docker.com/r/mrsmkl/coindrop/
0.016331606866558074
sdk
0.016315908152517298
task
--arg arg
0.016239759916685692
fname
0.015955331654717124
necessary edit
0.015192390347657545
command line argument
0.014854643202471804
chain
0.01462476244890432
Node.js
0.014518560218190748
necessary path variables
0.01447791595270316
floating point emulation
0.014288640277590926
runtime
0.014274383872878691
tutorial

Options
0.014206636048246101
call_ptr
0.013989047653185647
node
0.013630061242357572
IPFS host
0.013572106273641794
successful output
0.012814816440896305
WebAssembly modules
0.012143658172590315
calltypes
0.01194100114784921
0xb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d30",
      "pc": 0,
      "stack_ptr
0.011927261914500577
emscripten generated wasm module
0.011813655477926694
call_stack
0.01167979677602619
code
0.0113002736421299
idea
0.011278023884376901
vm
0.011128755439039222
ipfshash
0.01085373823859034
0xb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d30",
      "memory
0.010603453552613535
input_name
0.009795666618269624
hash
0.008274939446297475
