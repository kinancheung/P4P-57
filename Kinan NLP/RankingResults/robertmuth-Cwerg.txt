code generator
0.052183680691971414
IR compiler
0.024409767046632756
Cwerg
0.024261229930100953
complexity
0.020014265102821317
own compiler
project
0.01929003025847945
supported target
0.013919700358086186
ARM32 instructions
0.013873086708538082
Python
0.013458073329646575
ELF executables
0.013264118979903677
C
0.01317604248762698
lot
0.01291376440230804
LLVM
0.012161398645136962
A32 Backend
0.012159509481272583
heavy dependencies
0.010711166135900863
-
0.010666137459408118
lightweight compiler backend
0.00982215422735527
Variable number
0.009706920456103106
additional 5kLOC
0.009643484970538584
implementations
0.009511276953298202
function level
0.009428906473622543
goal
0.009423170228437248
Most components
0.009296770564691307
c++ implementation
0.009284085593426278
rudimentary library
0.009163865096445524
implementation language
0.009012618095708552
Sophisticated DSLs
0.008946227013200055
tables
0.00875413274946312
Whole program translation
0.008568848619751556
optimizations
0.008567253111585441
X64-64 instructions
0.008061931113591863
proper C frontend
0.007995772162020133
de
0.007558797900901711
standard
0.007181461354248329
examples
0.006315502428328798
author
0.006266180798725122
Examples
0.0061079878802615065
Arm64
0.005910856507750733
API usage
0.005900580268955332
documentation
0.005853827686839537
X86
0.00565358518365794
Plea
0.005597617015584846
Arm32
0.005552501126772201
Ports
0.005526266142234616
10kLOC
0.005525441635766226
table
0.0054979382931832485
Lack
0.005492487131723709
Mir
0.005488228538152766
blog post
0.005479603957941582
speed
0.005468981025849623
shared lib support
0.005464314703013568
ISA
0.005439936246376759
misc
0.005437288363274855
Lean Software
0.005429704247757884
Elf
0.0054263076889117315
stack frames
0.005423854433443426
feature set
0.00539680655909314
responsibility
0.005380153934057185
cognitive load
0.005375657892838257
high performance implementation
0.00537401221984161
syscalls
0.005371880278390342
C++17
0.005367487267691441
state
0.005365297435407215
other languages
0.0053525342509043545
Note
0.005310680774204555
more regular architectures
0.005291795988666948
LOC
0.005286840978277735
era midrange desktop
0.0052723420193464595
spec/reference implementation
0.00524601042464445
prevention
0.005245266816460099
IEEE floats
0.005243786891028063
sec
0.005231600998572081
Wirth
0.0052228809366662255
cores
0.005216784105942035
simple cases
0.0052148203670606815
relocations
0.005214536017083082
art  compilers
0.005203538191632209
host
0.0051993516217096695
limited STL usage
0.005198557221468169
high end laptop
0.005178123532181833
complement integers
0.005172952411792585
rationale
0.005161095030776078
linker
0.005150719554448831
Speed
0.005133104153300182
Standard Library
0.005131515081107828
SSA
0.005114071616631682
Shared libs/dynamic linking
0.005108446370874364
explicit design goals
0.005102012867839209
generation
0.005079446578381859
Oberon
0.005079097630456823
%
0.00506192121632024
ISAs
0.005058132509017017
other Architectures
0.005041687687570134
various backends
0.005032185321838164
Windows
0.005027846177924001
favor
0.00501432640227597
subset
0.004924270267694168
benefits
0.00491567656148597
WASM Frontend
0.004868786927225265
programs
0.004852223635002822
expressiveness
0.0048386445821083715
parsers
0.004832968269433871
alloca
0.004825449563699263
https://drewdevault.com/dynlib
0.00479402372086327
ABI compatibility
0.004775510383862345
other toolchains
0.004758664607050743
disproportionate amount
0.004742140570462505
WASM/WASI
0.004735540702981652
fast translation times
0.00469174191870444
Intentional Limitations
0.004685923302819885
ABIs
0.004676708569398114
single developer
0.0046507883281701615
only object format
0.004647543198895245
syscall wrappers
0.004635818395598003
dedicated libraries
0.004627340036607122
plans
0.004587176383550501
stone
0.004567040303449466
Instruction
0.004535383481925576
AOT compilation
0.004533382597228083
de-)compiler
0.004519346106997359
Sophisticated instruction scheduling
0.004473614018421263
ELF object files
0.004470874010815926
pycparser
0.004468141931221731
details
0.004452567931009494
Line numbers
0.0044457962127368005
following features
0.004428638149766747
DLL hell problem
0.00442275126308141
size targets
0.0044024025272448395
bare minimum
0.004379523458300641
order
0.004348831697837959
work
0.004348230929817802
C++ exception/unwind tables
0.004325605093612773
printf/scanf
0.004324154760080874
RISC V
0.00429431371377156
optional) C frontend

Inspirations
0.004286989974184795
LLVM 
QBE (QBE
0.004261702202955416
memory 
bound code
0.004189507140986253
unicode and locale support
0.004177857802384931
blown dwarf debug info
0.004134397497436262
frame pointer
0.0040788402052097
shot
0.004050933905001616
Optimizer
0.004018941221420669
X64 Support Lib
0.004016044833960542
hints
0.004010313469930789
Intermediate Representation
0.0039166370004864995
new programming 
language implementations
0.003885973840528598
Delphis compilation speed
gcc code size
0.0038516004457754636
blown Single Static Assigment
(SSA) form
0.003754114829614251
modified use-def chain approach
0.003704708777273506
projects
0.003346544826171755
Cwerg

[Documentation] Status

NOTE
0.002629407573293741
