const vec3f
0.13686962549063908
N
0.054951361837265324
typename T
0.03614234307483639
f32
0.0346782895535285
p
0.02890941254520467
bool
0.018355973685729634
x0
0.017372517640931482
obb

// Point Test
template<size_t
0.015818885200781427
#
0.014812518286378182
swizzles
0.012988648503403592
view_projection
0.012598396421668254
vec2 v2
0.010698251130337288
v1
0.010464859707828848
aabb_min
0.010364137744430992
xN
0.010360697699418518
v3
0.010312953187460144
+
0.00949479992024152
vec2f
0.009138941106248542
type
0.008997150593955519
geometric test
0.008847305342593904
useful intersection
0.008837389243469853
p0
0.00876890170325906
C++11
0.008691832863277401
conversion functions
0.00865840608622513
dimension
0.008442664593527664
maths
0.007834263060837163
template parameter packs
0.007729043364882328
aabb_max
0.007557373200970047
vec3f azimuth_altitude_to_xyz(f32 azimuth
0.007491023995109816
Tests
0.007438919992717458
f32 altitude
0.00738159999536551
s0
0.00707513025222204
l1
0.006858013241797545
swizzle
0.006691852486273431
x2
0.006291702616003436
directory
0.006067174993746486
dp
0.006015858983297563
C++17
0.005847573550080132
GCC
0.0058321757593474115
C++14
0.0058186569924724525
std::vector<vec2f
0.005600618980456205
Clang
0.005439574056965785
= dot((vec2f)swizz.xz
0.005407032334132037
~/.lldbinit
0.0054036500399976956
improved readability
0.005388491746197378
C++20
0.005382773092789656
swizzle
swizz = v.xxxx
0.0053161429209565335
display.lldb
0.005300071790622948
WebAssembly
0.0052671392009666414
WebGL
0.005129045175478493
xcode
0.005099151920132647
contents
0.005058867537722377
geometric tests
0.005058731719591712
&
0.004971801734153887
header
0.004939317213403832
lldb debugging
0.004893680205365507
entire library
0.004890569586185464
vector swizzling
0.004879305878666268
min0
0.004817645626923059
simplicity
0.004794700636955064
EMCC
0.0047905444511975055
include search path
0.004783478390070399
Compilers
0.0047708641866992495
thin wrappers
0.004767109643587753
xyz_to_azimuth_altitude(vec3f v
0.00476568911137158
lot
0.004757078435266269
Live Demo
0.004715329665133192
Utility Functions
0.004668874346921623
max0
0.00466657078764676
other handy features
0.004607586374781923
min1
0.0045845547655897255
void
0.0045843192379395655
portability
0.0045750941979500115
matrix
0.004563443343107317
cp
0.004545115024245001
types
0.004537579894058318
constexpr std::max
0.004522311582623481
h
0.00450356937211508
closest_point_on_triangle(const
0.004483455749009078
graphics dev
0.0044670474401563515
closest_point_on_line(const
0.004458795406463847
cv
0.004434127199926456
aabb_pos
0.004416672995125326
quat.h"  // quaternion
0.004374236538833219
Generic
vec3f get_normal(const vec3f
0.00437399648918079
s
0.004359517571628964
huge union expansion
0.00435573050404239
implicit casts
0.0043514269180280184
SIMD
0.004292133228921496
vscode
0.0042902187061670425
vec
0.004284849788349211
games
0.004282110804464132
Colours
0.004261520216989686
debugger
0.004257745436863442
util.h"  // min, max, swap, smoothstep, scalar functions
0.0042452016836585765
plain c-style arrays
0.004244944803609969
visual studio
0.004189052856692066
max1
0.004157804004981502
x1
0.004152506659295089
rgb_to_hsv(vec3f rgb
0.004134064898138395
const vec3f& aabb_extent, vec4f* planes
0.004111058970905847
>
0.004047262876904522
poly
0.004021241805126627
void  get_frustum_planes_from_matrix(const mat4
0.003978004025270264
hull
0.003975166757430872
planes
0.0039480407377515195
side
0.0038931737441851976
vec4f
0.003892812039746896
obb
0.0038410619746553627
x3
0.0038121457639890043
vec.h"   // vector
0.0037710167851247645
scalar floating point ops
0.003746590867456095
provided display.natvis file
0.0037354750790671368
hsv_to_rgb(vec3f hsv
0.0037025595806016117
-Wno-braced-scalar-init
0.003678633552080816
shader
0.0036399767026442944
vec2f v2 = swizz.yz
0.0036332116301995227
max
0.0036217220964056412
rV
0.003573261148683353
line_vs_poly(const
0.0035106296904115967
deg_to_rad(f32
0.003466455174553191
swizz2.www
0.003434009705882582
project_to_ndc(const
0.003419973099739817
truncated
swizz.wx = v.xy
0.0033956130184717263
Ray / Line
0.0031133150549579065
codecov License
0.0030339042947088463
ip
0.002676559222782119
Convex Hull
0.0022059148440061313
