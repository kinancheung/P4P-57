WebAssembly
0.06334977974802058
compiler
0.04585752578717991
top
0.04310110629928496
class Link
0.041540350149471834
=
0.04060101408417438
new link
0.038724802448225244
int
0.031706651388692185
experimental programming language
0.028335336110208317
value
0.027897367246367585
JavaScript
0.027849377607926676
elif
0.026826894704391917
generated code
0.026132362662142437
compiled.c
0.02321242257068258
var total
0.022312111390610838
print("Hello
0.018473145909714685
documentation
0.018463294053177724
append(value
0.018284241253068954
function print(text
0.018018026144596987
string
0.017692924286059855
fast compile times
0.017464068353016348
TypeScript
0.017324350220690683
open source
0.01708480783724275
dependencies
0.01708219279729985
point
0.01688068272105657
syntax
0.01597693341207946
thin layer
0.015453218132997727
C.
0.015175821971671404
lib/thinc.c
0.015118287345673598
link.value
0.014480644519474572
http://evanw.github.io/thinscript/.
0.014408495816250757
int {
  var list
0.014111672053536903
#
0.01398345291935393
biggest issue
0.01386144954740211
new List
0.01385030959389128
C
0.013735847625132186
end
0.01369384966144523
real use
0.0136551544207057
extern function main
0.013546922454584524
Demo

An interactive compiler demo
0.013327840614656462
list.append(1
0.013140596627772621
experiment
0.01288259237735677
native version
0.012774674376924281
current binary format
0.012714734766965866
print("Unknown target
0.01247241620624917
node
0.012429967394810905
garbage collection
0.01216846205068073
updated versions
0.011361078012597678
ThinScript

ThinScript
0.010896304728919419
out/thinc binary
0.01056443759556269
