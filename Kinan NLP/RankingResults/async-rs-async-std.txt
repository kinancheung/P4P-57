Async-std
0.062011240340273964
web
0.029512170842087553
Rusts async/await
syntax
0.02425313427860714
async version
0.02271417122521026
stdlib
0.022201304422134537
threadpool designs
0.02216554559761571
async-native-tls  Native TLS
0.021284829637917977
Async Rust
0.0207928943856386
documentation
0.020665575803035033
low latency
0.02042443976441899
best API
0.020259348653004706
unstable" features
0.020135082919999842
std
0.019527176451986664
Surf  Surf
0.019444167998406214
More examples
0.018688402361468362
async-tungstenite  Asynchronous WebSockets
0.0178356693836935
rust actors framework
0.01694620695663534
productivity
0.013872290099832091
performance
0.013867942937716293
gio
0.013746380571561294
futures
0.013464697644276004
tokio
0.013366013648398305
Surf
0.013281351850539936
reliable basis
0.013090532194337057
Intuitive
0.012835999206452493
Complete parity
0.012822672821805088
networking
0.012579523509239727
network driver
0.012302489598557417
file access
0.012200613477132439
println!("Hello
0.012185997936718283
world
0.01210603955895406
friendly HTTP client
0.012091447942276784
Tide
0.011774334642608375
standard library
0.01176463863079709
casual Rustaceans
0.011711509266568765
veterans
0.011626277869136557
cargo
0.011398094093963725
Philosophy
0.011333978469781673
high pace
0.011223403494997978
async fn say_hello
0.011175125017625213
% safe Rust library
0.011143504724870731
Postgres
0.01114261193402566
ultra-high
  throughput
0.011127296886882855
set
0.01100995620187973
Clear: Detailed documentation
0.010950692732066962
async_std::task
0.010920189761502124
vision
0.010910551918674691
compile-time checked queries
0.010888241422328457
SQLx
0.010870912825636622
single-allocation task
creation
0.010723878806520284
robust allocator
0.010688034997828189
APIs
0.010662508019718901
asynchronous counterpart
0.010645838776234871
SQLx  The Rust SQL Toolkit
0.010603782541745318
accessible guides
0.010589312076543022
smooth system
0.010584246452497987
Rustls
0.010423562000448474
adaptive lock-free executor
0.010370085355902952
task::block_on(say_hello
0.01023436207766181
fn main
0.010171490552874621
Rusts familiar stdlib API
0.010170121980332784
full support
0.010046046826862673
std::future
0.009814164984182734
one
0.009790599552773347
cargo-edit installed run
0.009593647972132018
ground
0.009432374403301773
Sync Rust
0.009230826723644048
blazing fast compilation time
0.009075783411350047
crate
0.008135716955285434
interfaces
0.007769080320468361
License
0.007597861298411576
