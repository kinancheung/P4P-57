yaml snippet
0.028612445259634554
Python web service
0.018425429400113453
double epsilon
0.016424180833297643
root
0.0149817078208808
web worker
0.01291133622815298
Python
0.012900771055070362
result
0.012432102357380579
calculation
0.01225131059531237
form
0.011949387004862241
solve function
0.011426967901050245
C++
0.01126922560499194
WebAssembly language
0.010454803275457463
web application
0.009350066930795422
-
0.009289377210343435
page
0.009102460655776655
=
0.00902173222415078
JSON schema
0.00886490338468668
web browser
0.00853312348836862
request body
0.007853596312164358
content type
0.0077190432678180985
React
0.0071387481932969
Node.js
0.006673393116767835
code snippets
0.0065082521868719285
OpenAPI specification
0.006485586823139825
value
0.006337608180142117
openapi
0.005968022895455824
Initial guess
0.005935015617155592
const
0.005856666485938146
algorithm
0.005617493694908094
Apache web server
0.005610032975090329
import-wasm-fastify
0.005585957607742618
file
0.005570965783440921
GET http request method
0.005546574107431331
title
0.005352800725589199
message
0.005332221730640857
number
0.005183687477760634
chapter
0.004994374352147105
heart
0.0048621460001948185
py
0.004803085507657495
task queue
0.004700177214939577
no_entry
0.0046541582983099065
submit button
0.0042241704832417055
JSON
0.004124460189083316
Celery
0.0040960822410195455
response
0.003985765066209208
response body
0.0039693605984212925
return
0.003960528554616102
_
0.0038760015432288256
example equation
0.003697626138466515
NewtonRaphson class
0.0036823660646705426
pool
0.0036720441604414723
jsonschema-app
0.003578292304868298
event
0.0035399155076322013
react
0.003529666818804996
worker threads
0.003513623139719651
returned HTML
0.003501825985206853
const createModule = require(./newtonraphsonwasm.js
0.0034032839160434173
route decorator
0.0033903659325618253
bindings
0.0033450662264659387
name
0.0032646768385036647
CGI script
0.0032628417286776185
Python based web framework Connexion
0.0031802031971034463
handler
0.0031523581837046666
HTML pages
0.0031484877213882913
files
0.0031381884573430906
payload parameters
0.003135090665757986
plugin
0.0030807359253674396
Fastify
0.003065988052095133
newtonraphson
0.002990410431036337
Initial values
0.002976303058172685
Flask
0.0029732895023614134
Swagger
0.0029567664579547813
Accessing C++ functions
0.0029256566060914674
HTML element
0.00280280957601067
language
0.002800082499905537
variable names
0.002725064211248485
binding
0.002715445753132029
JSX
0.00271248753083502
schemas/NRRequest
0.002704968969343772
pybind11
0.0026835619495874006
new thread
0.002670551509984639
curl
0.0026455631095637887
-20
0.002644059515969091
guide
0.0026021065848688667
plot
0.0025965101147547164
OpenAPI
0.0025767780338524985
>
0.002536162973909936
job
0.0025300585456098507
heading-component
0.0025114881373453986
progress
0.002482622201823648
handle-message
0.0024587560184854197
global OS paths
0.0024399901551183873
Connexion
0.0024233143469289836
responses
0.002413823308417992
duration
0.0024101333709474412
input fields
0.002404975159395378
Docker container
0.0023482684366856383
flask
0.002346716266626597
port game engines
0.0023434407306061867
contract
0.0023200014834259867
RESULT
0.002316062883059054
running tasks
0.00231345846103813
urls
0.00230128704761428
doctype html
0.00229793986840974
Redis queue
0.002260281266672239
default action
0.002254997082308832
apache2
0.002253446187046303
Newton-Raphson root finding
0.002244468819628153
json
0.002243596995682027
Epsilon",
      "type
0.002216318394063342
imports
0.0021701516020279548
Example program
0.0021463700293255163
mathematical equation
0.0021426342673337485
pip
0.0021425199201172067
error
0.0020939426230726166
CALCULATE
0.0020845190926097558
#
0.0020589321197708567
requests
0.0020491296153764354
package manager
0.0020195936505983496
Pros
0.0020002515504798195
time
0.001992118651268108
await
0.0019871710479972236
render-answer
0.0019813945216384
Vega-Lite
0.001974433978052296
min
0.0019621996266408984
async function
0.001961202758986702
single path
0.001957856065062336
different url
0.001951455599790368
single threaded event loop
0.001934026834247953
directory
0.0019338462954488008
required dependencies
0.0019247347468135723
user
0.0019224539547955193
app
0.0019199731996623844
http.server
0.0019011554506624512
simplest React component
0.001900338895088755
cgi
0.001877208270981086
https://www.apache.org/licenses/LICENSE-2.0.html
  version
0.001876543924337084
command line
0.0018375495178841687
string
0.0018263753561766445
description
0.0018219213865443614
App component
0.0018174558429038838
web application or web wervice

Web service
0.0018147623096509574
Example</title>
    <script type="text/javascript
0.0018051638935486823
messages
0.0017950373402396465
&
0.0017462426425659608
const roots
0.0017259433191887299
Heading/
0.0016824792192122189
cgi-bin/newtonraphson
0.0016524777337265234
step
0.0016490526204957744
info
0.0016452325374744377
max
0.0016307587003126936
Root finder
  license
0.0016295274112246463
post
0.0016191773811684703
redis
0.001608539409394095
object",
  "description
0.0016060397408751317
Emscripten
0.0016040748308583878
multiple routes
0.0015922091834021605
use case
0.0015788976883230783
Complicated Apache web server configuration
:heart
0.001577787595024951
App/
0.0015731558952525155
feedback
0.0015668768213529414
label
0.0015636308492872502
low level
0.0015556115511430502
long initialization
0.0015554560449691861
guess":-20
0.0015495741752608065
onChange
0.0015471348394117184
Content-type: application/json

{
  "root
0.0015396521951979154
last argument
0.0015301450650275095
onmessage = function(message
0.0015214069896531627
head
0.0015154528659325809
message.data.type
0.0015065087645038684
def calculate
0.0015015186693744915
end-user
0.0015000160303050253
celery
0.0014831642600404947
array
0.0014756580904717728
POST request
0.0014706359471623027
order
0.0014464428278179952
useState hook
0.001446110996509595
consumer
0.0014220676126046258
/documentation
0.0014173316869373915
generator
0.0014010637628508638
task.js
  const
0.0013849187951969527
other work
0.001375404863157157
react-jsonschema-form
0.0013721711234227028
div id="answer">{message}</div
0.0013620640622785288
calculations
0.0013415033016035364
handleSubmit
0.0013344847025215782
root, setRoot
0.0013340053750944061
NewtonRaphson(epsilon
0.0013312280488741992
few moving parts
0.0013083516686580093
consumption
0.0013027302599593663
web frameworks
0.0012920878493129346
way
0.0012789436788097322
server infrastructure
0.0012786872973473713
cgi/cgi-newtonraphson.hpp
0.001275351964076955
float(request.form[guess
0.001272124503493885
several tools
0.001271543076773198
%
0.0012657619382890144
minimum
0.0012606281989394129
namespace algebra
0.0012577011832885705
properties
0.0012495013737091262
OK (code=200) response
0.0012425979922168241
first import vega
0.001241868229685084
parameter sweep
0.0012365310864703796
fastify-openapi-plugin
0.0012350002056897074
other
programs
0.0012243776105025903
SPA
0.0012213972410270574
methods
0.001216910640211902
Result
0.0012134750737708448
broker
0.0012133750750049027
root={root}/
0.001207235195878769
setEpsilon
0.0012054386741653222
runtime engine
0.0011918742010625372
CGI
0.0011896965277327668
large ecosystem
0.001187203288084911
big
community making web applications
0.001184191034217501
additionalProperties
0.0011840066892786964
shared library
0.0011765525954279946
classic way
0.0011741381388157095
submission
0.001171222202686513
std::cout
0.0011659387105192702
theme
0.0011634594368532787
text/html
0.0011589520744204108
YAML format
0.0011557331873981451
Babel
0.0011474591917653445
boilerplate
0.00114440439598848
parentPort
0.0011361470610712213
class names
0.0011305626257383174
validation
0.0011189883282450783
newtonraphsonpy import
0.0011134763480856453
lib/apache2/modules
0.001106838383175671
input type="number" name="guess
0.0011050552278369357
progress states
0.001102519335635999
http client
0.001099133001195283
--no-save option
0.0010947601853873905
WebAssembly compiler
0.001089135386893782
INSTALL.md document
0.0010867520142456512
stdin
0.0010861975667127164
onChange
property
0.0010841484690452582
Bootstrap
0.0010825792557885429
StaticPool
0.001070229335426616
interface
0.001062616508539456
Redis
0.0010570166643597701
milliseconds
0.001054814869630434
derivative
0.0010520828075630544
<
0.0010516822669471974
NewtonRaphson(double tolerancein
0.0010455705474082557
webservice
0.0010453228404111747
compile command
0.0010444563091514306
h1>{title}</h1
0.001039341102605579
performance.now
0.0010260368679873937
Common Gateway Interface
0.0010249648726360994
handleSubmit(submission
0.001019296868034916
exposeRoute
0.00101926365762996
cli.js
0.0010186714022724268
root = finder.solve(guess)
  return
0.001013924633346388
postMessage
0.0010115749508871705
time.sleep(5
0.0010098808186510535
root}.</p
0.0010097832488976523
onSubmit property
0.0010069095906026916
implementation
0.0010053610849160674
compact binary format
0.0010027841511582986
epsilon":0.001,"guess":-20
0.0010025739289012746
worker.postMessage
0.0010010633671287427
main = async
0.000986388347514963
x^3
0.0009778419442254627
double x0
0.0009732410493904277
examples
0.0009558531923545468
vega-lite-spec
0.0009529928382036448
head>
    <title>Example web worker</title
0.0009363909141648264
new Worker(worker.js
0.0009323323020878727
example field
0.0009310396697994329
good documentation
0.0009305282323896683
span
0.0009270829046664535
setRoot(result
0.0009180521910805104
worker.terminate
0.0009155087913211165
lot
0.0009134386270397019
ui:description
0.0009035384681717283
Lots
0.0009025918233008801
for="guess">Guess</label
0.0008973292995805244
importScripts(newtonraphsonwasm.js
0.000896114242977194
app.js
function App
0.0008886857225113149
index.html
0.0008880895424026809
derivative(x
0.0008876534119357168
worker.js file
0.0008824821979274073
worker-provider-onmessage
0.0008763249183192038
ln
0.0008683069924405933
handleChange(event
0.0008549611727672228
rest
0.0008511472317954987
require(worker_threads
0.0008463395080354631
elements
0.0008409398243080439
Ecosystem
0.0008384693170530825
change
0.0008338969304780561
machines
0.0008288227663136008
advances
0.0008223735716173749
extra functionality
0.0008189304358648419
Flash
0.0008167881659380239
conversions
0.0008149735640522943
mobile devices
0.0008144576005231115
humans
0.0008142307665018422
few lines
0.000813885252775208
plugins
0.0008120476115685562
Big learning
0.0008107326493067982
additional packages
0.0008063674594835995
JavaScript) engines
0.000805999625031957
sync
0.0008059662686353216
onEpsilonChange
0.0008039582716034291
docs.html
0.0008014532524754426
template engines
0.0008009213861555506
newtonraphson.hpp
0.0008007467450188812
subset
0.0008003247956305126
ref={container}/
0.0007990384335163965
LoadModule alias_module
0.0007921423008014128
stars
0.0007899154378133033
tutorials
0.0007889878472610684
downloads
0.0007880920700037497
coordinate
0.0007867293270157719
functional programming
0.0007848285886982839
many different platforms
0.0007821308217927005
mod_authz_core.so
0.0007805109460684355
pros
0.0007746786082176732
cons
0.0007741637572981479
V8
0.0007700694721930879
offline
0.000769869577907027
http://localhost:8080
0.0007688275714957362
transformation
0.0007667051830928533
onGuessChange
0.0007655297260242245
storage
0.0007615340146759629
problem
0.0007588314478009834
provider
0.0007586340608809184
serialization
0.000754888261614961
Python.h datatypes
0.0007492463665615592
changes
0.000749235688744165
package.json
0.0007491581343249275
type="submit">Submit</button
0.0007486289260618088
Exception
0.0007485697458355985
console.log(msg
0.0007485465746803118
dependency
0.0007484933273861714
innerHTML
0.0007468955111790505
Web application section
0.0007463009253902938
connexion[swagger
0.0007460063737832461
ui/
0.000745100984539682
other languages
0.0007449412643231069
@app.route
0.0007442719557363279
small API
0.0007442504941069841
JSON format
/documentation/yaml
0.0007434674481547942
common approach
0.0007428226368813948
transformer
0.0007415690098390879
api.py
def calculate(body
0.0007414264110196979
swagger
0.0007402002516664745
nested promise chain
0.0007401039056890694
abstraction layer
0.0007384856314127958
getElementById
0.0007380148559096992
value="-20
0.0007367747551948952
install pybind11

pybind11
0.0007367733023944914
new Worker(worker-sweep.js
0.0007352024394740161
CONTRIBUTING.md
0.0007351829566336189
requestSchemaWithExample
0.0007347929801518749
flow
0.0007343475481110596
callbacks
0.000734236097365965
parentPort.on(message
0.0007340398701226038
Configure
0.0007333088713197732
render_template
0.0007301311857237028
architecture
0.000729972942623041
easier reading
0.0007288996470737675
called Single Page
Applications
0.000728884137522656
syntactic sugar
0.0007256656268396868
later testing
0.0007247171421356022
value="0.001
0.0007239138923835723
webservice.py
0.0007236263144869731
pip

pip
0.0007234072400653874
repository
0.0007233162895959122
agreement
0.0007230420525200822
functions/enumerations/classes
0.0007212998059711628
license
0.0007209013491819667
fastify.register(oas
0.0007206516001316803
openapi.yaml
0.0007200679920519123
performance
0.0007194685682155044
newtonraphson.cpp
0.0007189103219051465
CPU
0.0007187643967087581
emcc
0.0007184812053605781
Apache-2.0
0.0007184661298173989
newtonraphsonpy*.so
0.0007168466794191501
methods=[POST
0.0007157761685276727
shortcoming
0.0007145583934206071
NewtonRaphson
  finder = NewtonRaphson(epsilon
0.0007131982983992254
JXS
0.0007126996176379874
store
0.0007122579782328975
oas
0.0007119205580619264
request["guess
0.000711088880337196
@app.route(/
0.0007109051985571299
computation
0.0007107938608807232
repo
0.0007103036296300675
other search results
0.0007086795948722141
schema:
                $ref
0.000707850068181796
background
0.0007070397657106938
React.useEffect(didUpdate
0.0007065773800201379
x
0.0007047959567892191
objects
0.0007047422080588882
./webassembly
0.0007043962749157138
backend=redis://localhost:6379
0.0007039667915000473
Promise
0.0007029401743377927
iterate
0.0007019566477151116
method="POST
0.0007015155198357714
label for="epsilon">Epsilon</label>
      <input type="number" name="epsilon
0.0007003925393503541
broker=redis://localhost:6379
0.0007003778811206922
normal
request/response cycle
0.000699574303480511
cli/algebra.hpp

namespace
0.0006978806046375486
-X
0.0006974414946992661
npm
0.0006968296622153361
low-level,
Assembly-like language
0.0006965021252122593
heading
0.0006961544865312624
stdout
0.0006948386554443775
object
0.0006946663919338409
June
0.0006945592345763955
inner workings
0.0006941416163064671
structure
0.0006935998596999521
document
manipulation functions
0.0006921988291333457
Proven technology
0.0006902475989356198
compilers
0.0006901627617617887
/openapi/newtonraphsonpy`python3-config --extension-suffix
0.0006900871829100516
operationId
0.0006897419598814201
plots
0.0006873835821416927
NRRequest
0.0006867773110996163
emit
0.0006853097259577677
epsilon = body[epsilon]
  guess
0.0006838802297412477
variables
0.0006832766054997491
ScriptAlias
0.0006824854757439145
Duration
0.0006816237437021594
docker
0.000676872428390228
styles
0.0006755710719721804
virtual environments
0.0006751541839462355
path+method combination
0.0006739122287810242
large active community
0.000672828023647797
React.useState(0.001
0.0006715270408288454
compilation
0.0006714257839615767
http://localhost:<port
0.0006708948521147998
machine readable documents
0.0006702416928715785
epsilons
0.0006683614118573428
host)
  } catch
0.0006681055558827107
webservice-threaded.js
const
0.0006679147694938388
aliases
0.0006666324796531059
ms
0.0006666201752218578
Celery form


Submit form
0.0006664425620670747
NRResponse
0.0006658080667656894
production
0.0006648569623363936
body[guess
0.000663488784176523
npmjs
0.0006633725951500997
Number
0.0006633547085385337
JavaScript Object Notation
0.0006629579377067424
tasks.py and newtonraphsonpy.*.so
files
0.0006614359431869011
@capp.task(bind
0.0006613983217739277
status
0.0006611643984080595
complex 3D games
0.000659635985206605
schemas/NRResponse
components
0.0006595911201779218
contents
0.0006591929191942529
redis redis
0.0006588785151000849
Flask global
request object
0.0006587301169305756
following command

docker run
0.0006583366287626327
api.calculate
      requestBody
0.0006579762620066802
timestamp
0.0006572684772028457
HTML, js and wasm files
0.0006571065548591258
Linux operating system
0.00065584666059132
long running C++ method
0.0006554995148788472
t0
0.0006550238753480969
open standard file format and data interchange format
0.0006533705391826711
JSONSchemaForm.default
0.0006525614630379256
@app.route(/, methods=[GET])
def form
0.0006522739859019515
flask/tasks.py
import time
0.000651684049815726
video series
0.000650781547450806
skeleton
0.0006496347961985035
Visualization
0.0006491957142303552
celery import Celery
capp = Celery(tasks
0.000647961520701649
lower level Vega specifcation
0.0006477007717974139
self.update_state(state=FINDING
0.0006472357805022066
localhost
    console.log(Server
0.0006470864928268601
fastify.route
0.0006469582761120427
EMSCRIPTEN_BINDINGS(newtonraphsonwasm
0.0006468548041599819
mod_alias.so
0.0006468449286813829
message.data.payload.epsilon
0.0006460199096502858
PYTHONPATH=flask celery worker -A tasks
0.0006457711236655989
public
0.0006453304725388213
int main(int argc
0.0006444253184675482
visit
0.0006436795370781699
python flask/webapp-celery.py

Tasks
0.0006432398294025075
@app.route(/result/<jobid
0.0006426435920955787
\
0.0006424113743177275
setRoots
0.0006423669917502649
terminal
0.0006423513440378823
routes
validates requests
0.0006399415517502776
pool.exec
0.0006384880243444372
nlohmann/json.hpp library
0.0006376372506715219
solve(double
0.0006376038011979342
Apache2 configuration snippet
0.0006365672800340272
tolerance(tolerancein
0.0006364964989235865
mod_mpm_event.so
0.000635410947393238
size
0.0006349986528668583
radio group
0.0006339268423188398
ref
0.0006332235242624573
require
0.0006329051700504687
place
0.0006323039342496007
py::class_<rootfinding::NewtonRaphson>(m
0.0006313470017154298
int main
0.0006311853074889764
reference
0.000629721298102866
servers
0.0006295750006272888
http://%s:%d
0.0006295051613567112
bits
0.0006291175434980816
ReactDOM.render
0.0006289088875113058
geeksforgeeks.org
0.000627194930621848
statusCode
0.0006271051201219189
shell
0.000626734029180711
cgi-bin/"

Start Apache httpd web server
0.0006255499164319343
pool.exec({epsilon
0.0006242727738182618
property epsilon"
}

OpenAPI web service
0.0006235718858134743
argv
0.000623514815270589
Function
0.0006226741469289953
cli
0.0006224768017246099
Maximum
0.0006221615090306854
ScriptAlias "/cgi-bin/
0.000619999349968511
sleeps
0.0006199557813161455
.constructor
0.0006178965045025497
worker.html
0.000617748275955805
example.html
0.0006172151454250837
simplification
0.0006157907370082334
typo
0.0006157104291800665
oas = require(fastify-oas
0.0006157020004752785
Lets
0.0006150729445680546
script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script
0.0006134458776001087
Apache
0.0006124226694457372
requestSchemaWithExample.example
0.0006120101045158555
private:
      double tolerance
0.0006113680030675579
createModule().then((module
0.000610995133287814
equation(x
0.0006104834537821336
err
0.0006094270867902346
x1 << std::endl
0.0006082417785147977
NewtonRaphson(epsilon=0.001
0.0006054837670764362
Step
0.0006020073785430514
epilon":0.001,"guess":-20
0.000599694554056339
\
  http://localhost:3001/api/newtonraphson
0.0005992836993076292
workers
0.0005970087522212318
-fPIC
0.0005964646142444746
same steps
0.000591501432484593
Compile
0.0005901461920391293
ways
0.0005887589172266152
py::arg("guess
0.0005887572073657926
vegaEmbed(container.current
0.0005877250791526081
node
0.0005839203098321449
src="app.js"></script
0.0005824200165979437
job.get
0.0005799115348884554
cli/newtonraphson.hpp
#ifndef H_NEWTONRAPHSON_H
0.00057811256554701
application/json],
    servers
0.000577006963596727
http://localhost:3001
0.0005755318649330638
setFormData] = React.useState
0.0005716681963006047
roots },
  "mark
0.0005712673707687149
chapters
0.000571051225705593
Derivative
0.0005706788016867291
worker-sweep.js
0.0005681112521250991
link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css" integrity="sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu" crossorigin="anonymous
0.0005640882393366758
src="jsonschema
0.0005613698226664392
result-component>>
function Result(props
0.0005610360987116061
Plot
0.0005594891050396483
script src="https://unpkg.com/react@16/umd/react.development.js
0.0005580907647407228
onGuessChange(event
0.0005542685124749352
blogs
0.0005503468172233386
inline
0.0005440619955172736
setFormData(event.formData
0.0005435680110872964
height
0.0005394576477798824
script src="https://cdn.jsdelivr.net/npm/vega-lite@4.13.0"></script>
<script src="https://cdn.jsdelivr.net/npm/vega-embed@6.8.0"></script
0.0005320161135332685
epsilon/duration plot
0.0004986213521872506
head>
  <body
0.0004832180115534141
src="plot
0.0004806555927853807
