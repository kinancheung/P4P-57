function
0.05476072639932683
var pImports
0.045498723340172166
return x * x
0.03605260049391256
new WebAssembly
0.034205549072051436
initial
0.03098270493120698
BINARYEN_ASYNC_COMPILATION=0
0.030606240749985407
maximum
0.028934056291762857
CC
0.028831397600058012
.then(response => response.arrayBuffer
0.022887037983004104
\
    rm
0.022481949369016027
-s WASM=1
0.021258288775763048
@
0.020643278062824438
fetch(pFileName
0.020248666143854684
abortStackOverflow
0.01805661929180314
Table
0.017882475777918645
allocSize
0.017877346833749738
table
0.01760323926214392
memory
0.017535698178591182
Memory
0.01750740766468445
SIDE_MODULE=1
0.01684114069953892
element
0.01675443722719137
nullFunc_X
0.016731456499194695
anyfunc
0.016173703201996997
abort
0.015641020274365387
ABORT
0.015470175016292609
tempDoublePtr
0.015134101191239016
DYNAMICTOP_PTR
0.014975186024864515
=
0.014956101762163266
WebAssembly.instantiate(bytes
0.014913552721051023
tableBase
0.01484898338769095
memoryBase
0.014490502333754323
env
0.013919123960622082
.catch(console.error
0.01344339947556654
CPPFLAGS
0.013105207051058908
global
0.01296677861388666
arguments
0.012669012542151881
NaN
0.012429850877061744
DIR_INC
0.012388625301991352
sources
0.012258249236856448
SIDE_MODULE=1 -o math.wasm




loader.jsfunction Config
0.012051958678889722
DIR_SRC)}.cpp.o
0.011842643363811472
HTMLWASM<script src="loader.js"></script>
<script
0.011813841520522518
%.d
0.011770622529132026
objects
0.011741482630347138
pImports.env.table.set(0
0.011365729702147285
x
0.01117163575834891
dependence=$(sources:.cpp=.d
0.011100062696550119
dependence
0.011035212528100484
math.cmath.wasmemcmdprompt.bat



emcc
0.01086784253275585
gnu
0.010831563166249884
LoadWASM(math.wasm
0.010397093945874188
emmake nmake
0.010218741277612542
#
0.010142603251005288
const square = instance.exports._square
0.00968464795252534
square(2
0.009140708906787335
.PHONY
0.008999788329849722
square
0.008537841660894042
Visual Studio
0.007608904673288997
WEBGL
0.005712461274939089
