CMake
0.029192080139136375
binary file test.wasm
0.020590614097193656
wasm-interp
0.02026409424089977
cmake
0.018189656285566014
WebAssembly binary format
0.017486096086809545
tools
0.01624321902574883
Address Sanitizer
0.015799834904408207
Visual Studio
0.014667643707333424
wabt project root
0.014543935561080211
new directory
0.014480984590598987
wasm2wat
0.013697319276793704
build type
0.013594468891434062
tests
0.013207069414194082
# meaning
0.013116801047924651
multiple wasm files
0.012790760758338491
wat2wasm
0.012773380943050975
test.wasm
0.012621719368463801
other configurations
0.012438449967452933
clang-debug
0.011891289892354261
example
0.011479954192359918
WebAssembly Binary Toolkit
0.010715238147326774
clang/Debug/
0.01043532421908145
changes
0.010194755185598462
spec interpreter
0.010170485465662377
gcc
0.009900256363625095
exported functions
0.0097336330717501
macOS
0.0093513985681914
DEBUG
0.00930543633363859
gcc-i686
0.009282584726238578
Clang
compiler
0.009094943204407497
uninitialized memory
0.00904278908589793
test/run-interp.py
0.008961746166072032
dir]
> cmake
0.00870172422292802
additional help
0.008525708160799434
CC=gcc scripts
0.008356270502640168
debug
0.008350288762171356
cd
0.008283390608932748
print information
0.008238256207117045
spec
0.008238001906781487
build
artifacts
0.008088657691022015
LLVM sanitizers
0.008006610359288737
config] parameter
0.00793380055393348
suite
0.007771301525593588
WebAssembly text format
0.00770446909199539
default
0.007663246820285444
verbose output
0.0075772899385793055
re2c
0.0074396435770470015
text file
0.007196891510057946
sanitizer name
0.007069892990622885
exports
0.006980551343698939
following demos
0.006975683155310927
compilers
0.006484687506070489
online demo
0.006262181068830883
test/README.md
0.006174113461397804
spec-test.json
0.0060815640614791415
instructions
0.005997465270276511
Building
0.005984473622411116
spec-test.0.wasm
0.005930210705350235
configuration
0.0059213120715903116
WABT
0.005876230552683042
Modules
0.005826477281003537
Linux
0.005708244133962494
Travis bots
0.005689153368031296
Online Demos
0.005679145307946242
uses
0.005629199841463346
compliance
0.005594436843023784
Wabt
0.005468694321377861
inverse
0.005374044090837649
RELEASE
0.005331890726797344
spec-test.1.wasm
0.0052726417366301594
round-trips
0.005255836542510582
gcc-fuzz
build types
0.005224751409878497
combination
0.0052236854836964445
Binaryen
0.005196181143408799
gtest repos
0.005182332796565963
full fidelity
0.005177158775357239
available
generators
0.005170863653011419
list
0.005106227980645291
\bin
0.00507814949424457
empty, asan, msan, lsan, ubsan, no-re2c,
no-tests
0.005074164812665472
src/wast-lexer.cc
0.005069277247517973
testsuite
0.0050649253192920265
other systems
0.005048862491246903
wast2json
0.005020091229737754
JavaScript
0.00489850839730215
link
0.004875761885714079
travis-test.sh
0.004861560321801467
s-expressions
0.004829550825255008
optimization platform
0.004823081014451154
undefined behavior
0.0048014724121897764
behaviors
0.004799379880857924
command prompt
0.004781619091712448
higher-level compiler
target
0.004753965667678595
easier integration
0.0047376287712787984
stdout
0.004728439073611813
commandline
0.0047198621048906925
Undefined Behavior Sanitizer
0.0047004398274438875
targets
0.004696821593898609
lexer
0.004685824624807934
value
0.004684330750593731
Similiar
0.00467229569985147
result
0.004626632164512095
functionality
0.004619078752579719
ASAN
0.004617054743950246
prebuilt C sources
0.004597277447974068
make
0.0045616887355149835
update
0.00456163802133002
prebuilt source
0.004545393130952201
surprise
0.00452978659273673
invalid memory accesses
0.004521390099267127
elements
0.004518386249676346
PR
0.0045106775582416
use
0.004490961683763236
flat syntax
0.004486291702839932
byte
0.0044636499612413765
--target install
0.004433011251488358
dashes
0.0044209162563817106
src/prebuilt/.

CMake
0.004406619773617969
simple linker
0.004347766667010583
convenience
0.004338785239846258
MinGW
0.004321465564251115
MSAN
0.004306168080735402
LSAN
0.004293957404618228
bounds
0.004267909860295586
UBSAN
0.004229301648061506
Windows
0.004218249541601121
.wat
0.004192450499326343
development
0.004165831539992286
stack-based interpreter
wat-desugar
0.004148827467031378
C/C++
0.004136743813903045
# parse and typecheck test.wat
$ out/wat2wasm test.wat

# parse
0.004124642429993062
canonical" flat format
wasm-link
0.004095215748061224
parse .wat text form
0.004092884882272964
Clone
0.003984361276502471
target
0.003975596808730669
submodules
0.0038897078772831195
release
0.0038101987189782293
change
0.0033244285336411425
easy way
0.003236194120076797
