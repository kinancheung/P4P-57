Valijson
0.043630961127953706
underlying JSON Parser
0.03507673194301935
schema
0.03295092692568155
cmake target
0.021090790570986447
project
0.018028116932700247
target document
0.014584866572065355
memory
0.013564630858630229
versions
0.013504084657634535
example
0.013148091813329323
build
cd
0.011843897505082843
Qt
0.011550118939499317
JSON Schema v7
0.01117632865664684
subschema
0.010997979681258681
several supported parser libraries
0.010820159790189155
valijson
0.010746300302899945
strong and weak typing
0.010477263664341168
other CMake projects
0.010013562293105226
constraints
0.009859779660737025
exceptions
0.009498958224884339
simple validator
0.009355276035610201
#
0.009075499707035846
necessary headers
0.00893577164279379
test suite
0.00891854795756621
valijson/adapters
0.008847271340209946
bundled header file
0.008844473931829976
support
0.008411875248251943
build directory
0.00818887782146394
Validator
0.0080618289480115
Limited scope
0.008034631606674626
pointer
0.007808319913755003
Boost
0.007804895470256009
custom code
0.007704784841048026
SchemaParser parser
0.007493045778771227
conan
0.0074451534441629195
following code snippets
0.007181194190093974
JSON Schemas
0.007180697611963561
examples
0.007006359393366879
GCC
0.006784469231872007
simple validation API
0.006779356051925643
mkdir
0.006140812033811128
action
0.006135421699489834
properties
0.006057310640307737
constraint
0.006014912114166989
default
0.005952461972631143
ownership
0.005906934603394899
optional dependencies
0.005861311551024727
library
0.005725607061610365
external_schema
0.005707513686565791
packaging
0.005652987870824527
cases
0.005645069681428224
compiler
0.005562069760270422
issues
0.005517370916588441
custom_schema
0.00551133063344262
target
0.005489103939566224
interface compile definition
0.005487708579567277
VALIJSON_USE_EXCEPTIONS
0.005420043965869243
bundled version
0.005403495156611014
Generated documentation
0.005324908065182453
values
0.005284297571543842
sub-schemas
    Schema schema
0.005239725752396481
C++11
0.005181356250069517
application
0.005178698457648699
Test Suite

Valijsons test suite
0.0051746189627134495
classes
0.005105213010718236
-
0.005006895246973004
repository
0.0049681332750122695
string
0.004944650036377923
doc directory
0.00491728468649069
appropriate callback functions
0.0047326881036993396
git submodule
0.004725570542328623
hand-written schema validator
0.004627109441773896
!
0.004557961091222192
throw
0.00451225711520665
sub
0.004507282532400486
purposes
0.00405992459843634
Emscripten
0.004023164050685263
demo
0.0039003291452997645
Modern C++
0.003834668624087433
Support
0.0038161076570485696
notion
0.003749930296151253
Maik Riechert
0.003743169202622137
targets
0.003700423917978316
place
0.0036912397317178506
courtesy
0.0036275132483589395
format
0.0035850935862586026
screenshot
0.003561872096224452
std::optional
0.003532809553860267
WebAssembly
0.003528221607670314
Weak Types
0.003518720922237151
schemas
0.0035175578880046426
PropertiesConstraint propertiesConstraint
0.003495579943480233
specifications
0.003476376516663812
fact
0.003473522374956342
json11
0.003465627826608307
propertiesConstraint.addPropertySubschema("description
0.0034437547367550466
Poco
0.003441285728502156
compatibility header
0.0034383499592205323
git@github.com
0.003423704973207181
macOS
0.003421839326769293
afcc8d0
0.003412197484627053
schema.createSubschema
0.00340791825486507
Constraint
0.0033882257237280804
myTargetAdapter
0.0033865391208825666
stack
0.0033786326304599767
Demo

A web-based demo
0.003361667894012634
copy
0.003321066131124645
schema.addConstraint(propertiesConstraint
0.0033093396472959145
mutation
0.0033009319846720752
NULL
0.0032990160713465325
parts
0.003297110208390658
second callback function
0.003278581412703074
stack
        TypeConstraint typeConstraint
0.0032746766442864447
CMakeLists.txt
0.00325319464530631
Constraints
0.0032388055443339373
Draft
0.0032196890786816237
Install Valijson
git clone
0.003201429166961543
find_package(Valijson
0.0031876270000964677
package manager
0.0031583284202308117
location
0.0031495974531015776
vcpkg
0.0031476312164022417
inspection
0.003136644744177487
jsoncpp 1.9.4
nlohmann/json 1.1.0
rapidjson
0.0031241871585427415
scope
    const Subschema
0.003124012148559691
Package Managers
0.0031178268310290426
development
0.0030992929977757336
doc/html
0.0030724970697452803
picojson.h
0.003070362183460685
rapid feedback
0.0030569782141722044
MIT license
0.0030440472575927954
Content
0.0030402496192555007
strings
0.003027877125413202
original motivation
0.0030113216746907464
types
0.0030098851257184087
WebAssembly Demo

Documentation

Doxygen documentation
0.003007564385511642
value
0.0030058836351638174
doxygen
0.0029944840729603087
rapidjson::Document
0.002990361519835813
instructions
0.0029838808707150846
goal
0.0029791422212201205
incomplete <regex> support
0.002962910059475105
cd <project-path
0.002937870395294566
description property
0.0029342937572227144
Things
0.002929027881349929
Known Issues
0.0029137226564693243
jsoncpp
0.0029073921808349477
RAII semantics
0.0029066268913448983
v6/v7
0.0028930275336643703
valijson::SchemaParser
0.002890422004479955
module subdirectory
0.002871418233661126
RapidJsonAdapter
0.0028612280589568693
RapidJson
0.0028521562135558147
parser/adapter
0.002841204332491464
Valijsons JSON Reference implementation
0.0028230280080237375
self-contained CMake project
0.0028175311802908602
inspector
0.0028104192958404266
PicoJSON
0.0028034075670139284
Homebrew
0.002800729676002575
Import
0.0027998303230725246
number
0.0027969425186684933
Boost Property Tree library
0.002794872047813529
JSON Inspector

An example application
0.002791045366644746
find_package
0.0027841488545563837
Project Goals
0.0027805667047934826
appropriate macros
0.0027445712462899324
valijson::Validator
0.0027443468972760295
valijson::Schema
0.002738919266352628
--prefix qt5
0.0027234727550078464
bundle.sh script
0.002719663028704078
RapidJSON
0.002692921730152954
performance
0.0026923928599985837
PicoJSON 1.3.0
Poco JSON
0.0026832661647975186
executable
find_package(valijson REQUIRED
0.0026815490272500036
OFF CACHE BOOL
0.0026735572996219375
size
0.0026653664637639168
valijson
Schema mySchema
0.002633613788412713
validate documents
0.0025932764258132486
Parse JSON schema content
0.002573677699411949
Valijson helper function
rapidjson::Document mySchemaDoc
0.0025186146786855155
mySchema
0.0025084575155859346
myTargetDoc
0.0024893143110002068
Validate
0.002476595352424152
Simplified BSD License
0.0023928781087888488
header-only JSON Schema validation library
0.002305288860380862
more information
0.0022989463806687895
