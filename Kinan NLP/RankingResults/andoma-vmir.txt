Build status

VMIR
0.05415236741427608
machine code
0.03766883819841627
WebAssembly
0.028021964469628378
LLVM Bitcode .bc files
0.027928932382944516
own project
0.025062982770619316
C
0.023549255980445417
examples
0.022883356245923896
pre-built version
0.02021084807266084
single file src
0.015646576776821342
features
0.014806857293167209
JIT
0.0147534746305877
test/misc/src/sha1test.c
0.013652963840568362
tests
0.013244881663290046
bit more work
0.012723891037068382
tee
0.012448980299472955
-fno-vectorize
0.012058918318823919
sys/fs/binfmt_misc
0.011935129130276778
gcc torture test suite
0.011894419097816588
single line
0.010996804611852377
Bitcode
0.010220624422896023
standalone library
0.00999096795029135
default
0.009762196884990571
&
0.009638739860245868
functions
0.009450163787227635
Ie
0.009206218435048822
vector types
0.00920142157858633
./runtest
0.00910805230725755
m
0.008949071668495663
TLSF
0.00894093778395998
42s
LLVM LLI 7m 39s n/a

Status

VMIR
0.008925419484260845
memory allocation
0.008822734647714735
Use
0.008800916832052644
Rpi2
0.008777542701280058
lot
0.008707431819635719
support
0.008657515010912494
BCM2709
0.00859625002318118
random data

Environment
0.008350607948995283
src/
0.00832963694450983
C++
0.008309228042092156
MB
0.008148936267307108
Example run
0.008078100346290775
src
0.008031078331961192
option
0.007987084801442201
vmir.h
0.007980964988743722
M::\x00\x61\x73\x6d\x01::${PWD}/vmir
0.007977195880639922
way
0.007860623096487974
vmirwasm
0.007827428488528727
Google NativeClient
0.007815881620572616
mine
0.007808077138173446
same target
0.007800213842494087
wasm
0.007721062464692741
binaries
0.00763408751332558
Core i7 3.2GHz
0.00763145656390638
Native 0.39s 3.54s
VMIR JIT n/a 17.5s
VMIR
0.007572764748551194
Building
0.007560594762667198
example
0.007550823654623628
compile vmir.c
0.007391372201680773
API
0.007312249404349866
rise
0.007256805162779111
echo
0.00702978580939218
vmirbc
0.006998749391838313
bigger projects
0.006959227599077217
Ideas
0.006950123115504082
place
0.00694254070542572
more architectures
0.006927819414320689
document
0.006913387834471567
docs
0.006899543261150958
turn
0.006885320127935277
JITed.
No C++ STL solution
0.006864545786662233
same binary
0.0068493671605963265
plugins
0.006846371880242992
Binaryen
0.006825710730553947
classes
0.006802236108502721
-files
0.006686222591559439
kernel binfmt pointing
0.006608743707276995
means
0.006570094658014736
particular ARMv8
0.006565644967744513
execution
0.006556090855038168
x86
0.006508995461663711
optimization level
0.0064826367067140536
kind
0.006418352291064734
MIT license
0.00639121760826747
purpose
0.006327596793652945
LICENSE
0.006248257756396452
sha1sum
0.006241952203024724
bit ARM
0.006217553705532828
LLVMs own interpreter
0.006183693133244116
same directory
0.006125394494233903
simple linear search first-fit algorithm
0.006079375242244835
x86_64
0.006076365504570346
le32-unknown-nacl
0.005917196840675649
source
0.005906425470535987
primary
input
0.005832910068229375
Hello world
0.005823663286596406
Performance

Interpretation
0.005733874448736273
clang -emit-llvm
0.00563292161119745
helloworld.c
0.005597096243588666
following well known snippet
0.00553679674403535
small program
0.0054076302720181
Linux
0.005303957868651241
enough time
0.005170723330340069
printf("Hello world\n
0.005110255519628532
https://twitter.com/andoma
0.0046310847544039175
VMIR - Virtual Machine
0.0040786252879314215
