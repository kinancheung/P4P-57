Blade
0.05304815923436235
repo
0.039760251034596475
benchmarks
0.02627427364397779
cryptographic code
0.025773776210053546
speculative leaks
0.02467820818309165
table
0.021754128800446998
paper
0.02052028195453403
speculation
0.019598215373337696
static type system
0.019416632539678177
Wasm examples
0.018528123475545
top
0.017714534287779568
lucet-blade
0.017530225641447645
version
0.016001682144778467
Baseline-F
0.0159870911333748
--blade-type
0.01577218030345118
protect
0.01540817903577927
build
0.014542084065783768
expressions
0.013635383675420538
insight
0.013180694901105731
Makefile
0.013112354437259567
secrets
0.013034901640121846
new approach
0.01279780868396481
modified Lucet
0.012248614691513136
-SDg
0.011473382159720054
objdump
0.011408068349373407
wasm_wat/
0.010483951137229004
./analysis
0.00968407898228949
table.tex
0.009637961512993662
https://github.com/WebAssembly/binaryen
0.009613015821887165
stdout
0.00951485386364088
variables
0.008908975360106071
appropriate .so file
0.008875240136395457
Binaryen
0.008743779915722323
commit de6a314ab
0.008687008487492251
https://github.com/project-everest/hacl-star/
0.008610745646923627
dependencies
0.00857651041533372
actual LaTeX
0.008476352022422466
Ref
0.008473539318210859
dataflow
0.008434220219917398
sources
0.008376071649836782
Section
0.008340727854947518
rustup
0.008328205883064327
paths
0.008311688740331046
Cargo.toml
0.008310606787031685
results
0.008307977156876728
Other things
0.008284691180043283
fences
0.00826262845677902
Table
0.00824838951938608
speculative execution
0.008233867962172261
existing programs
0.008224558505312295
protects
0.008214039336841096
sinks
0.00818387256305167
cache
0.008155821573222989
messages
0.008146633519895401
skipped tests
0.008137168914554172
existing architectural mechanisms
0.00810256252934731
appropriate *
0.00804972664919465
Rust
0.008035795975875351
instructions
0.008015620243999136
Cranelift WebAssembly compiler
0.007951838053307122
bench
0.007920032732022074
appropriate
path
0.007905244354319368
fine granularity
0.007869862901567545
minimal number
0.00786974207663267
lucetc
0.007858318437242955
cryptographic primitives
0.007846582461815415
WASI SDK
0.007820401894340114
user intervention
0.007813861259380597
analysis scripts
0.007760834326593009
Setup
0.0077413195908968705
./wasm_obj
0.007728565842639684
vulnerable WebAssembly implementations
0.0077131753419925324
https://github.com/WebAssembly/wasi-sdk
WABT
0.007669429047925799
C-language
benchmarks
0.007474250567349612
report
0.007443229515365824
test framework
0.007417745064968464
generated WebAssembly
0.0073461899256863795
submodules
0.007071445884476027
type flag
0.007070902863297564
generated x86 assembly
0.00702797389901437
minutes
0.006745913590668805
blade branch
0.006703994073698134
various
outliers
0.006607800197557147
Cryptographic Code
0.006516611135103021
expression
0.006137499629759148
Speculative Leaks
0.0060516483511139025
LUCET_BLADE)/target/debug/lucetc
0.005998521906304595
WASI_SDK)/bin/clang
0.005901241224743085
v1.1 mitigations
0.005312596052287947
--blade-v1-1 flag
0.005224805561356444
default
0.0042882987937494154
