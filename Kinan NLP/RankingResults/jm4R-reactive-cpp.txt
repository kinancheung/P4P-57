s.connect([](int num
0.1451381071994005
namespace circle
0.06745561154742384
text
0.06699309246019101
b
0.05239104133296447
std::cout
0.04975264070985873
signal<int> s
0.04899959629922097
p = "foo
0.045839086420597266
std::max(a
0.03758926042902418
foo
0.03479068865732264
Library
0.030799060806381468
deeper documentation
0.03041667172591261
BIND
0.028430746191893525
demo
0.027173576673974888
example
0.02641573540456573
lazy value evaluation
0.02608594176107884
header <circle/reactive/properties_observer.hpp
0.025918335615757307
property max = BIND(a
0.024826157444050773
s.emit(-5
0.024700839268622942
CI build targets
0.02268611094634224
BIND(dependent_list
0.022635586845414023
Build status
0.02209228274297704
expression) helper
0.02207805876822138
emscripten 3.1

Introduction

Property binding library
0.021615289647666323
b = 75;
std::cout
0.018910831079448874
properties_observer<Properties
0.018579993670950486
reactive-cpp

Branch Appveyor Codecov
master Build status
0.015422787253345668
max(60
0.01465269606128778
Public types
0.013984361442590545
b << ") = " << *max << std::endl
0.013625811593514208
