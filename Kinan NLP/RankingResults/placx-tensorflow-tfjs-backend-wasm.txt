WebAssembly backend
0.06568215456787707
WebGL
0.02663853657014042
Import @tensorflow/tfjs
0.02657849374700572
setWasmPaths
0.026155779843308656
model =
0.024410348131706942
different directory
0.021364958896484945
WASM binaries
0.01753063008019145
Plain JS
0.017029089677661695
ms
0.01448562714328991
tf.setBackend(wasm).then
0.014014020601072801
script tag
0.013750613947953221
main js file
0.013732536928039945
many ops
0.01299670629157552
inference times
0.012537319662910596
SIMD
0.012507909921208
benchmarks
0.011937156231194622
M params
0.011715974046307415
medium-sized model
0.011702918500716407
prefix` argument
0.011462397665782
plain
JS backend
0.011287873698157338
optional usePlatformFetch argument
0.010597348134849829
MobileNet
0.010347042250239297
bundlers
0.009731807216857465
XNNPACK library
0.009510821237497417
files
0.0094373838681134
location
0.009353048082287655
environment
0.009157194146274602
main
0.009074505550671606
WebAssembly binary
0.008967273491350658
tfjs-backend-wasm.wasm
0.008952680211268663
following models
0.008380536704469385
fetch
0.008309015608602682
device
0.00757177317553949
comparable
performance
0.007259374559487323
feedback
0.00724297816120044
<
0.007148628504833085
Building

yarn
0.006970092481956039
A N/A
0.006957404908599283
A
Desktop Linux
0.006658514147928245
Desktop Windows
0.006637791302644486
CPU
0.0064907659596301496
Inference times
0.0063694366548212806
backends
0.00628489324575587
Parcel
0.006231782469917696
threads
0.006163493580858584
browsers
0.0061473225487259486
global backend registry
0.006115702972097342
WebPack
0.005986591260411844
EMSDK points
0.005822018419582317
NPM
0.0057439896557677115
tf.wasm.setWasmPaths
0.005634831615395922
iPhone X
0.005595674613642958
production
0.005578543771171714
~3X-11.5X
0.005495123958887291
details
0.005483883472175021
ES6 modules
0.005455815765491837
case
0.005446416823145821
install
0.005434799814349274
benchmark page
0.005414967412073752
~300M multiply-adds
0.005400137446071025
Chrome
0.005339643537454534
runs
0.005335176395392777
contributing
document
0.005329824263184852
Cd
0.00532546002035191
runtime
0.00532358868773293
activate
0.00531698652885358
instructions
0.005304013954815066
.wasm file
0.0052923977816027755
7.7X
0.005291579781583074
starter/parcel and
starter/webpack
0.005269439695969245
date
0.005259886818753354
contributions
0.005252639016173454
version 1.39.15
0.0051690404592627855
more info
0.005164066710363306
tfjs-backend-wasm-simd.wasm
0.005156521405557334
source
0.005156425103979624
cd emsdk
0.0051512765753257755
overrides
0.005147988804501434
~/emsdk
0.005106249989986844
decent number
0.005101297559501257
proposal
0.005097299202412578
setWasmPaths(www.yourdomain.com/
0.005084130257413868
www.yourdomain.com/renamed-simd.wasm
0.00508163749685878
www.yourdomain.com/renamed.wasm
0.005075648227990936
setup
0.0050685659367361215
Emscripten SDK
0.005059585482717389
advantage
0.005055433985430957
capabilities
0.005055374546029706
path
0.005020217044254151
meantime
0.005019155099862961
top
0.004991630944482278
second fileMap argument
0.004908364303829877
appropriate WASM binary
0.004876709000339652
threading
0.004874632115885869
SIMD + threads
iPhone X 147.1 20.3 941.3 N/A N/A
iPhone XS
0.004868118914414072
different edge-friendly
models
0.004830215878225558
example
0.004821434887342168
gradient computation
0.004802070081269102
better numerical stability
0.004796721366615752
wasm
file
0.004788241453457054
training
0.004754858041332274
point
0.00468172241860251
all_kernels.ts
0.004664167295293667
high-efficiency floating-point neural network inference operators
0.004659915843970676
tfjs-backend-wasm-threaded-simd.wasm
0.004639945458949183
upcoming features
0.004550303409027049
issue
0.004533342054502669
setWasmPath
0.004532725527749162
favorite bundler
0.00450927099886064
null /* file map
0.004394431004357763
alpha
0.00435554324550336
enough op support
0.00435210187665182
Pixel
0.004341946296859715
devices
0.00433613305263531
platform
0.0043234369054856205
SIMD-enabled and threading-enabled binaries
0.004306960251138794
regular binary
0.004231348177764802
TensorFlow.js
0.004212121726853349
A N/A
iPhone XS 21.4 10.5 176.9 N/A N/A
Pixel
0.004198327369461806
node
0.0041607833369672635
issues
0.0041217867598331535
Face Detector

Face detector
0.004109435171786499
const y = model.predict(img
0.00400614768578575
fromTFHub
0.003958892087946151
.toFloat
0.0038752331490993566
package
0.003823242753936659
module
0.0037434096126773104
import
0.003694676558424312
./scripts/build-npm.sh
npm publish
0.003628015831137868
.resizeBilinear([224
0.0035996710713731526
script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script
0.0035210768708294074
tf
0.003127887482059199
