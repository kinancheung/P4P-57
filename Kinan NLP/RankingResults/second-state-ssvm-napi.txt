function_name
0.040692525231395375
Arguments
0.02847231951972579
args
0.026315030057520974
result
0.02444447552113851
function name
0.02407599688020689
SSVM
0.023211528454155354
return value type
0.022560146386355107
users
0.022243904795633533
execution runtime
0.02195951087040415
Default
0.02091100420491661
wasm files
0.020407957946269702
option
0.01605655518823397
Integer/String/Uint8Array
0.015647600607969107
delimiter
0.015502353836904051
prebuilt version
0.014384946975055839
apt install
0.013985024294151887
options
0.013725450614093252
Wasm-Bindgen application
0.0129891314407663
vm
0.011784030340138262
llvm
0.011672132196079054
measurement
0.011382733266398146
array
0.011210411800005095
Integer
0.010285738707695035
source
0.009573431078865519
options object
0.009529537110073304
Wasm file path
0.009382008904312676
unit
0.009170192057743689
environment
0.009140083383766965
strings
0.008619796368201652
Rust
0.008595195298689233
Example
0.008284450719601044
AllowCommands
0.007856416788503923
Node.js addon
0.007646907127073186
executed instructions
0.00743085262930005
BigInt
0.007377583053125605
String
0.007302808470531264
Ubuntu
0.007239377176836765
Uint8Array
0.007238957187886239
performance
0.007186080691904768
following requirments
0.007173956792818035
Return value
0.0070884796041970335
ssvm-aot tools
0.0070151824193011286
ssvm instance
0.006946368590154376
project
0.006934918551794452
function arguments
0.006897748622731585
high-performance WebAssembly runtime
0.0063881438498683005
aot/file
0.006347449510311733
standalone wasm program
0.006314311139452553
server-side applications
0.006279356706334442
WebAssembly functions
0.006259156358182067
Tutorial
0.006210177473149611
compilers
0.006148106655523215
g++
0.006142781764147374
Node.js Addon
0.0061385101314987275
aarch64
0.006093200650987233
GetStatistics
0.006023553403104737
docker image
0.005904069919664445
InstructionCount
0.005830127783155667
Linux
0.005768281734239069
liblld-10-dev
0.005694991791001793
Napi 0.4.0
0.0054897408900030165
stat
0.0054865170716288355
Measure
0.005361776321876091
x86_64
0.005099605783382659
Second State WebAssembly VM
0.005068879546241954
setup
0.005043425754909115
SSVM execution environment.options args
0.004873616009231442
#
0.004796709049495045
Requirements
0.004768540293600262
clang++
0.004766198115229705
EnableMeasurement
0.004646850536930556
Tools
0.004623282314493372
libraries
0.004575069422785976
base image
0.004506239912063709
content
0.004421903638812301
/tmp/hello.wasm
0.004418242939477208
support
0.004405480725030813
number
0.004397264952402773
Users
0.004386367868817579
command
0.004373695986474697
Int32
0.004329324829189978
vm_instance
0.004313775340180534
name
0.004311280325417821
dependencies
0.004293431347759932
UInt32
0.004271663796542807
Int64
0.004270823217543284
AllowAllCommands
0.004266729337763379
second
0.004251989278586603
Wasm bytecode format
0.004235439906326169
current stage
0.004177671507131015
commands
0.004165401424245184
given output_filename
0.004156666838117679
UInt64
0.0041551887802970455
RunXXX("Func
0.004109813557305534
native binary
0.004091401841240431
Compile("/path
0.00402730813025658
ubuntu
0.00402090236262471
eei or wasi functions
0.003982478821651762
statistics
0.003970325986812195
active development
0.003965558873219531
VM("/path
0.003909501716140707
Host functions
0.003866004468466882
standalone wasm32-wasi application
0.0038483778814313737
Wasm exeuction time
0.0038312255697489843
RunInt64(function_name
0.0038269051357861395
\
    llvm-dev \
    liblld-10-dev

# SSVM
0.0038090713288531533
output
0.003806621770155323
cost
0.0037877531278058514
libstdc++6

$ strings
0.0037577966394398126
true,
  TotalExecutionTime
0.0037457696977525085
Run("Print
0.003745076199326378
ssvmup compiler tool
0.0037241394671023325
ssvm_options
0.003665718396312551
TotalExecutionTime
0.0036452280911266274
error code
0.003642470590352963
APIs

Constructor: ssvm
0.0036398936660067736
compilation
0.0036371620732453987
wasm-bindgen mode
0.003613841363968172
GLIBCXX_3.4.28
0.0036001400561101746
> void
0.003521296017963357
\
0.003508099667742262
RunInt(function_name
0.0034842655301583238
_
0.0034795089468208037
RunUInt(function_name
0.003347179514682835
appliation
0.003290565699505675
RunUint8Array(function_name
0.0032869882874241303
lib/x86_64-linux-gnu/libstdc++.so.6
0.003157851127781017
llvm-dev/focal,now 1:10.0-50~exp1 amd64
0.0031179057223020465
3.4.28
0.0031165216043656427
Amys math score
0.0030992144230384488
real/path
0.003060800045836993
Compile(output_filename
0.003018643561300284
WasmExecutionTime
0.0029922481660811548
Statistics
0.00273644645243297
InstructionPerSecond
0.0027101247250871548
