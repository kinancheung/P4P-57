WebAssembly library
0.08630968925415425
OpenDRIVE
0.05037085648550352
included viewer
0.04355243438773819
&
0.03940950401916821
cd
0.03724076631841663
file parsing
0.036698889671787346
mkdir build
0.035817342034140734
cmake
0.0315735751504205
3D model generation
0.0315242547524696
odr::Road road
0.03134709489779028
Viewer/ directory
0.028981394048121455
code
0.027997257915489057
example
0.026025669320049155
libOpenDRIVE
0.02533248002891609
3D models
0.02038735967153262
python3
0.019338109981924215
http.server
0.018503877639185266
core function
0.01763873933724343
odr_map.get_roads
0.017209996031320805
webserver
0.016982206437567322
JavaScript bindings
0.01659849982164254
roads
0.01638375102728432
following commands
0.016308116198833995
emmake
0.016128137626485354
odr_map("data.xodr
0.01583752728608234
odr_road
0.015484974848550617
xyz point
0.015464818231858687
load
0.015249232395877846
emsdk
0.015211040520626485
./build/test-xodr Viewer
0.014889175952475174
access road network
0.014855488936622533
/*h*/
0.014744890747761098
files ModuleOpenDrive.js/.wasm
0.014396042951054294
std::cout << "road
0.014387928038398551
odr_road.get_lanesection(0.0).id_to_lane.at(-1).type
0.01436421191768503
pt_xyz
0.014067338603845922
graph
odr::RoutingGraph routing_graph = odr_map.get_routing_graph
0.013861829919241819
to("501
0.01354117267382493
/*lane
0.013471517632920137
from("516
0.012855949115850062
ModuleOpenDrive
0.012789344340333294
std::vector<odr::LaneKey> path
0.012536117417431202
other projects
0.012306652924623965
lightweight, dependency-free, fast C++ library
0.011382028986297229
new Module
0.010642714501454
