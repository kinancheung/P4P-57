codestream
0.0713412278600026
_
0.07014060798791216
full image resolution
0.038965394839346794
\/
0.029758499177175435
bool requestPlanar
0.020704218265337627
single Decoder class
0.020090922635245204
uint32_t width
0.01911606254129717
component
0.01699378842474298
decodeLineAsUnsignedSamples
0.016469867752471945
Size getDecodedImageSize(int decompositionLevel
0.01603640169239133
bool isUsingColorTransform
0.01574628157761732
getCodestreamBuffer
0.015513488836372791
decomposition level decompositionLevel
0.015208556187857694
FrameInfo
0.014975850920516948
getImageInfo
0.014140771824203204
buffer
0.013247227035156704
line
0.013042423563242254
color transform
0.012857400468004631
Quick
0.012708005419401988
JavaScript library
0.01252586346513805
size
0.012334551203525739
HT codestreams
0.012253258283595646
output RRR
0.012203402417423383
RGBA 8-bit buffer
0.011617328187105638
uint16_t width
0.011529052305095907
uint8_t bitsPerSample
0.011222525114472321
getImageOffset
0.01022169577311591
limitations
0.009185999885011262
Bugs
0.008962075716013523
sequence
0.008576828029966519
dist
0.00857467512881416
support
0.008492273933917797
WebAssembly and ES6 modules
0.00845815531274134
UInt32 values
0.008359191084263194
Known issues
0.008295361714543276
bytes
0.00828580557921054
distribution
0.0081854372497249
decoder
0.007671800706858846
https://github.com/sandflow/openhtjs/issues
0.007639763444410333
JavaScript
0.007597509309442688
Emscripten
0.00757648323203126
Decoder::startDecoding
0.007549901138397424
JPEG 2000 codestreams
0.007538124711215715
npm run
0.007534989095257155
/___/
0.007518105623393151
decodeLine
0.00748643892478758
information
0.007448264505876685
Decoder::getCodestreamBuffer
0.0074418178247496435
src/test/site
0.0074151596441092826
openjphjs
project
0.007397623109826738
multiple calls
0.007376098326986961
repository
0.0073192281887143745
git clone
0.007318135131510094
external libraries
0.007304098073528762
number
0.0073032588705397965
example
0.007289376218015669
view
0.0072663595755849755
\____/
0.007242405781214996
Canvas element
0.007152057453692034
Decoder::decodeLineAsUnsignedSamples
0.007137197095807953
decomposition levels
0.007128094392033856
General
0.007107487997508038
index
0.007065959207409114
ES6 module
0.007059567246954507
scripts
0.007035212780526662
decodeToRGBAArray
0.006985725979459537
BBB
0.006887288525830312
client
0.006878781996670565
overall call flow
0.006847892674447399
top
0.006844278948004092
Decoder::readHeader
0.006838248997171063
isUsingColorTransform
0.006792468699622312
Point
0.006767793504882277
ultra-fast block decoder
0.006766257549528782
setup_site.sh
0.006720796303278461
downsampled components
0.006656734955109225
decoding process
0.006559671221574164
demo web page
0.006512291567190639
Rec
0.006505105702268104
Decoder::decodeToRGBAArray
0.006495388348083055
int getNumDecompositions
0.00645411082250847
ISO/IEC
0.006367786811169449
method
0.006342861014485157
getDecodedComponentNumber
0.0062632856969114855
site
0.006247818968223716
decoder = new Decoder(j2c_bytes.length
0.006120231801986927
readHeader
0.0061028858978299134
docker
0.006102514401251531
decoder_buffer.set(j2c_bytes
0.005863399463535846
horizontal and vertical downsampling factor
0.005668137560073579
progression order
0.005147247586543619
