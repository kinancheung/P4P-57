log
0.07608080683944597
version
0.03583524241256708
logger implementation
0.03244156150626713
lightweight logging facade
0.03156793086600112
libraries
0.02915251028877068
Libraries
0.02748844546831596
many available implementations
0.026184293498252992
executables
0.025714725045147317
release
0.025191140751911277
actual
logging implementation
0.023742164685602352
single logging API
0.02321991886903139
match
0.02299197781396316
find_a_razor
0.022432783721482403
shave_the_yak(yak
0.01883524590310897
pub fn
0.018277122426605796
older compilers
0.01818903151465669
compatibility
0.01781406915567778
fern


Adaptors
0.0176680937778987
loop
0.017271221105766683
Yak
0.01706488358188963
program
0.017042804753214614
log4rs
0.016755943456651774
other facilities
0.01652117821167311
dependencies
0.01643880381237769
trace!("Commencing yak shaving
0.01612781474825384
order
0.016116351955943103
priority
0.016049015061503327
consumer
0.015536103826097547
consumers
0.015521824207329189
syslog
0.015440819203258134
bar
0.01536894295105018
console_log

Executables
0.01482599637599526
runtime
0.014771647587631286
WebAssembly binaries
0.014763319643565663
trace
0.014739228245924427
changes
0.01467115698010604
information
0.014590951262158442
Ok(razor
0.014364685156745518
provided macros
0.014316217608052632
break
0.014128488857576116
CI
0.01391484363964881
Minimum
0.01387945165420022
use case
0.013800615518351999
yak.shave(razor
0.013466365365144294
Simple minimal loggers
0.013160186031068184
popular ones
0.01303740001572079
Err(err
0.01299891350902703
documentation
0.012390418964582671
function
0.012373996662121477
pretty_env_logger
0.012318197178783009
A Rust library
0.012154261747871972
razor
0.011344488621166448
executable itself
0.00990639795484198
