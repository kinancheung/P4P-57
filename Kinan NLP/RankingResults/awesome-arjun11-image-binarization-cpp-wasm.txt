PORT
0.06116591088634796
.wasm file
0.056442218687776165
local test server
0.04910880033008581
import http.server
0.04074773609252937
WebAssembly.instantiateStreaming
0.03662028378841063
Handler
0.03528839526139548
TCPServer
0.03394127088201776
httpd
0.03381387261168974
port
0.03355425357733811
wasm
0.033525324562247716
httpd.serve_forever
0.03309911824374173
socketserver
0.032817108015006397
Demo
0.031141216831056404
HTML ImageData
0.030481156778911327
HBY
0.03034269133418946
glue code
0.02982395318924507
c++
0.02971805238673756
Emscripten
0.029123811889515128
References

Otsu thresholdingimage binarization
0.02904379651439632
em++ img_processing.cpp -s ALLOW_MEMORY_GROWTH=1
0.02877076654700674
academic
otsus method Wikipedia
Loading WebAssembly modules
0.028471994013119784
correct MIME type
0.028309886773812354
action
0.027747098446035318
web
0.027319489838913934
EXPORTED_FUNCTIONS="[_otsuBinarize
0.026925302442506002
Handler.extensions_map[.wasm
0.0259475722738714
Content-Type: application/wasm header
0.025444966666155505
otsus method
0.025319344512815242
malloc
0.025314567069131808
Example
0.023554418851850126
image-binarization-cpp-wasm

Image binarization
0.017075620702143662
