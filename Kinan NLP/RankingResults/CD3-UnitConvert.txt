unit conversion
0.0334934751522452
unit registry
0.03252185824614724
CHECK
0.03147419106632938
units
0.02857537824505805
Boost
0.02798602583219476
UC = module
0.024174778640654957
== Approx(0.25
0.018377652409796566
Approx(24000
0.018275347965355983
CMake
0.018161885076794327
New Feature UnitConvert
0.017241034083387525
runtime unit conversions
0.01665051361447235
Units library
0.014392507733180156
Units
0.01379157169887275
dimensions
0.01322009313976674
CHECK(ureg.makeQuantity
0.01290291823613683
Quantity instances
0.012898410473686058
cmake
0.011556500722349938
string
0.0112914710615973
UnitRegistry class
0.010793323158367847
user input
0.010789491430798855
#
0.010688574046215609
var UC
0.009936594979969824
physical quantities
0.00926073114080055
terms
0.00913476650951532
WebAssymbly module
0.008678219189825505
ureg.addUnit("1 J = 1 kg*m^2*s^-2
0.00850863104573714
Unit quantity
0.007346860990760513
ureg
0.007180725449994902
project
0.00715627541724873
quantity calculations
0.007145616255079559
ureg.addUnit("100 cm
0.007042011496873979
Approx(24
0.0069396039225090266
Approx(200
0.006783018586149349
SI-prefixed versions
0.006430927865589548
Approx(32
0.00626123152229026
default
0.006172469736717896
ureg.makeQuantity
0.005897727244233342
q
0.0058227354029438535
q.to_base_units().value
0.005738836215699802
files
0.005579213715267652
Units support
0.005384411975386555
script tag
0.0053181505510883804
JavaScript
0.005213545647747352
q.to("g").value
0.00519589582904918
double>("2 m").to("cm").value
0.005188510280306253
directory
0.005181681700167708
targets
0.005147805162047653
error
0.005145924651627814
offset units
0.005117848964891986
dimension
0.00509715453843927
q.to("kg").value
0.005070594663831318
header UnitConvert.hpp
0.00493734944394894
double>("2 J").to("kg cm^2 / s^2").value
0.004924705602555846
Units system
0.004902998821854586
float>("0 degC").to("degF").value
0.004862537331443385
Approx(0.024
0.004738997542738895
ft","m
0.004710775540174091
getGlobalUnitRegistry
0.004692508600102823
quantity
CHECK(q.value
0.0046921176546546395
WasmUnitConvert() factory function
0.004642283092292108
first time
0.004639022913088656
boost/units/systems
0.0045869436919057345
g
0.004548144217372706
A
0.004538121197522369
var check_1  = UC.HaveSameDimensions("10
0.004529000180751578
Global Unit Registry
0.004522844112415603
football_field
0.004425442582121064
boost
0.004405738240825507
few examples
0.0042560899812194
cd /path/to/UnitConvert/project
$ mkdir build
$ cd
0.004101165213736597
pint
0.0040016898703068805
example
0.003969811358968731
Example")
{

UnitRegistry ureg
0.003945542155857804
UnitConvert

A small C++ library
0.0037611453778478897
kg
0.0036926966066312137
WasmUnitConvert.js
0.0036721110099019547
m
0.003637947404122944
double>(200
0.0035670696804873015
length_3 = UC.UnitConvertString("150 ft","football_field
0.003497414537906618
WasmUnitConvert.wasm
0.003494900753438592
SI
0.0034525571507889293
prefixes
CHECK(q.to("mJ").value
0.0034520873137427167
ft
0.003352280841065588
q.to("mmol").value
0.003334215624112542
q.to("mK").value
0.0033163646127769945
CMakeLists.txt
0.003313800507231901
Dimensions
0.0033098076333737117
double
0.0032945595540021678
q.to("s").value
0.0032428294913798084
q.to("kW").value
0.003238958528581201
q.to("mJ").value
0.0032271890298458407
q.to("ms").value
0.0032098149941785625
lines
0.003187330304597365
find_pacakge(UnitConvert
0.0031705687325925785
WasmUnitConvert().then
0.0031666479196275723
functions
0.0031350751056372344
pre-defined units
0.0031226304559381305
ureg.addUnit
0.0031220096414573233
hundreds
0.0031204374356934156
CHECK(q.to("carat").value
0.003091431590403064
libUnitConver.a
0.003082985662252575
browser
0.003077311061358498
set
0.0030465195518712615
UC.UnitConvertString("10 ft","m"); // returns
0.0030399751044944317
Spirit
0.0030370259343730594
q.to("m").value
0.0030332591015021855
dependencies
0.0030273030560299193
Approx(24000000
0.0030241041376124034
CHECK_THROWS(q.to(ureg.getUnit("s
0.0030234571825261936
numerical value
0.0030227559417850946
Limitation

Calculations
0.0029967120128278177
CHECK(q.to("metric_ton").value
0.0029965235789269256
q.value
0.0029914435268862376
Approx(9.95879467317e+29
0.002987358263315215
CHECK(q.to("bag").value
0.0029488778731900185
CHECK(q.to("kg").value
0.002938822250594719
q.to("mA").value
0.002928691315572297
lot
0.002924943430555875
auto
0.0029143542160921516
si.hpp
0.0029030494922825533
CHECK(q.to("m").value
0.002899744091264846
runtime
0.002899544526631222
CHECK(q.to("electron_mass").value
0.002899506896476929
wrappers
0.0028750728901517056
CHECK(q.to("short_ton").value
0.0028722519450505067
ureg.addUnit("1
0.0028700671994635386
float
0.0028682108333343433
exception
0.002861443434394385
Approx(2
0.0028595108429120687
Unit
// systems
0.00284256797714093
headers
0.0028287490946278175
reference
0.0028255535693330587
script str="./WasmUnitConvert.js"></script>
<script
0.0028166297179442364
wasm/WasmUnitConvert directory
0.002810346162743368
code
0.002792974564650774
ms
0.0027814210436558984
K
0.002778842676331582
instance
0.0027662772396934345
place
0.0027644079923327828
kJ
0.002761806702724059
mW
0.0027535830929468785
saling factor
0.0027435564381720224
mol
0.0027400359004330437
Builds
0.002737176133646527
limitation
0.002729280510782115
millimeter
0.0027231402581246373
function
0.0027132728210953272
boost::unit::gcs::length
0.0027116605851440078
CHECK(q.to("oz").value
0.0027108518106684397
linear scale
0.0027016963390724246
temperature
0.0027013375451651546
static variable
0.0026797579389650074
CHECK(q.to("grain").value
0.0026776059618863596
GlobalUnitRegistry.hpp header
0.0026769427414394527
CHECK(q.to("kg*m^2*s^-2").value
0.002672798004732908
luminous intensity
0.002672291193052213
cases
0.002668912237108084
Manual
0.002662018858866778
UnitCovnert package
0.0026557233110569476
screen
0.00265082907242778
arbitrary combinations
0.0026504685909972212
Approx(2000
0.002635875460929103
Wasm bindings
0.0026356950278436393
building web apps
0.0026143650403751316
cd
0.002602410903108094
WasmUnitConvert
$ emmake cmake
0.002592514540111715
BoostUnitRegistry
0.0025819398457363166
detailed description
0.0025661319422904004
command line option
0.0025256685066208087
UC.AddUnitDefinition("football_field = 100 yd
0.0024868495191846932
tutorial
0.0024809403810793934
CMake *Config.cmake file
0.0024745716059753203
scope
0.002421153940722626
Approx(250
0.002411922129300684
CHECK_THROWS(q.to("m
0.0023996624607639534
CHECK(q.to("J").value
0.002356707452874177
wire gauge
0.0023359385015759336
CHECK(q.to("kW*s").value
0.0023167630930216523
CHECK(q.to("kg*m^2*ms^-2").value
0.0023052551197561303
double>(L
0.0022861862151307907
CHECK(q.to("W*s").value
0.0022768137781540515
boost::units::quantity<boost::units::si::length> L
0.0022634549174040523
ureg.addUnit("s
0.002083404308931433
