JavaScript
0.04757074151570178
QuantLib
0.04083923045814291
var
0.02340282558418426
Wasm
0.02302604744219526
Date
0.018192201746206647
C++
0.017641763839871302
quantlib-wasm
0.01598540378819856
WebAssembly
0.015531970705620745
code
0.015105556634050252
many objects
0.014495518724173678
import wasm
0.013949541595591124
Schedule
0.01358847804584756
react-scripts
0.013433779330800647
version
0.013140893186988085
Python
0.012825108004403143
BusinessDayConvention
0.012710928645701301
prebuild Docker container
0.012676743436867817
app
0.012443063440716103
schedule generator example
0.010651075364609523
C
0.00951125774205376
Introduction

Quantlib
0.009475517279497244
client side
0.009004536211389618
effectiveDate
0.00876829882183173
memory areas
0.008709953453728596
TimeUnit
0.008533636549046392
browsers
0.008523456416066295
ModifiedFollowing
0.008473150149173275
Node.js
0.00845517058334141
server-side
0.008308443997149109
bindings
0.008075835185227833
var period
0.00795870305119601
time
0.007810195122703655
Embind
0.00774752537463856
library
0.007659296211035708
delete command
0.007421595351922395
Emscripten
0.007373583558036285
projects
0.00727021352137559
open source
0.007129484654948124
path
0.007129194488721984
sandboxed environment
0.007027898397382645
easiest way
0.006962454177636545
last line
0.006946493899578889
alpha mode
0.006887712814698534
Memory management
0.0067462913815852345
var nextToLastDate = new Date
0.0065550125584855744
quantlibWasm
0.006247505888098885
create-react-app
0.005962133949044253
#
0.005954351713093061
quantitative finance library Quantlib
0.0059521791577682535
Firefox
0.005724534704320333
PricingEngine
0.005708093380138633
Safari
0.005690001306984136
Java
0.005610464348291357
valuation
0.005577404906148718
Calendar
0.005524349222163222
YieldCurve
0.005503769794778347
hedging
0.005485278263560428
Chrome
0.005439759813432321
Period
0.005349616942703861
techniques
0.005340714217259198
financial sequrities
0.005312548940110689
N-API
0.005307738955626977
kind
0.005302404095065756
addons
0.005284755045927493
Edge
0.005283496572665965
TARGET
0.005125207141009809
None
0.005108737751963147
versions
0.004967081502720166
pricing
0.004951479481422519
many ways
0.0049398122138995856
classes
0.004929660521395536
node-gyp
0.0048939810014746584
external libraries
0.00484626594386149
derivatives
0.004787896121947425
npm
0.004786011322703082
terminationDate
0.0047614897366489994
client (web browser
0.004751944204819544
technique
0.004727878081347915
browser
0.004714568878498339
lot
0.004618768168174109
few lines
0.0046020219843894055
other hand
0.004561368669960901
Node
0.004526289329591291
problem
0.00448044960312485
use
0.0044764939482139585
many languages
0.004467283932596086
binding file
0.004399236174614697
case
0.004387844773412372
long list
0.004381219442109298
progress
0.004357268588383067
High-level languages
0.004342610574074196
operating system issues
0.004336500089246173
JS
0.004309685183303382
new Period(3
0.004308040002709734
Code
0.00427601826518142
work
0.004237304798192429
DateGenerationRule
0.004228234265167672
default
0.0041798900569330645
mallinfo
0.004167029425958788
dependency
0.004140874887177728
catch
0.004138649818757169
trzeci
0.00402979054390562
native speed
0.004015161760950742
locateFile
0.004014311454449642
path.endsWith(".wasm
0.004004671131306132
loop
0.003974706956413825
command prompt
0.003962997630566361
project
0.0039069539483002295
extra number
0.0039043898331448013
asm.js
0.003900798333074514
configuration
0.0038901320814377343
emcc compiler
0.003865923513995639
destructor
0.0037996397220116684
i++
0.003793829268426154
Date.fromISOString("2019
0.0037902175591932644
implementation
0.0037450578646543967
right place
0.0037270989184848913
https://semver.org/
0.003726146208699616
fork
0.0037226658793777555
schedule.dates
0.003699668983247804
correct equivalent
0.003684272406260068
dates.size
0.0036832292248729958
developers
0.003667812755112597
high level programmers
0.003653306172409327
date.delete
0.003648014396810649
finalizer
0.0036158693711954345
d.delete
0.0036067760337955635
.then((loaded
0.0036003251649335656
console.log(date.toString
0.0035564109655612116
d = dates.get(i
0.003539826592637064
documentation
0.003538694565331539
console.log(Date.fromISOString("2019
0.0035346570595745004
dates
0.0035307486201333663
method
0.003478534452699552
webpack
0.0034752361164213353
QUANTLIB_VERSION}"
0.003421666168689173
useState(null
0.0034114415045507765
modifies script
0.0034051125814205333
useEffect
0.003369722584699286
setQuantLibLoaded(true
0.0033597161564816918
order
0.003357236762010562
"${version
0.003357186111628691
functions
0.0033344711043492383
installed script reference
0.0033237714781470026
Usage
0.0033214037822168778
effectiveDate, terminationDate, period
0.0033045745163481576
available

git checkout
0.003076150043285049
console.log(m1.uordblks - m0.uordblks
0.0028579459779515
CircleCI
npm version
install size

quantlib-wasm

A wrapper
0.002359746194344343
