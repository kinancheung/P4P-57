scale degree
0.05279152009243434
scaleExpr
0.04767676495193758
frequency interval
0.043131889444445175
newTuning(const char
0.03886156939704299
int baseNote
0.03721596798076698
t
0.03579056692689469
math expression
0.032286668970344476
baseNoteExpr
0.0279917489757281
baseFreqExpr
0.027172338464178273
double baseFreq
0.02673411278381077
note number
0.026242721312971617
Number result
0.02573538698963197
tonic
0.025620922434986548
newline-separated math expressions
0.02543253807821898
tuning
0.02309162383709467
TinyExpr
0.02186892097036966
octave
0.021578905307071235
double noteToFreq(int note
0.02077514992622019
Tuning convenience class
0.020503486790704028
C API

typedef struct
0.02017194880396874
degrees
0.01694121846901698
limit
0.01584864399201012
JI
0.015791464944727617
WebAssembly
0.015500972215719125
size_t
0.01519619160100151
Numbers
0.014939065340957305
types
0.014886958697354239
C
0.014412173603592468
Array
0.014404213803092241
\n
0.014180288329949286
array
0.014038509121633734
Math expressions
0.01394473464689545
same functions
0.013897654646451521
noteToFreq(60
0.01352084869959405
noteToFreq(note
0.01263242464655251
nearest integer
0.012509433398505205
sequence
0.012208325786788652
free(t.scale
0.012008459766785388
double baseFreq
std::vector<double> scale
noteToFreq(int note
0.011942159048890873
String mathExpr
0.011856543633000233
Examples
0.011806128898118329
Object
0.011805733886465832
memory leak
0.011609787801423752
free(tuning.scale
0.011389826085100755
Frequency Explorer
0.011334635268285945
tone equal temperament
0.011090357305285889
musical scales
0.011070740483650601
string format
0.010242164508091161
69","440","2^(1/12
0.010043131550423157
script src="scalemap.js"></script
0.009677668039599198
new Tuning("69","440","2^(1/12
0.008594789342216028
