CMake
0.034264577267343145
wasm-interp
0.022121189146537268
tests
0.019787653520294064
WebAssembly text format
0.018131932448093697
cmake
0.017923718154780364
# parse
0.01661190990970911
wabt
0.016538281195412168
separate directory
0.015606192129621523
file
0.015469837380254649
wasm2c
0.014176291388135179
build files
0.01348614716605027
tools
0.012314672263964904
print information
0.012154343518577195
Address Sanitizer
0.011763576897827125
WebAssembly Binary Toolkit
0.011519313787564637
macOS
0.01149972032572764
example
0.011472594371786037
Visual Studio
0.010945707889137464
build type
0.010305393754243608
additional help
0.009938685230999183
--help
0.00992741715688583
other
systems
0.009600019811744935
other configurations
0.00941242979829823
spec interpreter
0.009303889285631623
clang-debug
0.009261764455799808
DEBUG
0.009243914481353987
mkdir build
$ cd
0.009150479836924894
WebAssembly binary file
0.00866377527032289
feature
default
0.007987440963814757
clang/Debug/
0.007809903990729577
tool
0.007766411650119855
wasm2wat
0.007749340205899772
wasm binary
0.007723648052203012
operations
0.007631709117095233
instructions
0.007312396010684628
gcc-i686
0.007303170668856078
validate
0.0072354722813956504
flag
0.007221739905889052
Clang
compiler
0.006960459872774735
Linux
0.006930047578693668
exported functions
0.006802189683010362
uninitialized memory
0.006765364981874935
debug
0.0066349981409184735
dir]
> cmake
0.0065475566644008
wat2wasm
0.0064589025010036985
fuzz
0.0064049410253901266
# meaning
0.0062902368544298865
project
0.00628943779278821
Name
0.006224117132037384
gperf
0.00621317957047156
Ninja
0.00615127435387973
higher-level compiler
target
0.0061349720534722195
config] parameter
0.006020607344006222
LLVM sanitizers
0.00595286067850345
wast2json
0.005871713958045512
default
0.0057163426968254915
suite
0.005681092274845405
new keywords
0.005628124439639975
--enable-exceptions     
mutable globals
0.005497573013763457
gcc
0.005245927916414715
sanitizer name
0.005188315950236879
normal way
0.005158043321434304
ubsan
0.0051067421674038
lsan
0.00510438342668633
int
0.005047077262475856
compilers
0.005018949607895514
WABT
0.004997820554357519
exports
0.004914724003910416
online demo
0.0047314970135120225
errors
0.0047259872672170715
msan
0.004690352667815324
configuration
0.004585655121068002
target
0.004486417614022206
changes
0.004473671273184711
test/README.md
0.004429140514810256
Online Demos
0.004317001858241529
uses
0.004233941376307259
compliance
0.004218394967745593
toolchains
0.004215688012629156
Wabt
0.004183539139259634
https://aka.ms/cmake
0.004127503651563968
more details
0.00411349048042384
inverse
0.004075636770912939
combination
0.004041090954526767
RELEASE
0.00403021542689399
run
0.004024678222210995
round-trips
0.004011084861580071
dashes
0.003960634210847392
development
0.003936861143912812
full fidelity
0.003924793874500611
cd
0.003919077936755825
available
generators
0.003918972397344969
reference-types     
annotations
0.003894441768223378
Binaryen
0.0038761007995287973
syntax
interpret
0.0038758368250045665
list
0.003874259714784818
disable support
0.003827655174462838
JavaScript
0.0038071025433990572
s-expressions
0.0038023727572173522
wasm spec test format
0.003793543079057387
\
0.003790842345682472
command prompt
0.0037800617456797162
interp
0.003777780153426118
C source
0.0037435896124258087
feature
0.0037269409656034294
use
0.003698810310485556
link
0.003687696886298567
gtest repos
0.003674159813926994
Developer Command prompt
0.0036644656009386396
functionality
0.003663441829298119
sections
0.0036462609683903637
behaviors
0.0036322050028273324
undefined behavior
0.003630307779163655
optimization platform
0.0036246818579020257
targets
0.0036234180462913937
commandline
0.003621693350551241
associated wasm binary files
wasm-opcodecnt
0.00361477000333182
testsuite
0.0036139343674378237
Proposals

Proposal
0.0035945591204489544
PR
0.0035941987539492445
elements
0.003588093964744079
Similiar
0.0035877977652806125
value
0.003575273342419495
easier integration
0.00357492408874549
stdout
0.00357108294538111
flat syntax
0.0035678343714328786
Undefined Behavior Sanitizer
0.003556619742918939
opcode usage
0.0035560107257405697
following demos
0.0035558196682617662
PATH
0.0035526462716950445
readable C-like syntax
0.003543443115262715
wat-desugar
0.003527716198489835
parse .wat text form
0.0035245503934950195
ASAN
0.0034826888729186825
verbose output
0.0034748967315527107
typecheck
0.003472742087275534
canonical" flat format
0.00343857218506972
surprise
0.003428703935357262
invalid memory accesses
0.003427909577801194
ninja
0.0034188405893881544
lexer
0.00341819929660305
CMakes default build generator
0.003406184617731921
Windows
0.0033854180669773133
box
0.003366205971623191
result
0.003353276225911941
hood
0.0032952677021925877
MSAN
0.0032668184703551115
LSAN
0.003261698884031513
bounds
0.0032439429762927594
prebuilt C++ sources
0.0032331551142520116
UBSAN
0.003216203392355509
C/C++
0.0032120955600540247
bin/wat2wasm test.wat

# parse
0.0032061023224250885
.wat
0.0032052061203951244
byte
0.003204506365072373
stack-based interpreter
wasm-decompile
0.003196771230281946
float
0.003179660879984405
MinGW
0.0031004088674526286
test.json
0.0030021634283206055
test.wasm
0.0029690613848455875
release
0.002846157976462394
https://github.com/WebAssembly/wabt
$ cd wabt
$ git submodule update
0.00282760237203087
submodules
0.0027711796851413325
Github CI Status
0.0027689046936625987
Cloning

Clone
0.0026028960312351845
GitHub actions bots
0.002544891778642654
change
0.0024751727563127905
libFuzzer documentation
0.002435219979155713
LLVM fuzzer support
0.002396317164370495
clang/Debug/fuzz/wasm2wat_fuzz
0.002358048668272383
