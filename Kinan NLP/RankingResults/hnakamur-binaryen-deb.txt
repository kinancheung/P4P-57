WebAssembly
0.05267452622371898
Binaryen
0.04718576798008147
wasm-shell
0.017256712541014064
code
0.016880863015970034
asm2wasm
0.016516534837902556
Emscripten
0.014807474783604113
wasm minification
0.014707255532150972
Stack IR
0.013315841183306861
block
0.012980086601329252
C++
0.011664164924615921
WebAssembly binary
format
0.011627173706162584
names
0.010484218926531175
Microsoft Visual Studio Installer
0.009878311002216016
example
0.009798578612043715
optimization
0.009795112393948903
asm.js
0.008587621305324769
wasm text file
0.008577676756380074
JavaScript
0.008291041717180769
function
0.007817330027672757
WebAssembly spec tests
0.007709609272830305
s-expressions
0.007671116092747431
memory
0.007269115269056456
many passes
0.007216585030867393
simple C API
0.007110738634417161
re
0.0070133293684559415
pretty colors
0.006999775075957101
wasm2js
0.00672508701522254
Windows
0.006671822712809732
tree
0.00657819763334
node
0.006562209314233278
Consequently Binaryens text format
0.006373966387526595
compiler
0.006312792930394778
CMake" component
0.005861470798212627
order
0.005783723542402527
list
0.005613012384947091
nodes
0.0055024547286021816
options
0.005408199202367081
Interned strings
0.005389813141436206
projects
0.005314491120365919
text files
0.0053033513491371415
input
0.005205856566974172
shell
0.005169193684367509
transformation
0.005138797042041239
WebAssembly-like
form
0.005114274165422297
result
0.005110981531130723
optimizations
0.005043843555701456
WebAssembly module
0.004984553909764237
corner cases
0.004976249170029456
output
0.004940434527331241
single header
0.00487159884961953
loops
0.004832988026518619
global context
0.004776509892251667
local coloring
0.004620039542583443
interpreter
0.004600165023266765
Targaryen
0.004526816507268147
loop types
0.004490125056675499
Branch targets
0.004385200730026015
JS
0.004384896708455351
new WebAssembly backend
0.00427859066753402
lists
0.004237962938853922
string
0.00417818779852661
change
0.004009303068307129
project
0.004008548492585184
operands
0.004005669295815845
motivation
0.003988767157717179
y
0.00398137827471475
env
0.003879799921875103
numeric indices
0.0038751740190314573
single
operand
0.0038300499229729276
src/wasm
0.0038135265891858557
path
0.0037869269563586576
builds
0.0037062978208611446
wasm-ctor-eval
0.0036781483352216187
debugging info
0.0036101018464572013
other hand
0.003597878962762518
compile time
0.003595459276647367
notes
0.0035913159016872295
more details
0.0035569489128003196
stack machine
0.003539423185260817
wiki
0.003525646990259458
more than one functions
0.003512429509239026
few differences
0.003492472596822363
decisions
0.0034880090429679506
Linux
0.00348355790592732
contributing instructions
0.003480065270803236
tool
0.0034277524000227103
print it
0.0034260888354777728
expressions
0.003408027581100808
Binaryen IR
=> wasm
0.0033964915302795804
arena
0.0033584235713124237
general control flow graph
0.003341205593522205
spec test suite
0.0033032865823180305
add(x
0.00310713180041904
build step
0.003092415916984866
simple
round-trip conversion
0.0030045814322082
=
0.002917271706502361
quick and easy way
0.002916660640550354
AssemblyScript
0.002911333807035785
else.wast
0.002904535740967962
TypeScript
0.002894078494570863
Asterius
0.0028841120645541384
x
0.002872020833135397
blocks
0.002779339139355813
i32
0.0027751810550938295
Haskell
0.0027676466060878296
Blocks
0.002758009364627478
concrete value
0.0027382809281711815
i64
0.002699875519937757
arenas
0.0026247189347799477
consequences
0.002590909457390987
Allocate
0.0025729568579919773
experience
0.0025705797318442457
installation
0.0025642038606667385
spec
0.002563061059045862
integration
0.002540526934873809
binaryen.vcxproj
0.002530837615793819
Compilers
0.0025288185409962994
Set COLORS=0
0.0025268000100328687
image
0.00251586807571675
set
0.0025081907172706495
arms
0.002479807388312015
top level
0.002464651829804241
f64
0.002464621221876055
bin/
0.0024555851470382576
other
optimizing/transformating toolchains
0.0024485056038321155
toolchain utilities
0.002448476408260409
block return value generation
0.002444195938463029
property
0.002441810442879588
following tools
0.0024384819045468542
case
0.002436575954584837
combination
0.0024252150594197336
github
0.0024199304082796894
rawgit
0.0024037624413935027
SimplifyLocals
0.0024014288394541986
repository
0.002391935147634537
Substitute VISUAL_STUDIO_ROOT
0.0023825091584535824
git submodules
0.0023786982119567545
Mac
0.0023729841303109676
child
0.0023704931612621312
loop
0.002360081043969964
bunch
0.0023478962359216636
Fire
0.0023464553633559277
Blood
0.002328481088580285
CSS
0.0023263814897813233
Passing
0.0023203947970270727
convenience
0.002315619151520507
Code
0.0023101468978197195
ALL_BUILD.vcxproj
0.002309300613315351
asm
0.0023016525188561555
locations
0.0022985719459507744
mkdir
0.002296199638250963
pointer comparison
0.002277773871329194
nesting depth
0.002276336535885132
%VISUAL_STUDIO_ROOT%\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe
0.002268207878110831
non-block nodes
0.002249631631978633
Bugs
0.0022493203877508106
minification
0.0022224996232412557
browser
0.0022207724077793894
variable-length list
0.0022140476115459174
emcc
0.002213210058833892
web
0.0022053323753326894
x64
0.0022021115141763027
default
0.0022015409407788603
BINARYEN option
0.0021988110193198757
performance
difference
0.002198040320201439
focus
0.0021979138204833992
WASM modules
0.0021958575904183217
similar reasons
0.0021896240015378274
Names
0.0021886381789636127
npm
0.0021867803777271847
behavior
0.0021840084303664468
unreachable type
0.002177435562079555
build-js.sh
0.002174034541568435
place
0.0021739096661478547
arm, or
function toplevel
0.00216864600669906
Types
0.0021592935806098008
Developer Command Prompt
0.0021552187826250823
Binaryens default
text output
0.002152798104940723
C:\Program Files
0.0021524956439174505
./check.py
0.0021520009127575903
native support
0.0021499153337064198
ninja
0.0021489103962213712
generator
0.002143937906876556
break
0.002142574844330906
Tree structureBinaryen IR
0.002136815774768293
specific area
0.0021363567907358855
expression
0.0021277834047844692
check.py script
0.0021273752973551786
dead
code elimination
0.0021271706347324414
llvm+lld
0.002123830982830056
SDK
0.0021215928630107387
hierarchical structure
0.0021214184008776023
simple process
0.0021183605112482214
same space
0.0021174751113553197
elements
0.0021113521169161976
S-Expression
format
0.002110858540187705
issues
0.0021046019363418333
participating
0.002102976726793347
outputs
0.0020892334981133034
long term
0.0020888529743538055
console
0.0020845423734293595
sophisticated linking
0.002083646351140129
subset
0.002082465952955877
testing
0.002080122016330842
globals
0.0020771827151168255
Binaryen IR

Binaryens internal IR
0.002060805786506019
method
0.0020532370152453665
pronunciation
0.0020404104853665663
warning
0.0020361933288301965
Emscriptens asm
optimizer infrastructure
0.0020289061717238045
language-specific (an example
0.0020249567521698816
safe zone
0.0020247605238303736
look
0.002023024257856054
parent
0.002022733040266105
repo
0.002018426749587948
incoming branch
0.0020083594846935283
Emscriptens WebAssembly processing library
0.0020027006114185088
command line
0.0020026295277013667
limitation
0.0019992905793445774
testcases
0.00199416331448874
reason
0.001989563519611236
stdout/stderr
0.0019875401404883045
information
0.0019865276584932288
parallel codegen
0.0019854332545496513
OS X
0.001982316503701873
Notes
0.001981867135556377
available CPU
cores
0.0019783634812419702
transformations
0.001977568516040753
same manner
0.001965972881152125
bin/asm2wasm [input.asm.js file
0.0019635513419124194
branches
0.0019593469558057586
linear style
0.0019487975301878003
&
0.0019455853926149962
general-purpose compilers
0.0019165516907933436
lowers
0.0019132166961581913
parse errors
0.001909216931764596
opposite direction
0.001898855482283936
more work
0.0018743744220891523
harder task
0.0018593737443489636
toolchain infrastructure library
0.0018544869875322318
compact data structures
0.0018239335875937619
ee
0.001808625105508876
Experimentation
0.0017657777298101922
compilers
0.0017652826828085558
--print-stack-ir
0.0017608192443932303
core devs
0.00174366537543471
new basic
blocks and control-flow-free instructions
0.001685559587337207
Status
Windows CI

Binaryen

Binaryen
0.0013681936102776602
