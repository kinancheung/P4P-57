popular 
ncnn
0.031178899405503533
GPU
0.019604311789701963
%
0.018415170458031517
CPU
0.018149882014035928
Vulkan SDK
0.017082924357056644
vulkan driver loader
0.012517624492656962
Image
0.012490394528973213
ray Image
0.012016155270781322
Edge Devices
0.0111302394264384
more details
0.010927634591824442
C++
0.010641907770602902
CMake build
0.010598621578050475
std::endl
0.00955632064878326
GPUs
0.009439267830323615
libraries
0.009178671506965547
models
0.009164757499912633
Light and Fast Face Detector
0.008931031822583408
Deep Learning library
0.00885620078967419
CUDA
0.008530102801127388
=
0.008339758300916007
program
0.007969146511634004
Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat
0.007940392551509388
std::cout << "Total
0.007867291388168444
GNU General Public License
0.00781718496774078
GPU (Vulkan
0.0075342542519329
Compute
0.007308530662696497
tensors
0.007272860902940069
Building CXX object CMakeFiles/ncnnRay_studio_UI.dir/src/models
0.006963115513697741
Mat CPU tensor
0.006955459297982861
Khronos API
0.006905952040795242
CMakeLists file
0.006807251560494496
PyTorch
0.006703824900840982
ncnnRay++
0.006553717399345792
rayLib
0.006548845858569372
Vulkan header files
0.006461093219681537
build
0.006288867664730657
vulkaninfo tool
0.006222573228970433
CodeBlocks - NMake Makefiles
0.006045564371178855
CMake based integration
0.0058958956062543505
C:\Program Files
0.005781297260258337
Built target ncnnRay_studio_UI
Scanning dependencies
0.005644218221165686
raylib
0.005547311758375888
CXX executable ncnnRay_studio_UI
0.005419525176392548
project
0.005407800446491279
Image image = LoadImage("faces.png
0.005379508872338238
gaming community
0.005302268158968624
Lifang
0.005278307123199248
Jian
0.005273659668206537
Wu
0.005260759477929581
Meng
0.005246832616577977
Dezhong
0.005216037489078651
Xiang
0.005192983858803312
Xu
0.005129948015802334
Shiming
0.005098523152257322
declaration
0.005050141259611213
FaceInfo
0.004997585240665665
Yonghao
0.004960925539500835
Pan
0.004924075720983362
root folder
0.004880794879687192
inmat
0.00486642364234536
rayImageToNcnn(image
0.004837477611657407
typedef
0.004831780374743137
unmodified zlib/libpng license
0.004755562732085598
target ncnnRay_retinaface
0.0047524203532961894
FaceDetector.cpp.o
0.004710683281851269
Vulkan SDK
Emscripten emsdk
0.00467905174889812
&
0.0046092506196160595
-DCMAKE_BUILD_TYPE=Release
0.004589580627341436
LFFD.h:6:1
0.004531442853217387
author={He
0.004519289405939174
Chunhong
0.004487937246245438
provided docker
0.004480672906931732
ON -DNCNN_BENCHMARK=ON 
-DNCNN_BUILD_TOOLS=ON
0.004288819435035447
Webassembly
0.00417391103351281
HTML
0.004169536987891912
GUI
0.004159768123905864
analogy
0.00413687707793533
FITNESS
0.0040774484024314415
scenes
0.004062917520776602
title={LFFD
0.004032134721802909
@inproceedings{LFFD
0.004003793720658878
SPIR-V
0.004002956702463981
Copyright
0.0040002135272860255
MERCHANTABILITY
0.003996935646019896
GLSL
0.003973525479711264
countless opportunities
0.003953190083191314
documentation
0.003929830041244351
compiler
0.003912511903731772
execution
0.003901380536215722
Graphics
0.003886370466674052
images
0.003862109727825081
raylib.h
0.0038614978297980334
Vulakn
0.003831508905207479
@raysan5
0.003801249682100647
LFFD
0.0037999236376251933
inventory
0.003796910379451271
prebuilt loader
0.003781388614246448
door
0.003779271824203928
application
0.0037758914293096434
creativity
0.003762824257953981
conversion utils
0.0037597650492003473
Ramon Santamaria
0.003753864043333572
stb PNG image
0.0037402565619123426
size
0.0037278601155777444
performance
0.003724491709514244
reading
0.003723413246751401
booktitle={arXiv:1904.10633
0.0037217905333955226
RAM
0.0037184089459528346
https://github.com/nilseuropa/ncnn_models
0.0037174054415272132
issues
0.0037063282479983485
videos
0.0036374676318718974
MB
0.003622668634002502
PARTICULAR PURPOSE
0.0036099943814929857
shaders
0.0036067137098922996
Model name
0.0035779785982591556
High-efficiency Graphics
0.0035772557429670057
suggestions
0.0035547913641444996
ncnn::Mat
0.003546603622383434
value
0.003539103850156505
OpenCV dependency
0.0035135539844971886
Real-time face detection
0.003496973870647721
int main(int argc
0.0034891229686218783
Citation
0.0034834538777527083
std::cout
0.0034827751163826345
https://github.com/Tencent/ncnn
0.0034739165132440337
image 
stb image
0.003471213005558458
implied warranty
0.003467587291489404
later version
0.003453624350695726
ExportImage(saveImage
0.003438812497072247
https://www.raylib.com/examples.html
0.0034373254293750925
https://github.com/Tencent/ncnn   

A simple example
0.0034134147373532132
option
0.003408584456746706
extra tools
0.0034070962590566634
free software
0.0034046914449405363
egde devices
0.003388800720620227
call
0.0033866393839486466
faces-ncnn-rgb.png
0.0033639296126183366
disk 

Examples

A Simple example
0.0033475408072382424
stb_image
0.0033436026849651135
folowing example
0.003338553913475983
char** argv
0.0033362109072378283
Credits
0.0033272129397731655
source code
0.003323160431182568
Windows 10 and Ubuntu 18 machines
0.0033178947033245883
distros
0.003313685336869103
https://quantscientist.github.io/ncnnRay/
0.003301457117338326
book
0.003296371128999867
author
0.003293537618001675
WASM
0.0032914531595380713
Nvidia
0.0032850381418647917
Available AI Models
0.003271311258763862
inmat.total
0.0032475807538308497
fixes
0.003244189696755752
instance
0.003244175428872431
onnx
0.0032407334121629405
bugs
0.003217961892867625
Requirements
0.003197741170952666
distribution repositories
0.003183358119662569
care
0.003177430061797851
goal
0.0031570255110309267
default
0.0031501094378348564
WARRANTY
0.003140979354001666
VkPhysicalDeviceDriverProperties
0.0031285938537773624
terms
0.0031215523832384185
Windows
0.0031117840217596633
platform
0.0031101154662518146
day
0.0031060796424760033
git clone
0.0030795038034018727
hope
0.0030668320040674176
More OS and dev env support
0.003049392581742713
PNG lib
0.0030330701792536624
License
0.003023505662881862
copy
0.0030116972976649147
Windows 10 and Microsoft Visual C++
0.00300967226048793
RayLib UI + raylib https://github.com/raysan5/raylib
0.0030072835287812674
bit only device
0.003003958555953824
Start
0.0029899271462716774
edge computing devices
0.0029501330778265882
cd
0.0029400362290430936
Licensing

Copyright  Shlomo Kashani
0.002923178289633586
Mesa graphics driver
0.0029073548457093025
code or trained models
0.0029062707184152005
Free Software Foundation
0.0028868870350970436
bin64

CLion
0.0028857427904717004
neural.cpp.o
0.0028829674854866138
LICENSE
0.0028745676561255117
set(NCNN_DEVICE "VULKAN")

CPU mode
0.002859390217151457
set(NCNN_DEVICE "cpu
0.0028206361920946393
projects
0.0027640218969670633
manga-ncnn-rgba.png
0.0027411891839093493
inmatimageRGBA.total
0.0027374945520514645
Linux
0.002706140617138718
Contribution
0.0026995452352678046
LFFD.cpp.o
0.0026818865039834514
NVIDIA
0.0026776324432875673
spare-time fun project
0.002669722220065745
Live demo
0.002662552416284006
Install emsdk
0.0025508713230177754
http://www.gnu.org/licenses/.

Third party licences
0.002535741632480664
Shlomo
0.0025162302027929434
steps
0.002509828972498997
ncnnRay/
0.0024663018343806394
LFFD.cpp:1:0
0.0024208175872457516
closed source software
0.002414643703621473
OSI-certified, 
BSD-like license
0.0022487809888617977
