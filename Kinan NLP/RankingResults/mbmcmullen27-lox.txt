visitor functions
0.01761462612740422
legit value
0.015750514410373315
name
0.015134542134831687
error
0.014442928530966018
function
0.013849172735890721
associate variables
0.010368155157750492
expressions


ternary operator
0.010182194127809786
challenge
0.00961921605438202
class
0.009612292723816904
other languages
0.009252929037193205
Scheme
0.008394762349911513
int
0.008048185006148366
order
0.007889082993688826
arguments
0.007882045315860491
statement
0.007566699887178442
C cast expression
0.00711922013075572
compiler reference
0.00678066150546341
#
0.006617820676350285
Object Oriented code
0.006393673940705302
break
0.006180155679249045
common case
0.006100520813535848
declaration
0.006055735104089099
upper limit
0.005952403011923863
Lexical scope
0.005938305847911871
book
0.005815689584457601
Lisp folks
0.005807503444504379
neat use
0.005766119679741969
null
0.005406238466171392
Function
0.005352742988260396
- type commentary
0.005347289060719859
Java specification
0.005061455437767445
user
0.004965209357186591
Expr
0.004952474388609346
classes
0.004913101517484248
unassigned var excception
0.004828283971728919
visit variable methods
0.004759271696427855
lot
0.004727115838761779
definition
0.004601930459496946
changes
0.004575256299777974
comma operators
0.004568841466166328
statements
0.004524553220809138
method
0.004521438397910278
c operators
0.004514679841579465
b
0.004479910188156205
pass - static analysis
0.004474206213314943
new RuntimeError(stmt.name
0.00446794834368536
loops
0.004467534733111422
memory
0.004371108448208739
nil
0.004354934075081649
array
0.00433401373467821
bytecode interpreter
0.0043089612116622685
tests
0.0042972381396021615
messy

public Void visitVarStmt(Stmt
0.004295848264763177
Unassigned variable
0.004254814898831793
books github page
0.004252281710116032
Value
0.004129064189538895
operand
0.004102957042752341
current frame
0.004033664389131768
parser
0.003972207787769109
precedence table
0.003881155032791906
runtime errors
0.00381984581519162
more sense
0.0038018421472300655
Stmt
0.0037769918191112857
=
0.003691670122728096
compilers
0.0036561441856475143
jar
jar
0.0036078519700821067
blocks
0.0035391426856070164
arbitrary expression
0.0035082199129688385
args file
0.0034663985738213068
BINARY_OP
0.0033958748585851597
lox.jar
0.0033934836675046775
Environment closure
0.0033848305742799054
maximum number
0.003351130836169387
guy
0.003267504606570812
kind
0.0032385559289627897
argument expressions
0.003209560557342721
loop
0.0032083994312431426
Chapter 11 - Resolving
0.0031986052889519108
check
0.003192608334496288
assignment
0.0031490377854100065
jump
0.003138363585144797
function runtimeError
0.0031018366080817587
conforming implementation
0.003097088477227606
much boilerplate
0.0030824933619490063
separte binary expressions
0.0030781696339434762
users
0.003067029837995114
pure, side effect
0.0030533034883835995
interpreter
0.003048228812029235
binding macro
0.0030224291463756023
problem
0.003018533984136787
weird super constructor call
0.0030071965357218603
control flow
0.003004347753340461
practice
0.0029885998478272383
side effects
0.0029762185551318776
c macros
0.0029641224087142318
guarantee
0.0028960234525302383
data structure
0.0028931980943832565
people
0.002883828508909809
rule
0.0028679726525299883
printf
0.0028588110819275214
comma operator
0.0028547433593507977
things
0.002825614592570906
native extension
0.0027882236149487706
Values
0.0027821815698879765
environment
0.002773447484909362
sizeof
0.002721757981956133
first throws unassigned variable 

var b = nil
0.0027197833852345863
thing
0.0027136385021502805
language
0.002707462288557188
time
0.0026910711365540057
./lox test
0.0026804726507431284
return statement
0.002642448794553833
middle operand
0.0025953871051584425
mechanism
0.0025893854917759043
Assignment
0.0025841859364532475
javascript
0.00256940112958706
finish chapter
0.002536964587184321
Start REPL
0.0024990365822230307
Dennis Ritchie
0.002456692771657681
lox
0.002449947524283119
macro"I
0.0023405758576516126
admit
0.002318232574202915
OP_DIVIDE
0.002305655173088908
freedom
0.0022779403221154476
accoutrements
0.0022195989032944533
JavaScript
0.002213712888796625
java com/craftinginterpreters/lox/Lox
0.0022131283197182484
if(value
0.0021778046647059255
-jar
0.0021707005870122455
properties
0.0021694746097151323
parameters
0.002161595863111853
Second
0.0021074610400079546
c?case OP_ADD
0.0021051151107919696
chunk->code
0.0020672611763184277
ALGOL
0.002051451701935965
corners
0.002049038954934346
consume(compiler
0.0020193360432778054
object
0.0020173626413398553
interfaces
0.002015939092853995
operands
0.002005077135653228
BINARY_OP(+
0.0019858026436433487
Interpreter.java
0.0019794098211545364
24.3.3
0.0019791986334322257
stmt.methods
0.0019779496689174606
gcc
0.001966149802935094
clang
0.001964882298730912
TOKEN_COLON
0.00196340091923871
function.function.parameters
0.0019527762348527363
Art
0.0019510629413727397
scene
0.0019502862163887846
resolver
0.0019498687281247365
simplicity
0.0019447265515464918
this.closure
0.0019370504802655448
FREE_ARRAY(uint8_t
0.0019281188023083326
char
0.0019271301408143853
unused bits
0.0019230456669311522
if->fi
0.0019204003603628397
mentions
0.00191629759020855
WebAssembly
0.0019155175926361902
Clojure
0.001915147997586641
repl
0.0019087121446788146
Token param
0.0019058142837152033
declare(param
0.0019018516716056242
ownership
0.0018991953595324405
work
0.0018935011677977712
scopefunctions
0.0018929002747295782
heap
0.001887783734258089
visitFunctionExpr
0.0018872045710919467
methods.put(method.name.lexeme
0.0018831865890222303
chunk->capacity
0.0018813547864226358
breaks
0.0018678573549948897
new LoxFunction(method, environment
0.0018648763474540494
LoxFunction(String name
0.0018617038031508502
case->esac
0.0018581461778608634
isClassMethod
0.00185330310501079
consume
0.0018532040812721635
CS history
0.0018528549405414313
constant strings
0.001847465592421587
interesting bit
0.0018420333453895152
age
0.0018321799746649544
prints
0.0018281214830695386
define(param
0.0018274800241607138
issue
0.001827354061794423
efficiency
0.0018203828278523916
solution
0.0018178275904545784
register
0.001810664399334607
modifying environments
0.0018104013747497457
classMethods
0.0018074226532605068
visitExpressionStatement
0.0018068427782560908
same fundamental algorithm
0.0018066444214330458
visitClassStmt
0.0018048595244587104
define(stmt.name
0.0018041002241244108
pointer
0.001802857527461508
bindings
0.001801369838021761
ternary op
0.0017981698450358031
Bash
0.001795330400880164
overhead
0.0017941433878377912
catch
0.0017915221491348568
FFI
0.0017899860378722532
Binding
0.0017729972988520402
expected token
0.001771364663024431
access
0.0017710616507028512
frame->function->chunk.lines[instruction
0.0017703533435064966
brush
0.0017683501104058812
assign
0.0017672659922533325
flag
0.001767137335502086
resolveFunction(stmt.function
0.0017656968544436135
string
0.0017623098234241905
slot++
0.001749225443057501
frame->function->chunk.lines[instruction].line
0.0017438897375436945
various approaches
0.0017400594606117694
declare(stmt.name
0.0017389226962557652
representation
0.0017359352782600561
references
0.001734052892878243
rest
0.001733666045225924
weird grouping chars
0.0017335526555833371
nodes
0.001731185882776024
Part III
0.0017297548014354007
loaded terms
0.0017284230810738332
Chapter 18 Types
0.001725169698253401
Interpreter
0.0017229865236438164
speed
0.0017194866876465962
GROW_CAPACITY
0.001718598572163213
shadowed one
0.0017172822089718271
Lox
0.0017115392077342141
inventors
0.001710790368461957
Chapter 24 Calls
0.0017105383021159039
multiple
0.0017095437495674153
incompatible types
0.0017085264120913965
resolve(function.function.body
0.0017067076591476705
hash tables
0.0017064826989001377
error(peek
0.001705522496960235
Scope
0.0017021238006950002
noticible increase
0.0017021166477116491
branch
0.001701218265715491
slot < vm.stackTop
0.0016998346516911467
Loops
0.0016937374275719042
vm.chunk->lines[instruction
0.001692458804907114
stack allocated "flexible array memeber
0.001691631277303718
support
0.0016812367175299532
resolver?right
0.0016790953464626863
DONT FORGET
0.0016764062417839658
match(COMMA
0.0016761022682292336
synchronize
0.0016760936330094604
Exception
0.0016755652902873612
pattern
0.0016751739899702675
values
0.0016750591440869481
src/vm.c:23:16: error
0.0016744086296411479
dispassionate logic
0.0016739145168189929
common mistakes
0.0016734007561750482
opposite
0.0016721968532111226
ones
0.0016705814783881494
unassigned vars
0.0016591403045447207
printValue(*slot
0.001657982787354981
programmer
0.0016577195628265974
MAINS README
0.001655956964759343
reason
0.001654160543506521
OOP
0.0016540039499362794
AST
0.001653290404177878
other operations
0.001649723378759946
VAL_NUMBER
0.0016490689106557679
most constructors
0.0016484798768411995
same group
0.0016482716635915432
branches
0.0016414638503109342
closures
0.0016392113572168312
challenges
0.0016314313639722309
stack traces
0.001631334641667298
insight
0.0016310702738030155
memory.h
0.0016310403817641709
option
0.0016307326658386199
Weird
0.0016265112312115395

0.0016256148254316482
Error
0.0016226081589244222
lowest precedence


Chapter 8 - Statements
0.0016211649035655419
function() method
0.0016206916597787469
Computer scientists
0.0016186144718063728
valuethis
0.0016122161902844391
change
0.0016122093600848097
Functions
0.0016062618022404044
freeChunk(Chunk* chunk
0.0016062387237409993
idea
0.0016055979803479227
functional programmers
0.0015970188252932003
c virtual machine implementation
0.0015964452715274374
subtle semantic choices
0.0015964362574728045
merge conflict resolution
0.0015938013581260368
package structure
0.0015909971044599722
Chapter 19 Strings
0.0015886007623830075
Var stmt
0.0015869585170899408
new assigned map
0.0015795235201841837
lazy, persistent, first-class, higher-order
0.0015784929087945226
poor programming experience
0.0015754629610125294
result
0.0015732007650856557
Value* slot = vm.stack
0.0015697142183579058
doubt
0.001567547257362352
restrictive syntax
0.0015656065287225236
second pass
0.0015633813856957926
outside world
0.0015632972451866416
tools
0.0015628482093802362
Enum
0.0015616799975562792
JVM machinery
0.001560157217109506
oldCount
0.0015589789176273417
declarations
0.001556837468201507
interpreters
0.0015565327746187342
unbalanced parentheses
0.0015548718196825007
sizeof(type
0.0015541184916803882
memcmp
0.0015534584308144414
huge fan
0.0015522686243820154
stmt.initializer
0.001551562641566328
Chapter 10 - Functions

Maximum argument
0.0015511963081011556
public


12.6 My LoxFunction implementation
0.0015486034631591174
padding and different sized union fields
0.0015460448252383359
init
0.0015430584775958066
character
0.0015427396558793725
author
0.0015392049247849118
stmt.name.lexeme
0.001537956455042582
verbose
0.0015372937076742284
./lox

Execute file
0.0015352050479523227
AstPrinter
0.0015334090783613722
equality
0.00152964615660442
second high-level languaggge
0.0015295844335804828
ending delimiter
0.0015287738331546006
performance critical execution paths
0.0015277239958932983
equality operator

page
0.0015224085368086206
State
0.0015209866500349454
vm.c runtimeError

src/vm.c
0.0015181618518443536
opinion
0.0015159867911503674
Author
0.001515827030176582
python


Function Declaration

private Stmt declaration
0.001514414787650739
track
0.001514248383813856
varDeclaration
0.0015117424819024849
second passside note
0.001510770091745965
lines
0.0014979735043226061
VAL_NIL
0.001496142655871044
first managed langguage
0.0014928380428643746
useful later.second thought
0.0014926007684129387
weird corner cases
0.0014898582198943776
IEEE
0.001486288959631486
more trouble
0.0014836901069009737
higher precedence
0.0014794458634308477
practical applications
0.0014783498773304126
good chance
0.001476262034466597
Chapter 26 Garbage Collection

page
0.0014731324390138936
space
0.0014690548373746432
lowest precendence
0.00146884190052316
explicit nils
0.0014663807344863053
jab
0.0014635796850934666
first two options
0.0014631574264700868
speaker
0.001458142429888666
problems
0.0014533851270508151
block
0.0014527560100982386
mark
0.0014469484607990688
user-written initializer
0.0014434420356951969
backpatching
0.0014404841318042961
default
0.0014400202029466993
first, simplest garbage collection algorithm
0.0014218822738452353
intention
0.0014180193066392302
Fortran
0.0013833625089987927
currentChunk()->count - offset
0.0013760145603224252
Notes
0.0013634654219206797
opening parenthesis
0.0013599623984062036
function("function
0.0013588884868668957
Bob
0.0013568168319355632
Value) {VAL_BOOL, {.boolean = value
0.0013529885766215932
fact
0.0013519614838349925
Crafting Interpreters
0.0013504866671882093
bindmethod/boundMethod
    - pratt
0.0013328436083880736
immediate, unparenthesized result
0.00132656725778797
few details
0.0013171740225721435
sizeof(int
0.0013162345584736362
meaningless
0.001289535040342562
floating point arithmetic - requiring "NaN == NaN
0.0012547125808958684
Chapter 7 - Evaluating Expressions

Ternary operator
0.0012234511017938708
