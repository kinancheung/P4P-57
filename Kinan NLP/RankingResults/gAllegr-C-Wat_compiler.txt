INT type
0.023498878184323346
variable, further checks
0.023338712460677435
compiler
0.021329744003572886
global variables
0.017730071194326284
struct
0.01608002896741696
WebAssembly
0.01571728200670287
Input statement
0.013314171187847893
separate conditions
0.013088660435304173
function definition
0.012973037365109021
files
0.012356079579437632
memory
0.012044558523053955
functions
0.011017818134186105
int a[2
0.0104990710592658
char var
0.01045731116885643
VARIABLE
0.010360405407825644
Logical operators
0.010221851567158378
Accept simple declaration int var
0.01013297890535667
single or more parameters
0.010090913571793578
bin folder
0.009924051349894781
mix
0.009790923355217654
string
0.009446351651777247
variable and function declarations
0.009106243214939224
Global C program
0.008945019442066533
code
0.008936436198866327
html
0.008734902691299534
following tools
0.00811325686523461
Support
0.00811004863612145
s-expressions
0.00786957234475562
Float values
0.007745412660930267
Function Definition NAME
        VARIABLE
0.00746300714144607
beginning
0.007412439742608781
statements
0.00741234981969982
scanf
0.007334345887294862
check
0.007125354257512102
structure
0.006977630514447709
C - Wat
0.0066473709460266985
command
0.006293181827237165
float
no direct support
0.006220480405443015
arrays
0.006158301083443312
text file
0.00598437221315234
warning message
0.0059538372490137775
Assignment EXPRESSION
                BinaryExpr
0.005939726765939099
syntax
0.005927357810681539
initialization
0.005915913244538653
assignment
0.005833075955134941
Examples
0.005813995146516616
compiler image
0.0056986228899218285
textual version
0.005545372528724553
Variables
0.005490256126808381
struct Point
0.005316384323285319
Xdot
0.005314428526305818
types
0.005287554521655785
optional
0.005262623133945122
segmentation fault
0.005067554626639612
single line comments
0.005037180044838886
css
0.004943869787596257
example
0.004872565053174503
C source file
0.004641975476592869
comparison
0.004636554792287285
Symbol Table
0.0045885688834398745
Compiler project
0.004572736328572512
hierarchical symbol table
0.004548324081634631
javascript file creation
0.004382292517206457
AST
0.00437027455408479
empty

Conditions
0.004356525830204058
limited nondeterminism
0.004330297610874116
arguments
0.004328068127697727
mathematical expression
0.004181201390486357
reference
0.004168055142060051
direct DOM
0.004158718261488722
Addition
0.004117930122378925
strings
0.004111975842187014
left
0.00410827567399311
same number
0.004102411931502091
constants
0.004101996330987095
other hand
0.004047706475060983
possible limitation
0.004043345757874508
Variable declaration
0.00400113274588528
block/sequence
0.0039624348917494485
i32
0.003938499690584795
Emscripten
0.003926569667480406
single instruction
0.0038970782619573274
Accessing members
0.0038139694279417297
Semantic checks
0.0038006510045667206
=
0.0037982672307258747
b
0.003785840128187583
struct_declarations
0.003687923505110411
Javascript
0.0036640578417028754
issue
0.0036556748706177166
array dimension
0.0035743873506250174
Abstract Syntax Tree
0.0035710433573383268
make
0.003563331206811926
MDN WebAssembly documentation
0.0035391219588596866
v
0.0035216528679319547
code
.wasm -> binary version
0.00349907465139776
problem
0.0034915533323547038
b
    Function Definition BODY
        Function Body DECLARATIONS
            Assignment VARIABLE
                VARIABLE
0.0034355467046552806
WABT
0.003375978235229763
terminals
0.0032814262857340693
time
0.0032805027572996677
non
0.0032573605441046593
return s
0.00319618279657698
Install Bison
0.0029908944151900837
import
0.0028534131492926195
float
0.0027912190670903564
var2
0.002775019927340351
var1
0.0027733633367482764
s[6]="Hello
0.0027413498762694963
make run
0.0027369893196814506
branching
0.002698499675738885
numbers
0.002684472171324327
Integer
0.0026725262442573853
struct definition struct
0.002660982392245404
struct_name
0.002649120292457811
i64
0.0026434153890546345
flags
0.002635498153257225
Issues
0.002606816488633994
Statements
0.0026007918609280522
initialitazion
0.0025973071703880237
Minimum Viable Product
0.0025839239578045728
Types
0.0025769375944307456
integer
0.00255814907058644
list
0.002542548659165086
states
0.0025370152523626387
Dimension
0.0025309882899650178
+
0.002529491656300682
f64
0.0025193510980528262
Method
0.002504648531644327
Array
StructTypedef keyword
0.0024956686382744124
end
0.0024922119648967656
Equal
0.002483161936154279
c
0.002455199131581607
MVP
0.0024547740172458383
Image
0.0024535039513063936
Structure members
0.0024361666992836523
BinaryExpr
0.0024236697550756945
Lexicon and Syntax Rules
0.0024167534054974882
Web Assembly
0.0024146051272167387
line2
0.0024141296742072786
headers
0.002402743234401271
grammar.y
0.0024009221937128906
structs
0.0023962093051072214
Assignment
Mathematical expression
Output statement
0.0023936527471881313
particular node
0.002388649052660709
single module
0.0023861633196842753
Browser API access
0.002379879467094049
compilers
0.0023719407884831944
procedural language
0.0023495824171211152
structures
0.0023399501603014153
Struct
0.0023390762500739544
features
0.002333929621032119
root privilege
0.0023323065145577676
Char array
0.002324464331972434
Array
0.002323237338134546
possible way
0.00229319510986199
valorized returns
0.002292710273560669
possibility
0.0022912836678467908
statement type mismatches
0.0022882832092239254
usual declarationstruct
0.002287570017203141
>
0.0022847763410902763
%
0.0022832542404863146
Postfix increment
0.00228008054019656
implementation
0.0022787270549536253
case
0.0022719138547627176
line1
0.0022704387043968456
size
0.0022682127518311927
comma
0.002266103835526791
make load
0.0022618987201560685
Return statement

Ouput statement
0.0022611441767894933
direct conversion
0.002256642603387484
specified name
0.0022498405218352112
set
0.002245304131629326
if_tests

Iteration statement
0.0022354845849759924
IFs
Then-branch and Else-branch
0.0022307812153368723
int, int
0.0022303100961542283
Operators

Comparison operators
0.0022179499669656455
comma-separated list
0.0022133691549744007
punto1.x
0.0022071967036916672
input
0.0022069595163655316
convertion
0.0022023629120236543
inputs
0.002197203025992096
parsing phase
0.0021947803721612275
JavaScript interop
0.002186320125330276
punto1.y
0.0021852018075471393
printf
0.0021743447901827143
Declaration
0.002172415558204223
WebAssembly Github repository

Scanf conversion
0.002171298610398418
imported global mutable variable
0.0021712303966122588
3,5
0.0021683196262506574
Reverse operation
0.002164329234286672
punto2.x
0.0021621041475931996
Functions
0.002157156435811086
variables
Loop condition
0.002155447097949399
length
0.002140748391248761
Arrays
0.002127217821137306
Function
0.0021147144546886975
Main issues
0.0021102324648914
var_declarations
0.002109872602700802
exiting
0.0020943124709864058
definition - Parameters

parameters
0.0020918479985238925
void or basic types
Support void parameters
0.0020896082704539446
more complex object
0.002077351190616851
Initialization parameter
0.002067498720928557
instructions
The S/R conflict
0.0020649228260516705
struct.c 

Function declarations
0.0020554126208913357
shift action
0.002046176543885898
Compiler
0.002028794097048849
not_working/improper_program.c 

Variable declarations
0.0020264065473789786
integer variable
check
0.0020255403387521636
usual mathematical operators
0.002022460568516876
compiler.out
0.0020101614833437525
global $v (import "js" "value
0.002009651999704779
simple workaround
0.002001267977305101
simple variable

Code generator

Code convertion
0.001978300486254083
return type
list
0.001972441653981148
variable declarations
Accept function declarations
Variable declarations
0.0019719808590776054
Less then <
Greater
0.001934943770288172
mandatory)
git clone
0.0019341958706821194
Printed Tree

Program GLOBAL
0.0019268979783106659
Printf conversion

Also printf instruction
0.0019153352202047236
Point
{
int x
0.001896319529018379
Aim
0.0018950542585746471
dimension
type
struct composition
0.0018855619171060573
./example_programs/correct1.c

Clean output files
0.001866595077958467
punto1
0.0018510368528207753
apt-get install bison
0.0018400936111758414
Flex and Bison - John Levine
C operator
0.0017885478791163706
text format
0.0017758817024944276
Install Flex
0.0017224595476537188
1,2},{3,4
0.0017120210209796332
clone project
git clone https://github.com/gAllegr/C-Wat_compiler.git
cd C-Wat_compiler
0.001697914614135636
WebAssembly module

Building Instruction

Software requirements
0.001674545119711688
precedence
0.00166790128383091
result
.css -> small style file
.js -> javascript
0.001665945556727097
Point    /
punto3          VAR             STRUCT Point
0.001590258410869504
Line
0.0015594694769688893
html+js
0.0015404305003819856
wat
0.0014489990442057578
