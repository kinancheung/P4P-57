free data
0.0864617062131389
WebAssembly
0.0812613219665792
mat4.create
0.04027378642485325
methods
0.036682858083408605
function
0.03368650095516127
JavaScripts memory
0.031737490482562435
glmw
0.030942375733776926
view
0.03067641967864473
views
0.028562088583620464
init method
0.02403134280833023
b
0.023517667914176064
numeric address
0.021069689433932923
library
0.02097993266542413
import calc
0.020612890904218594
gl-matrix v2.4.0
0.019301184628915207
extra overhead
0.018732685403429178
vA
0.01867594889582818
*
0.018266345083888733
main file
0.017703700078445135
garbage collection
0.016868643260993396
API modules
0.015770174520968596
async instantiation
0.015114802647444147
Methods
0.013401842600129872
vec3.sqrLength
0.013362265542645316
Limitations
0.01308035665645757
synchronous buffer instantiation size limitation
0.01252295106341111
Simple example
0.01251031396652616
Usage
0.01249919948427649
Float32Array
0.012363959054341301
.view
0.012154266540124636
e.g. mat4.view(address
0.012130332717505677
hand
0.011997992991702821
port
0.011932474045194024
mat4.view(a
0.01179942677841308
typed subarray
0.011494633284227332
vec3.fromValues
0.011396985145528843
given module type
0.0112762471778503
references
0.011254129598311893
numeric addresses
0.010901094312063729
vec3.add(a
0.010804836491360619
returns
0.0102768273175162
.exactEquals
0.010035403734334267
vec3.create
0.009971093139071047
vec3.view(a
0.009893488160393461
Slight performance drops
0.009888830941831118
Import
0.009862445209067424
many cases
0.00981781470042985
./calc
0.00979118503497277
Float32Array([2
0.009076433933045032
mat4.free(a
0.008884892435488534
TypeError
0.00886559488774295
const { init
0.008844626403707263
import { mat4
0.008749749889361771
Description
0.008228750395227137
