Webassembly code
0.04139553326753618
c++ type name
0.028750873135943895
function
0.026640398538105518
registered class
0.022282623178913906
functions
0.021431508707739768
c++ synax
0.021313036442941663
class Mat
0.021296007105676223
js application code
0.02076509677584874
value types
0.01976154808600429
cv::Mat
0.016804483448403983
structed information
0.015665111470226836
example
0.013034734819411172
JavaScript compiler
0.012862515649895793
classes
0.01219839894841719
int, double, double)>(&binding_utils::convertTo
0.012102671225564753
methods
0.011402598473259085
binding.cpp
0.010691833214119114
object
0.010590624371012993
template
0.010547738482331976
napi_value
0.010376664056295372
cons
0.010103099539618753
class_mat instance
0.009843956862781807
array
0.009743555087350034
val
0.008967555523772026
value
0.00798456906587534
pointer pointing
0.00781393992556396
_
0.007629101941314718
dataPtr
0.007581986690658493
bindings
0.007026541511451701
memory address
0.0067616180159137855
object_Range
0.00660930706551269
napi declartions
0.006572844826686243
napi-addon
0.006527560779028164
C++
0.006486709418197413
Embind
0.006463853831041394
data buffer
0.006441870031407464
Napi properities
0.006374141179935817
members
0.006281496499151541
vecMatVector
0.006271251360847663
declartion
0.006085493061612707
nullptr
0.00607575072874864
Uint8Array Int8Array
0.006038872701317015
napi_array type
0.005943065323176596
global napi method
0.005646465385720445
Type conversion
0.005626861877812895
void
0.005579340911491634
mat
0.00529229709854946
None

Class constructor
0.005181428701743052
memory area cv.HEAPU8.buffer
0.004989453234097456
byteOffset
0.004894235631726673
code interfaces
0.004855035394083299
offset
0.004850131164736006
Generate code
0.004783429554794609
value_arrays
0.004725028733145175
properity
0.004651975607851486
length
0.004639865667131077
value_objects
0.004587191199516126
std::vector<cv::Mat
0.004582280826805939
WebIDL Binder
0.00456096038992981
main two tools
0.004560922324810364
unwrap
0.004545725013566699
properties
0.0045392179584430245
block
0.0044613843543621886
binding
0.004441528868309735
float
0.004426565819816987
list
0.004337467718271778
vector
0.004188456283245385
elements
0.004176419243679552
node plugin module
0.0041589709474132855
pointers
0.004076676909642773
console.log(mat.rows
0.004055754968968993
js objects
0.004045383301089231
select_overload
0.004040312793831599
console.log(mat.elemSize
0.004029192900973913
p
0.003998239344135679
different levels
0.003954582898125616
arg
0.0037755117888546067
convertTo
0.0037718580471046204
variable
0.0036906650697180214
jvm
0.0036598429305606315
project
0.0036289667010935634
native node.js
0.003591851296945373
typename
0.0034838911841338447
opencv
0.003436733889519457
cv._malloc
0.0031213685916770878
store
0.0029631983733812693
napi_properities
0.0029449713400107338
Val implementation
0.002914095660710335
different independent memories
0.002911624750701581
value_object
0.0028765128559579464
default
0.0028701275904549407
New
0.002860086297285139
sizeof(properties
0.0028503449835495078
val::array
0.0028374574180330715
start
0.002835053633677056
char
0.002827262469107031
Fields
0.0028081315631008747
napi_get_reference_value(global_env
0.0028027044888478893
class_Mat::cons_ref
0.0027905509344228613
None
0.002785160217883934
bytes
0.0027816793258844353
napi_new_instance(global_env
0.0027752199104805965
-1
0.0027645977954125437
ArrayBuffer
0.002743434593447223
contants
0.002741304624998667
sizeof(properties[0
0.002723828353484496
napi_create_reference(env
0.002710135120830598
fields
0.002698635800065126
=
0.002688214974174493
reinterpret_cast
0.002682078683695426
napi_typedarray_type
0.002649633392820344
step
0.002644600519382955
C/C++ file
0.00263087724890583
napi_unwrap(global_env
0.002627861525348676
exports
0.0026138932501796846
dict
0.0026039439809502837
gcc
0.0025983698559901183
res
0.002588151726270246
cv::Range
0.0025853699476487066
corresponding constructors
0.0025852116128592755
jstype
0.002580594252312708
MatVector
0.002576601297576133
fixed part
0.0025749567247962285
napi_define_class(env
0.002563037097443344
standard compiler
0.002560852951616245
cxxtype
0.0025593388323739996
vec
0.0025457441049340007
python
0.002542766156852121
https://github.com/kripken/emscripten/issues/7437



synax
0.0025289825986058215
enums
0.0025174905274380145
cv::Mat::elemSize
0.002512281216298563
several ways
0.0025090175176540864
declaration
0.0024885480609273506
separate file
0.002486708375205382
string
0.002481991416141655
constants
0.002470694612299559
generated wrapped code
0.002468813397966887
constant

Contants
0.0024667632336834553
Code parsing

Python module ply
0.002463008344727023
format
0.002462938324720053
.property("cols
0.0024593199140676442
int)>(&binding_utils::convertTo
0.002447107046444848
content
0.0024421453119707528
HEAPU8.buffer
0.0024379280658512
belows
0.002427594740953711
napi_define_class
0.0024216965176659866
constant, global function
0.0024129967346290457
detail
0.0024098349544734794
natural manner
0.0024043644829735175
node-gyp
0.002400178214163127
common type implementation
0.0023991838788228856
val

val
0.0023962309320645315
correspondence
0.0023929216452149367
drop-in replacement
0.0023840696441341544
vector

Register vectors
0.0023809815519276033
js class instance
cv.Mat.ones
0.0023752368016222965
napi_valuetype
0.0023737550339945103
cv::Mat::rows
0.0023698308050223308
Open Source
0.002368353141631697
dataHeap
0.0023529167425495063
Memory manager

value
0.0023458892508955954
origin
0.002339794017956884
binder tool
0.00233644264088324
emscripten
0.002335746088764599
reference
0.002329002027469318
namespace
0.0023281642810204883
flow path
0.0023279296673567825
size
0.0023238923976991715
name-mangled C++ functions
0.002323112257479703
Code generation
0.002318745768769951
Emscripten
0.002310454572405376
high cost
0.002307090023836173
emcc
0.0022970750891506677
table
0.0022969695635214117
templates
0.0022965175950823715
glue" code
0.0022930791363211544
cv::Mat::cols
0.0022871441635188964
mat.elemSize(js
0.0022852897251969414
class

Registered classes
0.0022851455998022757
main principle
0.002246659189278463
details
0.0022459289014885773
convertTo:[(void,[Mat
0.0022348080655216233
stuct
0.0021852736894631187
convenience
0.002183477515777899
int],binding_utils::convertTo,None
0.002162873254969711
returned values
0.002160134577892469
synax error
0.0021288664115333544
emscripten::val
0.0021268245495139494
.constructor<const Mat
0.0021026929256450486
limitations
0.002072338922816787
T
0.002051060238802186
Probelms
0.002025366836343894
String
0.0020221121852207575
internal
}  // namespace
0.001975483460058358
new cv.Mat.ones
0.0019464997470150722
more efficiency
0.0019378137105410696
napi-emscriptenPrincipleEmscripten
N-API


Code generationCode parsing
Wrapping codeclass
value_object
value_array
constant
global function
vector
val


Type conversion
Memory manager
0.0019150466280636554
cv
0.0018975671836387355
p->target
0.001896453863187931
created variables
0.0018627790969021926
double Number double
std::string ArrayBuffer
0.0018625889034534424
Implementation
0.0017485878759367756
LD_LIBRARY_PATH=/usr/local/lib node tests.js



Probelms
0.001726904951183396
short
int Number int
unsigned int Number unsigned int
long Number long
unsigned long Number unsigned long
float Number float
0.0017183071678648796
front end
0.0016783533610097933
