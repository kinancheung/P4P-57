Upload sample contract
0.027436087477025674
account
0.018184024319038948
CPS
0.015488137337690338
CPS Coin source code repository
0.01531046049398707
wallet
0.013545758030000212
cd
0.012156677613311018
command
0.011719297882425967
message
0.011441457541100217
dependencies
0.011128814546375742
private key
0.0104676199305111
cpsd binary
0.010096558855869686
smart contracts
0.00996806969302875
node
0.009599573366071213
Ubuntu
0.009390750673050265
necessary permission
0.00928499887918398
initial block producers
0.009233205821846682
MacOS Sierra
0.009227865795920017
inita account
0.009208796947296741
git clone
0.008884595539581026
code
0.007859657986881038
built WASM compiler
0.007684300641386703
automated build script
0.007596210621116813
zkp
0.007519804015207601
cd ~
git clone
0.007469116885659862
cps
0.007075078035489146
instance
0.00696684402160128
blocks
0.0069485171289331025
messages
0.006860884667404648
secp256k1
0.006819481400344037
default configuration
0.006725288026797224
account key
Creating accounts
0.0067241167975211616
build/programs
0.006573179508279766
data
0.006530523736020221
testnet_np
0.006407656188135375
@2017
0.006357908306970925
transaction
0.006229301337464066
_
0.006037743187814271
= initb
producer-name = initc
0.0060317479648312414
time
0.005932507328524264
API commands
0.005889937982538965
following

{
  "account_name
0.0058702079847484856
json response
0.00586725444655849
response
0.005775837743283244
Creating accounts
0.005701068783617869
blockchain information
0.005452807871524869
date
0.005300790414268488
.bash_profile
0.005297957289492116
launcher



Creating
0.005224747365410916
testnet producers
0.005129188337436287
=
0.005095233015366216
nodes network composing
0.005086423323955591
account creation
0.005051353928032617
config.ini
0.005046646123398925
data-dir
0.004984369895323813
block producer plugin
0.0049794094049191275
testing purposes
0.004948395168703213
Cryptonomex branch
0.004943157133701656
values
0.004837267351402076
future reference
0.004801988583955278
http requests
0.0047975042137193445
install
0.0047756762437524665
CPSCoin
0.004719744936353579
CMake
0.004680067699734069
process
0.004633307484709395
binaryen
0.00461066271482416
latest version
0.0045959687408762715
apt-get update
wget
0.00452932829832254
submodules
0.004495689439192068
sudo
0.0044709254203686615
git submodule update
0.004453369797925137
following instructions
0.00440804287593698
public/private key pairs
0.004373140893771053
debug build
0.004353328468497656
account",
     "balance
0.004342064245237344
Blockchain
0.004324578397423751
repo
0.004314558985739346
Building CPS
0.004280406903547814
initc
0.00425445230526514
Docker
Manual installation
0.00424350546401162
project
0.004206992522901233
https://raw.githubusercontent.com/Homebrew/install/master/install
0.004188791449636559
Dependencies
0.004175984145485198
cpsc/
0.004153169866007384
synchronization
0.004135356012939334
cmake
0.004064132506384046
09T07:56:32 producer
0.004039877967940226
key # owner_key
./cpsc
0.004033990726287352
XCode
0.004032197553660965
WASM_LLVM_CONFIG environment variable
0.004006515076908878
-j4
0.003979143971839765
clangs default choice
0.003975628713920871
Unix Makefiles
0.00393690717983099
testnet genesis state
0.0038770093668799984
xcode-select --install
ruby -e "$(curl
0.0038683931693881566
architecture [ubuntu|darwin]
optional mode
0.003859226475326381
transaction_id field
0.003830340508352288
stale chain
0.0037993103563085454
rapid development
0.003787176399459729
programs/cpsd/cpsd --skip-transaction-signatures --data-dir tn_data_0
spawning child
0.0037758102439145267
second optional input
0.003763747632899092
respective tests
0.0037240116764902494
output
0.0036926305728826074
trx
0.0036768929620720975
blockchain infrastructure
0.003661095965858956
build/development environmentAutomated build scriptClean install
0.0036446131915207486
export BINARYEN_ROOT=~/binaryen
0.0036098214414482686
https://github.com/WebAssembly/binaryen.git
cd ~/binaryen
git checkout tags/1.37.14
cmake
0.0035942096981291007
WebAssembly -DCMAKE_BUILD_TYPE=Release
0.00355817259513176
private multi-node test network
0.0034677425724168043
thread-0
0.0034065570994738087
--single-branch --branch release_40
0.0033463904572252614
single-node testnet


Example Currency Contract WalkthroughExample Contracts
0.0032922887186741714
next step
0.0032356892533880726
PUBLIC_KEY_1
0.003101018282402458
tn_data_0
0.0030904748794276515
https://apt.llvm.org/llvm-snapshot.gpg.key|sudo
0.0030438425568584844
PUBLIC_KEY_2
0.003040215170581645
apt-key add -
sudo apt-get install
0.003024899354457335
directory
0.002990940948764912
interfaces
0.0029522363514045396
port
0.002948045552919866
127.0.0.1:8888
0.002924124782274386
ID
0.0028914439525736376
Edit
0.002881945925919776
active_key
0.0028452457975827105
tn_data_1
0.002840325170707196
Docker
0.0028048941456380906
pairs
0.0027782404498038456
Other common build types
0.0027771288751311223
number
0.00276199260162519
Synching
0.0027567885850151626
/path
0.0027507717971482206
Debug
0.00274795291346257
defaults
0.0027383152414291794
curl
0.0027313500646569547
external dependency
0.0027283584249925222
other internals
0.002724935413538459
C++14
0.0027130160344602788
owner_key
0.0027126265836868863
walkthrough
0.0026968406926844157
least 8 minutes
0.002693032879131624
programs
0.00268861313595487
argument
0.002661026743139799
place
0.0026599816256367877
purpose
0.002653653835148869
authority
0.002648335081221854
Cryptonomex branch)
binaryen



Clean install
0.002644542631998854
part
0.0026442402239831974
Outputs
0.0026340585008183025
dependenciesClean
0.002615394259448057
password
0.0026058914673834912
default data storage path
0.0025917128908834854
child
0.0025824353398129
block.one
0.0025676553311540923
CPSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Important
0.0025552255391758563
steps
0.002554357123116978
--scope
0.0025535974210186335
flag
0.0025340938907461807
libtool
0.0025127798295991573
Add WASM_LLVM_CONFIG
0.002511625825769187
fact
0.002504955867075131
LLVM_DIR
0.002503879771152318
cpsio::producer_plugin
# Wallet
0.0025006535017616177
exectime_ms=0
0.002500501417569961
network conditions
0.002494554613347494
users
0.002477108122062999
content
0.00246922774158919
llvm@4 gmp ninja gettext
brew link gettext
0.0024622897773866267
genesis.json
0.002448653700776229
flags
0.0024472711797761575
detailed API documentation
0.002441468470143697
easiest way
0.002425651627017315
Brew
0.0024213770592963436
recursion
0.0024134811133402355
software
0.002406798607259098
from":"currency","to":"inita","quantity":50
0.002399331252809991
Release
0.002389525490832577
ruby
0.0023874706345407117
simple test network
0.0023864175389394756
https://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.bz2/download
0.002377327105748825
Ctrl-C. Note
0.002375141667564035
case
0.0023746821716397358
Messages
0.0023695778022240358
balances
0.002344781707997746
./
0.0023021196360743616
tail
0.002298265617432234
funds
0.0022970543352653786
recursive clone
0.0022953997309929034
cp
0.0022835474158442843
deployment
0.002282939217906426
04T04:26:18
0.0022822932701787183
last req
0.0022701841782251366
inputs
0.0022664903575646445
boost_1.64.0.tar.bz2
0.0022644152860214466
future release scope
0.0022447830392305452
public testnet
Doxygen documentation
Running CPS
0.0022381813731571602
confirmation
0.002235338343203424
from":"currency","to":"inita","quantity":50} --scope currency
0.0022231407087050757
test suite
0.0022110617216093372
generalization
0.0022038224631501426
c++
0.002189961786984688
developers
0.002170268104264943
alpha-quality
0.0021641886489611128
develop applications
0.002152232570996614
less tokens
0.0021513446823553926
Powerful Infrastructure
0.0021219480747656297
unstaking_balance
0.0021090677436830566
cps/source/genesis.json
 # Enable production
0.0021072502479744237
initial supply
0.0021023084295981615
release_40
0.002096219704974961
error
0.0020882023862461127
proper initial balance
0.002087663480550853
repository
0.0020823023468409746
Decentralized Applications
0.002073279224754032
cps
./build.sh ubuntu
0.002054376803877548
info
0.0020541971160362594
code currency
code hash
0.0020382431797714958
peer
0.002037522134691068
cpsd/
0.002022435082152917
producer-name = initq
producer-name = initr
producer-name =
0.0020173608174999065
wallet import XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX



Upload sample "currency" contract
0.002007797267384582
cpsd - server-side blockchain node component
cpsc - command line interface
0.0020029180743894007
mkdir
0.002000200026447565
high-performance
0.0019930992642957154
currency/currency.wast
0.00199281675426956
&
0.001987667145942323
last_unstaking_time
0.001985685914573943
false
}



Transfering funds
0.0019643029707736366
contents
0.001962070601113114
export WASM_LLVM_CONFIG=~/wasm-compiler/llvm/bin/llvm-config
0.00195184083993769
blockchain
cps-walletd - CPS wallet
launcher - application
0.0019503996457928426
lldb-4.0 libclang-4.0-dev cmake
0.0019321160867700174
plenty early experimenters
0.0019251357368981553
enable-stale-production
0.0019208293324215365
currency",
  "cps_balance
0.001914458126756157
WASM build target
0.0019034156760248746
pending
...



Example "Currency" Contract Walkthrough

CPS
0.001876230726631989
libbz2-dev libicu-dev
0.0018179675371168581
producer-name = inith
producer-name = initi
producer-name = initj
producer-name = initk
producer-name = initl
producer-name = initm
producer-name =
0.0018142412760441613
producer-name = inito
producer-name
0.0017876347835270702
cmake -DBINARYEN_BIN=~/binaryen/bin -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib
0.0017682001846649226
echo "export LLVM_DIR=/usr/local/Cellar/llvm/4.0.1/lib/cmake/llvm
0.0015264084430139829
