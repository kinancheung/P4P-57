pop
0.0875054648041024
VM
0.06710525938609382
number
0.02619055909226561
data
0.022926851069956313
recorded program

REPEAT
0.021816670764875343
empty array
0.02106267466172608
wasm
0.017022739999015272
ArduinoSTL
0.015941650045410576
PUT
0.015234301141554628
function
0.014736798738912316
repl
0.014634132537615037
output files
0.014189167757702435
count
0.013928689481459552
skips
0.013001129498976452
Arduino ide
0.01223748799277448
python
0.012208489255722156
value
0.011443384189614936
push(pop() % pop
0.009846455526800694
push(pop
0.009730205684532967
Cygwin
0.009676199147034378
insert
0.009561701987436354
1-
0.009299245153933083
2- use MinGW
0.009065206028898603
VM.h
0.00891203030178612
emmake
0.008906819374816145
functions
0.008870864802638117
cat
0.008771535986977165
ways
0.008557191853818048
https://github.com/meganz/mingw-std-threads
0.008251732642998786
macOS
0.008147169635396207
Big Sur
0.008113348558129705
Xcode
0.008072532131929981
utility_scripts
0.008006441395604805
exit status
0.007898428415544424
CALLFN
0.007844352334661407
windows
0.007844276568289045
IFSKIP
0.007761243068003816
universal binaries
0.007620003971976606
.vmso
0.0075297579234260064
default
0.007443452491793392
MKFN
0.007439175160727988
libraries
0.0073427881371345505
c++ code
0.0071940620928464824
INSERT
0.0071040192127459646
file
0.006998614501796827
EXITFN
0.006988611268296657
print(pop
0.006919655881947116
PRINT
0.006907358973997076
problem
0.006845038900790268
POP
0.006790998459919729
mkcc
0.006756669839320703
HelloWorld
0.00669646175256185
Arduino UNO
0.006679119219615612
apple-universal2
0.006643677435757845
EXIT
0.006581130488401743
#
0.00650632053885517
return
0.006487475095564476
output
0.006482563325368843
stack.insert(pop
0.006371408742719293
version
0.006350097005884139
WFRUN
0.00632299704081119
latest Arduino AVR core
0.006275486070614607
readline
0.006235906073576416
MEMGET
0.006210407259651179
RUN
}

THREAD
0.006153743440969379
REC
0.006117309479508062
STCKMOV
0.006037315033042261
RSHIFT
0.005994771148573581
code

PUT TXTHello\n
PRINT
-------------------------
vm.run(PUT
0.005950312657062926
push(mem[pop
0.0059333575767207755
opcodes

opcodes list
0.00586745533059955
programs
0.005824733244260675
del mem[pop
0.005818514519029551
cut -d  -f2 -> list
0.005784601822808088
push(pop().toBool
0.005763083896164135
Hello\n
0.005741323575253723
MEMDEL
0.005725632931024564
delete stack[pop
0.005697753009363319
MEMPUT
0.005667243221008905
!
0.005650873431330105
NEG
0.005631437096053764
IFFRUN
0.005621556208090115
IFTRUN
0.005613809156563278
LOR
0.005588711641487152
mem.append(pop
0.005587629807673271
esp8266 Arduino board version
0.005566613477229748
XOR
0.005519446392309693
example
0.0054033075661298995
APPEND
0.005377183757835032
LE
0.0052525537953671386
push(get().canNum
0.005239727408609343
DIV
0.005179730860619962
LT
0.005149347020608828
push(reverse(pop
0.0051192577837996705
STCKGET2
0.0051146848286041675
bitwise)

LNOT
0.005083848514458489
push(~pop
0.0050723302394877386
push(pop().toNumber
0.005034013975348355
LAND
0.005018664960719765
SUB
0.005000978916188066
command-line arguments(EXT_CFLAGS
0.004963681057602231
ISNUM
0.0049336893904779735
EQ
0.004861163990992979
GE
0.004685984546322727
repository
cd VM
0.00458509764616784
loop
0.004541079438292777
simple virtual machine
0.00452764674294886
gmplib
0.004509475685723942
git clone
0.004443635894458556
