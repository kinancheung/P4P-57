other
the string coal
0.041578061640134875
function
0.04048657302572449
memory
0.03828062211385454
string
0.035439659020326086
line
0.03238243997015794
hash
0.030885774920205236
var result
0.03018876000427436
CMakeLists.txt file
0.029041406842527963
gift
0.026917593323633342
input
0.026463154012498075
first character
0.023942685383716446
Usage

gift <FILE
0.021827946052426616
gift("source code
0.02149684446393578
Module
0.019003416218921286
UTF8ToString(result
0.01846891646401912
malloc
0.018455715571319607
ccall
0.01806938159875679
Module._gift_free_result
0.018031537788484184
cwrap
0.01777692232506025
convenience
0.01755687749286307
Module._gift
0.016917481937294192
Module._gift(srcPtr
0.016752816532265364
Module._free(srcPtr
0.016556013542144296
Module._gift_free_result(result
0.015969590500341024
good idea
0.015314183547414626
compilation
0.015004623992986793
ALLOC_NORMAL
0.014807466918642523
wishlist
0.014738602958411461
outputs
0.014629372661202714
return str
0.0143081766343193
time
0.014071034652560833
src
0.013925851606715499
CMake
0.013889379468474747
things
0.013757012345439966
context
0.0137459267178336
whitespace
0.013646145200928942
srcPtr = Module.allocate(Module.intArrayFromString(src
0.013608873905595455
files
0.013486470725599773
Emscripten
0.013396666466097147
consistent behavior
0.013390245025193537
alias
0.013358485944518718
end
0.013328757079275924
order
0.013207616309021515
necessary
function exports
0.01309551407264961
output
0.012607329532008158
wrapper
0.012579684504097364
multiple
0.012524767806602924
interpreter
0.012274480801650266
festive esoteric programming language
0.012132417430746736
implementation
0.01188454786798945
halts
0.011683196610397
script src=
0.01136947487798632
Gift
0.011188691419804392
Node.js
0.010953384617260765
MIT license
0.009601427553689007
