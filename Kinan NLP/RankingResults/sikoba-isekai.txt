isekai
0.021244216550735363
other project
0.01958863964529362
additional file
0.018682724716267207
libsnark
0.01831632488097775
C program
0.017249807629162218
proof
0.016659843638265958
Isekai
0.015837543204824445
LLVM bitcode
0.01516459485268745
several programming languages
0.014210602194557918
option
0.01383429213705728
support
0.013667773588518364
full function call
0.012995414918833484
inputs
0.012947305998923669
ZKP libraries
0.012902166554341444
scheme
0.012773564881634268
MPC library
0.011052683361718281
only tool
0.010995196928010324
libclang
0.009708151407473302
domain specific language
0.009352066288234736
=
0.009193007839514784
libiop
0.009113940761110266
existing files
0.008785287242933166
NzikInput
0.008708929157841189
test
0.00861201028082798
trusted setup
0.007964271274406758
Input
0.007852800024347791
C/C++
0.007797996431777573
proof systems
0.007708722872688428
output_file.j1
0.00766152021803744
verifiable computation framework
0.0076429044863182355
new LLVM instructions
0.007538116663720016
DEC-19
0.007236619824229555
order
0.007230216117956186
existing C or C++ code
0.007219400003558804
LLVM support improvements
0.006633096218995648
local directory
0.006601645578455685
C++
0.006583946222482376
following signature
0.006297778126737807
same name
0.006282660529204717
partners
0.006225110188657577
public parameters
0.006100339431902923
pointers
0.006033251461660331
version
0.006015860181163039
dalek
0.005967296594250304
knowledge applications
0.005926490415269609
sponsors
0.005873690685713747
Fantom Foundation
0.005747506090513018
Ubuntu
0.005732723517654374
my_C_prog.bc.in
0.005732616700225119
struct
0.005678452195109695
program execution
0.005618108748998227
command
0.005511547349615856
Bulletproof zero-knowledge scheme
0.005493081911219251
tests
0.005411026327148784
months
0.005395074988391724
assignments
0.005392582242985766
Medium post
0.005298175014274047
mainstream programmers
0.005256957985292146
bulletproof
0.005225161710361176
verifier
0.005195787402668737
additional .in extension
0.005182595688148789
Install Crystal
0.00515909633271856
knowledge proofs
0.005120560955640679
more features
0.005096072612562665
cp /tmp/libclang.so /usr/lib/x86_64-linux-gnu/libclang-7.so.1
0.005092533336057314
required packages
0.005051990861166485
instance
0.005050243150152795
x2705
0.00501299265246329
global/static variables
0.004961465201165235
constraints system
0.004955535452943217
maximum efficiency
0.004948520155463308
errors
0.004859668026613698
submodules
0.004684758557809962
libsnarc
0.0046060143549220035
verification
0.004602139434278787
apt install clang-7
0.004188043382016106
arrays
0.004177856167736524
Aurora
0.004091424354679385
Groth16
0.003985317247087609
Bulletproofs
0.003949180518641393
BCTV14a
0.003935960369230639
Ligero
0.003907433064999875
java
0.0038099028592163734
Output
0.003784943721804548
witnesses
0.003780833647416055
python
0.0037641602565291494
bitcast
0.0036928944367478414
i.e
0.0036852543476104493
memcpy
0.003681406002910219
Inputs
0.0036805172987341072
arithmetic and/or boolean circuit
0.0036348521147212603
Support
0.0036345042873978106
outputs
0.0036320200362028455
Clang
0.003626244885000562
windows
0.003597942886973574
my_snark.p
0.003575297462972689
NzikInputs
0.003549025474534034
initial development
0.0035351804653725757
sudo
0.0035308769951131217
input program
0.003460607238278049
goto
0.0034586092780363943
Domain-specific functions
0.0034452266009421073
goals
0.0034304423609184693
break
0.0034185762191391383
Windows
0.0033985290835130745
line
0.003390380382181655
expression
0.003372677206935076
developers
0.0033378009231107473
https://www.mail-archive.com/cfe-commits@cs.uiuc.edu/msg95414.html
0.0032931040597104703
researchers
0.003288113558988104
course
0.0032845455116779255
Frontends
0.0032840786646440717
value
0.003273483695523387
Floating point operations
0.0032487754505645264
my_snark.s
0.0032229003917263583
future
0.00320632200490936
practise
0.0031755613680769907
feature
0.0031679612810422714
November
0.0031656730792698966
Native field operations
0.003163328053316451
impact
0.003155606132022116
performances
0.0031504194415206735
running make
0.0031405874896016034
efficient cryptgraphic primitives implementation
0.003120378582529663
result
0.003119936689488402
Bulletproof
0.0031132083381178416
major advantage
0.003108568244494358
default
0.003096824624236149
Rust  
Crystal

More long-term goals
0.003092239764495481
preprocessor
0.0030892986532142677
same time
0.003074892719515983
my_C_prog.c
0.0030684569299196285
goal
0.00306139125147707
C99 code
0.0030566460753342745
clang
0.0030565675443230923
includes
0.0030412637870949983
patch
0.003040851944254084
Fractal
0.0030401487220161026
Makefile
0.0030325736674536364
-emit-llvm
0.003029381125230973
protonmail dot com
0.003028081505917716
void outsource(struct
0.003019105139596873
Sikoba Research
0.002999553397996186
docker subdirectory
0.0029805291414999715
July
0.0029726386629382456
list
0.002964982460072
Major Update - October
0.0029553017858282866
failures
0.002938324467124137
Features
0.002938032071555702
statements
Inline function
0.0029308360484087822
real life
0.00292766971679988
Limitations
0.0029164182002723526
theory
0.002881576961033195
WebAssembly frontend
0.0028788611715143764
Function calls
0.0028738430140256505
filename
0.0028632364053874986
git clone
0.002863186768154554
arithmetic representation
0.002858446361637323
shards
0.0028352370825648174
limitations
0.0028351002775136827
--verif=my_snark output_file.j1.in

A verifier
0.0028297556640363097
cd
0.0028243718241554206
outdated) isekai Technical documentation
0.002813957108673194
example
0.0028033892594895343
Loops
0.0027951981823385514
strong type safety
0.0027883242079820665
tentative
0.0027855155191608247
more information
0.0027775958570043146
Array look-up and dynamic storage optimisations
0.002756259573104556
other Linux distributions
0.002756135624099376
free and open source
0.002746584987484624
Control flow graphs
0.002733067993508763
Arrays
Pointers

Limitations
0.0027242040565204047
install libprocps-dev
0.002723232421062934
crystal build src/isekai.cr
0.002719665060299485
Pointers
0.0027108979350598124
blockchain projects
0.0027011835726081777
milliseconds
9 examples
0.0026795587998075274
zk-snarks
0.0026771358441585284
slight modifications
0.0026563081255131776
aim
0.0026422120566424647
constant


Source code
0.0026379730458028156
libclang.so.gz
$ gzip
0.0026214446444249753
dev
0.0026041127463429002
Dynamic arrays 
Dynamic allocations
0.0025974234143901604
Entry point
0.0025932778556216683
--always
0.0025787920044366315
following additional packages
0.0025642337902980032
Integer operations
0.0025537089278991508
circuit
0.0025298815918228285
recommended way
0.002486555054906918
floating point types
0.00246658199450938
install libsodium
0.0024021015272699957
cmake
0.00235606170622097
Binary
0.002270647845931839
left/right shift
Comparisons
0.002242308741636485
groth16
0.0017195592055965438
