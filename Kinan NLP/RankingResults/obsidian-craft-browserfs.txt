BrowserFS
0.06960153310948945
Node JS file system API
0.05322287770246306
Emscripten
0.021036389361237452
process
0.01890342789464198
Buffer object
0.018362527800888734
various backends
0.01473208622445424
folder
0.014619749276344487
fs
0.012978888698127689
Browserify
0.01258112797444696
path
0.011933280996291429
files
0.011869704090018881
modules
0.011165819579574916
browserfs/dist/shims/fs.js
0.01076442346826417
Node
0.010759312838813831
function
0.010688189415763792
browser
0.010252449848483657
e
0.01005857749694131
memory
0.009475298371319133
return response.arraybuffer
0.009326485013134989
multiple file systems
0.009299684753893402
Stores
0.009248908293906894
asynchronous backend
0.009210574435609187
script tag
0.008933953129671775
NPM
0.008670810112485232
authenticated DropboxJS client


InMemory
0.008624194102095011
e.g. Dropbox
0.00839524600164376
options
0.008357082567882257
code
0.008147395555451768
var Buffer = BrowserFS.BFSRequire(buffer).Buffer
0.00796539763486538
Webpack
0.007950801820848626
var
0.007741735506961843
synchronous backend
0.0077061196805834
Installs globals
0.007566429096274112
ZipFS
0.007277113229588299
single directory hierarchy
0.007095377862474237
minified build
0.006923851315413435
buffer
0.00684847747750502
page
0.006824318160738689
many filesystem backends
0.006817623278303395
npm install
0.006590635172543509
application
0.006574934930571159
dist/browserfs.min.js
0.0065727619765452265
entire contents
0.006564893432333836
users Dropbox account
0.0063408979502873365
FS.createFolder(FS.root
0.006191072699970838
Node Buffer objects
0.006016005991320049
error
0.005945252709761439
BrowserFS.install(window
0.00591203471053701
arbitrary object
0.005906930557434034
data
0.00588780307292895
FS.mount(BFS
0.0057963188609234904
mount point
0.005717148425705244
require.resolve(browserfs/dist/shims
0.00571241657465502
EXPLODE
0.005569314302644539
root
0.005542805472453696
UNREDUCE
0.0054176100647003525
script type="text/javascript
0.005384902840228988
function(e
0.005357710262784264
Mount BFSs root folder
0.005081687094808983
support
0.005043378518737556
UNSHRINK
0.005041398646128208
sync
0.005025133156949364
Run yarn install
0.005023131203357953
IndexedDB
0.004839911852867227
browser-local storage
0.004812114550951113
Prerequisites
0.004724467322378213
IsoFS
0.004704196050328972
construction
0.004663666184834093
subfolder
0.004501284817173817
API documentation
0.004495857171751327
interactions
0.004359114129506264
versions
0.0043441583033566435
local dependencies
0.004316312884050095
more information
0.004279114748451881
webserver
0.004243651092223721
demand
0.004220534444500626
FolderAdapter: Wraps
0.004200442841955038
Read-only zip file-backed FS
0.00417983391257186
additional effort!Note
0.004169906588536451
larger file stores
0.004165311761413393
ProvidePlugin
0.00416404361338588
Wrap
0.0041280609248100794
super old zip files
0.0041245122228948
WebWorker
0.004118695769075655
different locations
0.004117074023194422
HTML5FS
0.004115613901272721
browserfs-zipfs-extras package
0.004106212343364512
browserfs
0.004097176388673804
BaseFileSystem class
0.004085075377214504
module.exports
0.0040743509779687884
Microsoft Joliet and Rock Ridge extensions
0.004054099583837052
new webpack
0.004036202020484803
resolve
0.004022970392074092
box
0.004005550325225502
variety
0.003995135152438924
false,
    Buffer
0.003993689039320919
subset
0.003986024117767916
main thread
0.003983590797041577
alias
0.003982510353726342
require
0.003965499750604096
LocalStorage
0.003930953278081053
following
0.00392896138297089
monkey-patches
0.003910235047796574
browserfs.min.js
0.003906407452782044
other way
0.0039019797943730264
fetch(mydata.zip).then(function(response
0.003898223323280556
top
0.0038725683624151706
separate libraries
0.0038680822285955714
node
0.003867636906762826
XHR
0.0038581886371867203
require(browserfs
0.003855666898385743
Persist particular folders
0.0038552116053659734
Downloads
0.0038335041127286144
OverlayFS
0.003812122235421992
ships
0.003798580699516917
Dockers overlayfs
0.0037640952000458023
bufferGlobal
0.003739343673414273
webpage
0.003726645461566938
Modules preRun array
0.0037230234417104987
nix-based OSes
0.003720845773996284
Supports
0.00370376402072016
Custom
0.0036946474005065824
LICENSE
0.0036893014030141853
localStorage
0.0036848857690191736
ISO9660 standard
0.003677420480767024
window
0.0036670518966684454
same interface
0.0036401835513653552
temporary file store
0.0036246709183448246
action
0.0035941968487477396
UMD module
0.0035882422556230914
.then(function(zipData
0.003543888246451787
zipData
0.0035276128181197805
favorite
JavaScript module bundler
0.0034856768136499417
simple usage example
0.0034842203818891892
new fetch API
0.003483254372333819
@param
0.0034697274467224972
details
0.003456448806336454
DISABLE Webpacks built-in process
0.003440948363431693
global namespace
0.0033762641621623334
cb
0.0033709666162145503
NOTE
0.003352235114161207
require(browserfs/dist/node/index
0.0033309478055652906
buffer/fs/path
0.0033295162027005207
insertGlobalVars
0.003276903426498488
browsers IndexedDB object database
0.003235647202514072
thinking
0.0032013865124325023
MIT License
0.0031687700789633727
browserfsPath
0.003158937576631198
plugins
0.0031533735170580215
console.log(contents.toString
0.0031459660273901752
require(buffer).Buffer
0.003143746816613279
mirror operations
0.0030838192376039268
builtins: Object.assign({}, require(browserify/lib/builtins), {
    "buffer
0.003070498958860023
use
0.003050778208601869
InMemory
0.0029266487158427605
unit tests
0.0028222265024795785
status
0.0026634962692060875
BrowserFS v1.4.3

BrowserFS
0.0023800662019574097
