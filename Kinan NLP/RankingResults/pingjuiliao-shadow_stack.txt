main function
0.0978259040422989
mov %rax
0.08592705037033466
shadow stack
0.049513817814256796
0x0(%rax
0.03484818623137015
insert codes
0.031077078419445958
c
0.03013024657173932
style
0.029906822015914682
memory
0.024733375086807386
stack llvm pass
0.024557420399496925
Macros number
./others/shadow-stack-llvm10
0.023066877317475316
PROT_READ|PROT_WRITE
0.022971829964858467
MAP_PRIVATE|MAP_ANONYMOUS
0.022903921268688118
./llvm/lib/Target/X86/X86ShadowStackPass.cpp - instrumentation code 
./main.c                                     - simple c code
0.02264275721738998
Prologue/Epilogue
0.022458179657775038
global variable
0.022008893924564444
IRBuilder - system
0.02188505805812065
0x1000
0.020512117929605153
-1
0.020267626108419774
head
0.02013407450131249
ret instruction
0.019546560394745782
gs:0x0
0.019174713293846932
draft/
0.018525611960678957
PPCFrameLowering->emitPrologue
0.018261290424889186
arch_prctl(%rax
0.017978722189359055
code
0.01741419341260096
API
0.017129486374858553
SET_GS
0.01707860346246306
rax   = mmap(NULL
0.016346284596774785
implementation detail
0.015126562780961788
main
FunctionPass - doInitialization(Module &M)
MachineFunctionPass - runOnMachineFunction
0.014378715285687137
Bold
0.01425169678576828
runOnFunction
0.014225259450634985
0x8(%rbp
0.014222611144837274
other files
0.01420888434117611
X86ShadowStackPass
0.013932171752003793
rax 
sub %rax
0.013181705891972494
return address
0.012743919993854996
ModulePass
0.012199624532812401
bit X86
more simplified code
0.012111967503915027
X86ShadowStackPass.cpp
0.011352566459863178
file
0.011254745721005495
llvm-6
0.010324375921913095
project
0.009767187657000301
AMD64)
LLVM MachineFunctionPass
0.009559947118562544
source
0.008331354647939732
