SaxEventType
0.03677190367170359
fastest parser
0.029029815086204898
sax js
0.026372761184070663
events
0.01976891406729087
document
0.018227449295329497
raw
bytes
0.017676293477070365
event
0.016846927441022452
data
0.014875250027512147
JSX
0.014335902082128364
=
0.012993023060737168
XML
0.012727447139135303
Uint8Array
0.012104182056126329
Attribute
0.011069816825505107
JavaScript thread
0.01102588168393964
off processing
0.011012475939674785
attributes
0.010499780655894884
OpenTag
0.010483007614656448
WebAssembly
0.009740313939853954
character positions
0.009247246620118795
bitmask
0.009056302369133164
const options
0.008949436874979561
text node
0.008455221810503306
Tag
0.008161923862586833
elements
0.007962692901531425
speed
0.00782312040003496
number
0.007623560182758411
parser instance
0.007546106731747863
const
0.007374372791224871
large documents
0.007231341825277739
wasm
0.007225840663633564
stream
0.0070495204004236015
Things
0.0069248800525440815
first read
0.006897548187491477
SAXParser
0.0066337744458690616
code branches
0.0065932327900798515
project
0.006149290345739302
node
0.006109582935690806
line numbers
0.00607918749709513
foo
0.006076203871885433
highWaterMark
0.006038656936755398
chunk
0.005978226064445288
Angular Template
0.005736655862440288
Position
0.0055794715316073926
HTML
0.005560505233335862
string
0.005359435843393733
source
0.005355130147375181
rust v1.30
0.005293558945885818
Rust
0.005282285837819735
npm
0.005210205248477654
event type
0.0051782309487336114
memory
0.00515965539529933
length
0.005159072672624268
NOTE
0.005046687187198842
things
0.005034516751500008
performance
0.0050231738215495685
value
0.005010066712124955
process
0.00490415957855058
class
0.004841832896251339
eventHandler function
0.00478188070589858
Streaming
0.004775264324353688
results
0.004674240544854489
box
0.004652990988272565
end
0.004645443283807372
examples
0.0044640826903827304
function reference
0.004260675355533113
binary
0.004177899097366008
wasm32-unknown-unknown target
0.004062931027185847
path
0.003791614314481824
Promise
0.0037778270347385307
reasonable defaults
0.0037072314109637752
prepareWasm(wasm
0.0036931799060719982
transpilation
0.0036472160707589118
boolean
0.003582900681854329
counts
0.0035760580400552256
<
0.0035668946983419348
lexing
0.003542100780643694
bar="baz">quux</foo
0.003539845086116662
Benchmarks
0.003446593799767049
stores
0.0034332424463479052
linting
0.003431141299135752
support
0.003399996767125369
Methods
0.0033813873659316387
CloseTag 0b000100000000 tag
0.0033183768451584767
foo/><bar/></
0.003306915897891851
Node v16.14.0
0.0032983598439888743
>
0.003293403916256484
Prerequisites
0.0032697596491129645
member
0.003222723279467753
open tags
0.0032145091435888066
handler
0.003190121165774577
parser(events
0.0031707513298813352
json
0.003155897997124433
+
0.003145049609267033
optimizations
0.003131963115238749
play
0.00311251706882613
JSON.stringify
0.0031088816673210786
sgmlDecl
0.003106177076057785
location
0.0031034539803673792
Encoding
0.003075507995323687
Buffer.from(document
0.0030719623454655036
raw building blocks
0.00307088170974133
risks
0.003070611749161987
write(ptr
0.0030691878910188465
OpenTagStart 0b000000100000 tag
0.0030449488806201797
mut u8
0.0030403847171643376
u32
0.003039793695934769
parser.eventHandler
0.0030358298295055895
flags
0.0030240061128877435
program
0.003005828793220808
Doctype 0b000000001000 doctype
0.0030030136956125594
non
0.002992856175065146
Comment 0b000000010000 comment
0.0029890222334795786
method
0.0029849762820949857
SaxParserOptions
0.002974847360159575
Sax Wasm
0.002973755715068899
web
0.002956966519506393
ProcessingInstruction 0b000000000010
0.0029539252875808806
LSP implementations
0.002947179763568784
property
0.002943151476683177
Events

Events
0.0029401226645870337
native speeds
0.0029291030815854196
Parser
0.002922569965610581
expected size
0.0029210765905800015
chunks
0.0029043646430302736
times
0.0028975992046485427
current buffer
0.0028926989933618216
blink
0.0028834330308471013
void
0.0028653676687340392
absolute must
0.0028583269418022096
slowdowns
0.0028576121487063682
variety
0.002857383381783935
eye
0.0028525862440225086
Event Mask Argument
0.00285009553728649
Bit
0.002846128609142181
namespaces
0.002843333867066182
write(chunk
0.0028427938147220578
saxWasmResponse
0.0028426212615653658
sole motivation
0.002838020978314721
parser.events
0.0028321168059381313
Namespaces
0.0028234872109511805
conversion time
0.0028197631471380095
GHz Quad-Core Intel Core i7
0.0028114868213752024
favor
0.002811376992807017
new TextEncoder.encode(document
0.002809302215105211
example
0.0027996454188375748
grapheme clusters
0.0027875311583429995
body
0.0027757949159734766
SaxEventTypes
0.0027562549703801648
needs
0.002752538460052657
Writes
0.0027436839430714285
Advanced Features
0.002724440295190746
eventTrap
0.00272280848960477
non-trivial
amount
0.002717141337972682
button type="submit
0.0027162791028430755
throws
0.0026957792650993155
bit integer
0.0026941479503801505
MB
0.0026833335952747336
Other libraries
0.00267788521605757
items
0.0026491212753638506
overhead
0.002646810001461525
signature
0.0026335810746916442
arguments
0.002625386811022005
const parser = new SAXParser(SaxEventType
0.002615700325210091
index
0.002605587342889173
SAXParser.js

Constructor

SaxParser([events
0.0026013355447085783
optional offset
0.0025974870179449475
rules
0.0025973797208938545
templates
0.0025616356707968847
parsers
0.002555705196252731
table
0.0025508563195117983
substitutes
0.002547949919883506
32k
0.002544489882609674
first streamable, low memory XML
0.002541657238718448
bare minimum
0.0025209810930385997
current directory
    const
0.0025163922669244106
strict mode
0.002498881853558072
disabled]=disabled *ngIf=boolean (click)="clickHandler(event
0.002496227614357252
own implementation
0.0024864697197263157
file
0.002466947691175098
Properties
0.002450652400900138
room
0.002427260943277519
https://sh.rustup.rs
0.0024270404311169534
Simple API
0.002414324867889266
following command
0.002414159896986992
sax-wasm.wasm reports
0.00240439572551264
methods
0.002399692724511636
users
0.0023864107586590256
best real-world use case
0.0023667001115013756
notable differences
0.0023578881670281845
require.resolve(sax-wasm/lib/sax-wasm.wasm
0.002339827271613234
attempt
0.00232424536053405
fetch(path
0.002305034740476751
require(path
0.0022961213235318653
document.xml).then(async
0.0022921685570105174
artifacts
0.002279197003241666
SAX
0.0022741325864707083
parser.prepareWasm(saxWasmBuffer).then(ready
0.002269208113164514
stable compiler
0.0022657946519260355
build
0.0022456868135158053
ready) {
    // stream
0.002244314547439575
async function loadAndPrepareWasm
0.002219315779252054
reader
0.0021974647186502622
parser.prepareWasm(new Uint8Array(saxWasmbuffer
0.0021812951246925126
stable
rustup default
0.0021625239961088043
64k
0.0021571136560917794
readable.on(data
0.0021481215984753234
rustup target
0.002095351444880605
response.ok
0.0020873351546863736
readable.on(end
0.002057693946243086
require(fs
0.002046559285019343
parser.end
0.002045461541059149
Differences
0.0019822687340130254
/libs directory
0.0018614205462357603
