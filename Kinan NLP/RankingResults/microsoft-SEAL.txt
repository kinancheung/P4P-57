Microsoft SEAL
0.062082737173355176
library
0.020838072917903464
homomorphic encryption library
0.016698787203298114
data
0.016211746065739618
ON
0.013209076644199987
CMake
0.012131385619445677
commented examples
0.010823487147477545
cmake
0.010615243833344412
CKKS
0.009173884315444131
Android
0.009095111300255877
package manager
0.008438489724086949
System Toolchain
Windows Visual Studio
0.007913373205748758
Symmetric-key encryption schemes
0.007859262985775549
example
0.0077848232415734684
outsourced computation
0.007624970984388685
Windows
0.007422638328829235
developer command prompt
0.007338155416097538
code
0.007083523473718869
substantial performance
0.006983020884309796
key generation
0.0067400808397904645
BUILD_SHARED_LIBS ON / OFF Set
0.006252933807449982
such encrypted computations
0.006207034005919847
iOS
0.00610880661355329
.NET project
0.006038578314515555
WebAssembly
0.005848394071168196
several source files
0.005739584170768023
applications
0.005664553851258936
tests
0.005404034475109045
Building
0.00538495185452851
following
0.005319370522844921
C#
0.005287611795434314
.NET developers
0.005151026144466082
SEAL_BUILD_EXAMPLES ON / OFF Build
0.005131003163204615
BFV and BGV schemes
0.005010181461687921
Linux
0.004965478423432421
StartedOptional DependenciesIntel HEXL
Microsoft GSL
0.004932612902782095
macOS
0.004925324250088867
C wrapper library SEAL_C.
0.004889250100597947
support
0.004880551396646161
BGV scheme
0.0047361666178853635
@misc{sealcrypto
0.004660809711402599
EVA
0.004574810648921707
directory
0.004543919392268179
default
0.004541789639659486
encrypted integers
0.004398105100772468
other build options
0.00436305221249483
modern standard C++
0.004244437227243848
M}icrosoft {SEAL
0.0042265813814404895
ciphertext
0.004212033521377797
compression libraries
0.004193677035115006
WA
0.00416504624471105
required dependencies
0.004020854714746196
way
0.003902631486872227
user
0.0038072142815349422
Release
0.0037576887304471597
note
0.0036653991078366235
running benchmarks
0.0035953307690269926
modulo specific prime numbers
0.003586691663473805
Example flags
0.0034007283555830274
Intel Labs
0.003390623427826893
most platforms
0.0033653317796852487
cloud services
0.003302400056009007
application
0.0032877796100583955
new users
0.0032866210598864725
access
0.0032337817496757184
previous versions
0.003221822478505851
commands
0.0031719965418859066
emsdk
0.0031618840658340242
build/lib/
0.0031582817777092006
Ninja
0.003107569576658619
Tests
0.0030788942419522846
latest release
0.003070425497535664
C
0.003051298381666698
JavaScript
0.0029298506611984024
vcpkg
0.0028786298100919668
Programming
0.002860478444183864
EVA compiler
0.0028467317163083606
real numbers
0.0028418172512393457
secret keys
0.0028202675461841136
most cases
0.0027880113323220865
appropriate encryption parameters
0.0027667333887064897
bindings
0.0027454099665272127
results
0.002716917060864773
Components
0.00267765499179041
same scripts
0.0026459663197004137
decryption
0.002643844090195143
more information
0.0026404022021241295
API
0.0026376415149154064
C++17
0.0026370102915282655
x64
0.002558820850074071
\
0.00253803899581593
instructions
0.0025227610372921404
title
0.0024765392074094904
different capabilities
0.002474171084787187
NuGet Package
Examples
0.0024673698641312185
native/examples
0.0024625815236209484
latest toolchain
./emsdk install
0.002452127866144611
native
0.0024485475176621706
platform
0.0024383433979840675
generic technology
0.0024263117346229337
Version
0.0023600919712947065
Debug|Release
0.0023479035137077657
levels
0.002240050609483746
Examples
0.0022262641033411676
Encryption
0.002204482381360179
multiplications
0.002201077711618958
x64 Native Tools Command Prompt
0.002200622020117152
additions
0.002155519732350399
efficient and inefficient implementations
0.00214071490564461
encrypted comparison
0.0021322610922919994
module
0.002129810072271667
1_BFV_Basics.cs Encrypted modular arithmetic
0.0020905129122929366
cryptographic primitives
0.0020841582797862562
Ciphertext objects
0.002080007447290159
Benchmark
0.0020747264478451653
full path
0.002037866581789699
large number
0.002027352088239159
gsl::span
0.0020268801448162068
time
0.0020190440205240063
emscripten toolchain
0.002015817260622245
worse run-time performance
0.0020146210354655115
large fraction
0.0020120349591687394
Zstandard
0.0019967446683360193
Shake256 XOFs
0.001993279823940806
SecretKey
0.001987526556799554
fundamental concept
0.0019847882666970905
GitHub.com/Microsoft/EVA
0.0019759668618918873
Homebrew
0.0019746361687677655
Compressed serialization
0.0019729821878438835
associated source file
0.0019708311733776717
scenarios
0.001970223742967613
changes
0.0019636618377014527
CMakeLists.txt
0.0019605227372802726
libraries
0.001958931937796446
functionality
0.001952584431356665
generator
0.0019523807075457504
Blake2xb
0.0019512227066573245
# Configure CMake
cmake
0.0019418830013573458
specific third-party libraries
0.0019352920286875462
Files
0.0019241704309392866
low-level
0.0019033476689788642
emcmake
0.0018981706357000818
serialization methods
0.0018979431165423713
system directories
0.0018963410038501179
sections
0.0018935076850127982
ZLIB
0.0018929441123285147
ndash
0.0018788907657886923
fundamental concepts
0.0018762726567020946
.NET development
0.001855898715916284
output binaries
0.0018444673930235965
large amounts
0.0018330998587908036
Debug
0.0018077215073038803
list
0.0018060150069617665
CMake-based projects
0.0017968028979928438
performance benchmark
0.0017918231289116605
machine learning models
0.001785307348365333
pre-installed dependencies
0.0017839638685462418
compiler intrinsics
0.001782560385982668
Implementation details
0.0017824140014203187
CMake option Values Information
CMAKE_BUILD_TYPE ReleaseDebugRelWithDebInfoMinSizeRel Debug
0.0017775217056941565
many different environments
0.0017680247011213892
dotnet
0.0017669804297047718
multiplatform
0.0017606001741743917
Project / CMake settings
0.0017592918680638101
architecture flag
0.0017589572186849675
system download
0.0017526489447648639
ciphertexts
0.0017418539356008301
folder
0.0017401245986761065
secure outsourced cloud storage
0.0017401158813511986
online communication
0.0017335817876178643
version
0.001725600236990768
end
0.0017227302119802715
mkdir
0.001722712164594172
use
0.0017169270256938611
reason
0.0017028050902209765
CMake
Examples
0.0016590199163883691
-flto -O3
0.00165488030220991
multiplatform CMake build system
0.0016459022051788326
Various configuration options
0.0016257773910429356
6_rotation.cpp
0.0016254825369534185
x86_64
xcodebuild -project build/SEAL.xcodeproj -sdk iphonesimulator -arch x86_64 -configuration Release
0.0016248013275133159
./emsdk_env.sh
0.0016121624503080182
reference
0.0016103369258988471
6_Rotation.cs Performing cyclic rotations
0.001564663142604129
Cryptography and Privacy Research Group
0.0015524982620415055
standalone CMake projects
0.001549925066253339
Firefox
0.001536163194384984
Chrome
0.0015285995398930871
-DCMAKE_SYSTEM_NAME
0.0015223389212987632
Safari
0.0014668034381795816
Kyoohyung Han
0.0014344744070880966
Edge
0.0014332429327587187
Amir Jalali
0.0014300905503661374
Sadegh Riazi
0.0014273944582437873
Rachel Player
0.001422183950428349
Olli Saarikivi
0.0014210570790816122
Ilia Iliashenko
0.0014100628552813311
Yongsoo Song
0.0014070444059162152
Peter Rindal
0.0013917781763459506
Gizem S. Cetin
0.0013886955403244676
Hao Chen
0.0013798831841374069
./emsdk
0.0013777053587865139
Roshan Dathathri
0.0013758323968446613
emsdk_env.bat
0.0013567302807589985
Web means
0.0013339865816545098
NodeJS
0.0013297809579945617
John Wernsing
0.001329306272053347
-DSEAL_BUILD_STATIC_SEAL_C
0.00132072183490193
4_BGV_Basics.cs Encrypted
0.0013179617464496192
Contents
0.0013145862826914707
programmers
0.001314354885219714
scales
0.0013098733826042487
Serialization::compr_mode_default
0.0013051058190522765
seal_wasm.js
0.0012978629837713395
iOS "-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64
0.0012933533870885796
IntroductionCore
0.0012917043190719397
Pardis Emami-Naeini
0.0012858647056287306
BatchEncoder
0.0012759838309949834
native/src/seal
0.0012706504762223345
seal_wasm.wasm
0.0012696573021687106
major browsers
0.0012593307127941851
requirement
0.0012580978511925536
CKKSEncoder
0.0012571386576243726
Encoding
0.0012501969770242769
boldface
0.0012452334282055484
vector
0.0012448608260397097
3_Levels.cs
0.0012440198526291607
-DSEAL_BUILD_EXAMPLES
0.001240381798078483
sorting
0.001233212630159616
Values column
0.0012325607836862428
Github.com/Microsoft/APSI
0.0012289555332435735
5_CKKS_Basics.cs Encrypted real number arithmetic
0.0012258566295894
rescaling operation
0.0012258307672024927
emcc
0.001221089662064689
challenges
0.001219643985079566
issues
0.0012191757139981157
Benchmarks
0.0012188405303822395
Sangeeta Chowdhary
0.0012167001406143175
MinSizeRel
0.0012132488975612255
option
0.0012108449628342693
view type
0.0012084097945810582
7_Serialization.cs Serializing objects
0.001208112577364309
difference
0.0012080097354064266
Github.com/Microsoft/SEAL-Embedded
0.0012076368098697106
community contribution
0.001205716736013419
special gratitude
0.001204527747455723
ComponentsWindows
0.0012028425237530804
kernels
0.0012027235519766113
target
0.0012013062375380336
SEAL::seal
0.0012005739115677912
Asymmetric PSI
0.001200443846924902
compr_mode_type::none
0.0011996588709710775
command line printout
0.0011966067822258195
timely manner
0.0011962544939671728
uncompressed form
0.001195447226833288
yields
0.001195162044031272
easier navigation
0.001194852462152773
-DSEAL_USE_ZLIB
0.0011944724177171272
emscripten
0.001193177409820362
Python
0.0011918693358137491
work
0.0011905932529487702
emmake
0.001190370362302461
regular expressions
0.0011883374906495243
client/server environment
0.001186129344204775
insights
0.0011822325082792191
libseal.a
0.0011819468736995753
Deepika Natarajan
0.001181726232507092
order
0.0011814770125790162
shared libs
0.0011804549465409993
random bytes
0.001176971254386551
std::vector
0.0011754354630757365
Guidelines Support Library
0.001174802228203882
Other operations
0.0011713508464733327
definitions
0.0011712448508226863
--bind
0.001169546323461829
opportunities
0.0011662343252295958
build\native\src\
0.0011655601339431347
native\src\
0.0011644024231763552
limitations
0.0011640074705736693
Administrator permissions
0.0011637004674438698
acceleration
0.0011626652839506688
zeros
0.0011624545650789886
libsealc.a
lipo
0.0011618831128324533
strict privacy requirements
0.001161478696724577
distances
0.0011610012407947232
exception
0.0011597204850350032
size
0.0011570013809417213
necessary conceptual background
0.0011569715252658843
Java
0.0011556252002535915
critical functions
0.0011541584402417154
safe (bounds-checked) array access
0.0011537264090130327
News
0.001153687364719222
approach
0.0011534403941610206
subset
0.0011525510245613399
-GXcode -DSEAL_BUILD_SEAL_C
0.0011511079135864606
MinGW Makefiles
0.0011503529101193212
Benchmark


Building .NET
0.0011477269735728126
find_package(SEAL 4.0 REQUIRED
0.0011453568012360499
several orders
0.001144180892580337
FreeBSD
0.0011436824308733128
depth
0.0011427679806066573
Intel HEXL

Intel HEXL
0.0011413936324516278
FIPS standard
0.0011413110627293025
memory
0.0011405218973798812
new features
0.001140361887337887
individual pieces
0.0011385315136486392
exact values
0.0011350543990717758
Intel AVX512-IFMA52 instruction set
0.0011349995787106682
iphoneos
0.0011336151516059025
result
0.0011334050172123848
DCE
0.0011330809704708667
same shell
0.0011295895844535258
pkg install seal
0.0011288356822204103
MSVC
0.0011287504164475132
production software
0.0011284083396727164
Combine libseal-*.a
0.001128003948660633
reader
0.0011258114046016694
multiple different private data owners
0.0011252387110480498
magnitude
0.0011230485510644673
date
0.0011229926945221262
functionalities
0.0011212968569541152
unauthorized employees
0.0011183664628564923
plaintext zero yield
0.0011175466779292844
half
0.0011174434384630333
-output
0.0011169867402549215
NuGet.org
0.00111532855893587
branches
0.0011149897871479653
continuous Gaussian
0.001113474210868331
bm_parms_vec variable
0.0011123142827250843
Users
0.0011118783800484128
-DCMAKE_INSTALL_PREFIX=~/mylibs
0.0011107934585747876
Generate
0.0011077481840436826
input
0.001107159183473173
dependency
0.0011067978482521578
serialization.h
0.0011062377967670368
important bug fixes
0.0011040545961226275
technique
0.001103639396523511
general-purpose compression
0.0011032222612424349
comments
0.001103085814650268
cmov
0.0011010560339393932
concern
0.001099896213917088
bit word
0.0010997908000156108
complex issue
0.0010997667254231082
GDPR
0.001098484377390197
place
0.00109828918709198
Homomorphic Encryption

Homomorphic encryption
0.0010964746079399905
effect
0.001096067361914749
untrusted parties
0.0010924984727548926
x86
0.0010918541818392457
primes
0.0010911246920871536
theory
0.0010905544887923006
vcpkg CMake toolchain file
0.0010894226190117586
WASM
0.0010893233832241665
Control-Flow Guard
0.001088169786042555
embind syntax
0.0010878842387551982
wasted space
0.0010860896934582873
weaker security guarantees
0.0010819835410769813
coeff_modulus encryption parameter
0.001080870601489272
security/seal
0.0010796503256921084
error distribution
0.0010793629493361188
/guard:cf
0.0010783112933422782
Win32
0.0010735994031303149
documentation
0.0010726974090307707
/Qspectre
0.001068560569920391
SEAL_BUILD_EXAMPLES=ON
0.0010677126755959882
latest version branch/tag
0.0010674932477779408
immediate plans
0.001064975195212247
cd native/<examples|tests|bench
0.0010645607864038648
-DSEAL_BUILD_BENCH
0.0010633248218813612
wrappers
0.0010626058120186443
Omit setting
0.001061351498294091
arm64/x86_64 iOS architectures
0.0010583367264459923
best choice
0.0010580230856198985
SEALNet.dll
0.0010575766910208687
reasonable solution
0.001057438461876023
SECURITY.md
0.001055824492729083
meaningful use-cases
0.001055218182624287
larger standard deviation
0.0010538479198819817
cmake/memset_s.iOS.cmake

# Build libseal*.a
0.0010537914578228043
desired configuration
0.0010464105685292983
main, master, and contrib branches
0.0010463832878449871
beginners
0.0010457696376623682
steep learning curve
0.001043407052813632
ZLIB 1.2.11 Compressed serialization
Zstandard 1.4.5 Compressed serialization
0.0010423029122970363
Clang++
0.0010403723629121772
small (e.g., 30 bits
0.0010388427980806004
specific privacy-critical cloud computation parts
0.0010358616412138814
byte aligned memory allocations
0.001034826274581516
certain optional features
0.0010343286216401592
Alibaba Gemini Lab
0.001031177229870533
cp build/lib/Release/libseal*.a
0.0010304651432447181
artifacts
0.001030125364626489
build/lib/x86_64/libseal-*.a arm64/libseal-*.a
lipo
0.001029026972189683
traditional symmetric-
0.001028916976808846
trade-offs
0.0010283899824359319
global install
0.0010282631829967091
massive efforts
0.0010272069145614363
other extreme
0.001022787288214957
continous testing and reporting issues
0.0010227867595948865
experimental purposes
0.0010224779116059122
entire large databases
0.001021735926214592
programs
0.001020291959604758
paper
0.001017725168598545
elevated (root or administrator) privileges
0.0010176013813606882
Michael Rosenberg
0.001011822862746909
build\lib\
0.0010109648663237862
Optional dependency Tested version Use
Intel HEXL 1.2.3 Acceleration
0.0010013686629562753
NUGET.md
0.0010006369495587425
multiple ways
0.0009989372394431368
Git history
0.000997173928589108
GNU G++
0.000996338563357047
sense
0.0009960447081914462
custom paramter sets
0.0009958529111209736
menu option File / Open / Folder
0.0009939970622330572
document
0.0009905374781120579
# Build .NET wrapper library
dotnet test
0.0009836293886311288
Redmond
0.0009792294294627356
past decade
0.0009575980261982566
care
0.0009510067868415006
WASM=1
0.0009507432732189144
build/lib/libsealc.a build/lib/x86_64/libsealc-*.a build/lib/arm64/libsealc-*.a
0.0009451487979096735
Windows
Linux Clang++
0.0009284732636245966
SDK
0.0009281318928115368
academic papers
0.0009141294388960414
MIT
0.0009102578747437167
Many people
0.0009029862425584947
CONTRIBUTING.md
0.0008880815807847646
macOS/iOS Xcode toolchain
0.0008763217169701303
jun
0.0007635849830501335
dec,
        year = 2018,
        note
0.0007477350247899811
