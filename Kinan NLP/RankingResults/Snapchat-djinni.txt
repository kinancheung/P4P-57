Djinni
0.03375375968668981
C++
0.02847016230152646
Djinni code generator
0.02267799578328377
copy free data
0.020151325329190846
Java
0.016298967640729564
buffer
0.01405119381209639
file
0.013016273323471933
language boundaries
0.012663106494586497
DataView
0.012537239457764193
Protobuf types
0.012473084680001223
Bazel
0.012167733665501643
bazel binary
0.012131612225486454
interfaces
0.012013349023226759
scoped object
0.011595870151857656
ObjC
0.011425659230446285
command line
0.00965467160013821
template class
0.009355270154343199
Objective-C and Java tests
0.0092995170461166
Multiple @flag lines
0.009276768139875748
project
0.009214663422963537
bazel: bazel build
0.008552604137284486
DataRef
0.008500603028895975
DJINNI_FUNCTION_PROLOGUE
Option
0.008119456083122851
call
0.00806544703730373
djinni_support.hpp files
0.007601800905777032
ownership
Generating string names
0.0074145574802265395
exception translation
0.007293612582660321
Optimize primitive array
0.007153915086912622
plain Javascript
0.006970950785817871
test suite
0.006949236308194355
mobile example apps
0.006799891503514864
records
0.006776682061542395
Android example app
0.00673119828424742
Dropbox
0.006395947074632786
ownership
0.006332557383294039
+
0.00627465295565669
C++ enums
0.006207881901835877
string
0.00617476892414077
generated Djinni calls
0.006160871274587677
MyInterface = interface
0.0061392451128199675
default
0.006071014333567531
objects
0.00603666944870808
new switches
0.006034821993408524
//src
0.006034744555458965
bytes
0.005885140452623472
outcome<> type
0.005866204433549187
path
0.005547311889310205
copy
0.005462523047443246
ByteBuffer
0.005088208286596776
protocols
0.004924736436049921
djinni
0.004884223228634747
JS
0.004809858050017184
global references
0.004805669088521732
order
0.004759749773529778
compiler
0.00472589790317881
limit
0.00469530597086138
Experimantal WASM support
0.004665812688367447
void
0.004657484300341092
ERROR
0.004610112468281831
@protocol
0.0045858590581815606
Bazel

Intellij
0.0045163114329227925
new features
0.004507289574845199
*
0.004501468474739482
bridge function
0.004490930663988014
_
0.004465039608245115
objc helper methods
0.004436094478129634
WASM
bridge class header files
0.00442972605604081
support
library inlcude lines
0.004424486625165642
NSData
0.0044112044909494314
java
0.004404851534960781
static constructors
0.004397995681698742
Q.
0.004339715928756589
future
0.0042716195444103275
element type
0.004242408179309988
Bazelisk
0.004232090677099139
list
0.004222672412866223
@flag directive
0.004213506025423329
builtin binary type
0.0040960052787859125
method name
0.004090787449970347
DJINNI_DISABLE_DESCRIPTION_METHODS preprocessor symbol
0.004050154053100009
macro
0.0040079470653355724
--wasm-include-prefix
0.003983375063435133
targets
0.003971094229974957
yaml manifest file
0.003948165040849892
Xcode
0.0039363677921249885
cc
0.003852445774303119
result" type
0.0038171748113021435
run
0.0036209708980844534
String
0.003530405573877641
--jni-function-prologue-file "path
0.003466511171384697
c
0.003454464197826997
o.
0.0033047337193002992
djinni-objc-tests //test-suite
0.0032479295664166875
DateRef
0.003044888819471135
i32
0.002992927698854896
primitives
0.002988596957997438
JNI
0.002978430131568778
com.snapchat.djinni
0.0029537187881933918
adb install
0.0029465378437373833
eq
0.0029301849205305252
workspace
0.0029265112810186148
deriving(ord
0.0029159610652811406
RESULT
0.002903845465340255
runtime
0.002891186615015688
magnitude
0.0028909529025017413
java.nio
0.0028827347329528283
Android
0.0028821064092763972
compile time
0.0028721052603942684
overhead
0.002867614669622704
Person
0.00284150738764978
Scala plugin
0.0028046160838045677
Configure
0.002777505659442217
Yay! proto
0.0027716707209741666
Bug fixes
0.0027359348179659695
person
0.002735828187861914
GlobalRef
0.0027336088778020023
Outcome
0.002730424471383846
better stability
0.0027288664436000663
djinni.test
0.0027244947140221943
array<> type support
outcome<> type support
Protobuf type support
Local flags
0.0027224393807936914
maps
0.002720645170331357
Made JniClassInitializer constructor
0.0027205605573313385
iOS
0.00271329556555246
complete(res
0.002712622883829424
viewport
0.002711146663851546
device
0.0027083973461767023
constexpr
0.0027065651391697545
number
0.002698146468550876
bazel-bin/examples/android
0.0026936975487163958
Eliminate CppProxy finalizers
0.002693314192066458
std::vector<uint8_t
0.0026914428784511227
special optimization
0.0026769720658955448
AddressBook
0.0026763692329163273
case
0.0026702614032033225
sbt
0.0026572362558848713
mind
0.0026561217091566345
Bazel
Added move assigment operator
0.0026520725411695017
fast
array indexing operation
0.002631492782675197
Test
objc:
    header
0.0026175214136406715
generation
0.0026123326461856464
box elements
0.0026088250980384232
overloading standard comparison methods
0.002607688944054687
R-value reference
0.0025999696868343157
optional support
0.0025998710785331627
duration
0.0025988280164790244
tests
0.002597403631590102
FooCb
0.0025936851345002396
coroutines
0.0025927566270456943
std::string
0.0025833506341997846
memory safety
0.0025812857242122015
testing
0.002574979971267104
dynamic value
0.0025661319477956776
@interface
0.0025633890205131833
feature
0.002562422811798051
Java/ObjC support
0.002559696356526103
Experimental async interface support
0.002552930985325952
IDEA bazel settings
0.0025477994268562846
beginning
0.0025457093565720928
extension methods
0.002540824441133028
web browsers
0.0025384464105273987
Wasm/TypeScript unit tests
0.0025336450123115877
Notable differences
0.0025252324568006655
open source
0.002521119480797787
TypeScript
0.00251793379978846
enum
value
0.002516830079534799
wasm bridge code output folder
0.002509455688356617
Web Assembly
0.0025075396651777567
browserify
tool
0.002505024243814474
Github
0.002501291636796345
--wasm-out
0.0024835466390120257
arbitrary additional initialization
0.0024814331916017548
many times
0.0024551682346150585
generate.sh
0.0024353430340479923
examples sources
0.00243039623402561
T
0.002429943035231992
outcome
0.002426277321449317
error
conditions
0.0024253646011174594
functions
0.0024194871809594246
maintenance
0.0023996463305824937
addition
0.002399308258391492
Workspace directory
0.002391156102694211
ArrayList
0.0023859891928780775
A. No
0.002385415011642381
superior approach
0.0023838094994064417
optional TypeScript interface definitions
0.002379055684359789
cpp
0.0023735429800644924
simple
0.00236446392531309
server
0.002363762540074505
owner
0.002360035875826269
Snapchat
0.0023585657866007632
responsibility
0.002356839811994838
WASM bindary
TypeScript code
0.0023541375546152986
standard way
0.00234839257171143
date
0.0023464269352967662
other programming languages
0.002341748773722146
common flags
0.0023303199832050044
invalid
memory location
0.002321599456537555
IDE
0.002304258293098798
specified
header file
0.00229853735905271
await syntax
0.0022936896902477737
CLion
0.0022893598148397754
Objective-C.

Local flags
0.00225681385986483
co_await
0.0022500383825820175
--objc-disable-class-ctor
0.002247500099091047
new yaml type future
0.002237151071458298
such strings
0.002228536329592677
original exception stack
0.0022176586048606936
A. No! iOS and Java strings
0.0022022653127461446
@protobuf "my_proto.yaml"
...
MyRecordWithProto = record
0.0021978807387245465
internal fork
0.0021916386390158572
WORKSPACE/bzl/ide/djinni.bazelproject
0.0021870782718141483
typescript module(file
0.0021692361730660387
namespace/class/prefix
List the Protobuf messages
0.0021674520852450444
bar
0.0021362641160067104
code
generator and unit tests
0.002118273216518565
namespace
0.0021006521237295498
proto/objc/test.pbobjc.h
0.002092319624800679
parts
0.0020526278914436086
run_djinni.sh script
0.0020395436042519293
messages
0.0020063883059026045
original dropbox readme
0.002002156389990167
header
0.00199368550741755
user projects
0.0019569430446462243
