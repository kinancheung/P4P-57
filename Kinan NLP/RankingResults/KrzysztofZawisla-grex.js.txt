const buildRegex
0.04556378282155771
GrexJS
0.04385747652651834
BuildRegex
0.04173153254931239
import
0.03544061796823207
string = buildRegex(["a
0.03461145969759265
wasm module
0.0330970742284433
const grexJS
0.028967588928179567
ConversionOfEnum
0.025377353957888364
library
0.023048373127272207
browser

Import

import { load
0.021827214905349952
@link https://github.com/pemistahl/grex#52--the-library-top-
0.020455465678206743
Config
0.020390396458450474
config
0.018406179460081967
browser
0.017851831044476574
GrexJS = require("grex.js
0.016784571703936227
TypeScript support
0.0146216681367671
BuildRegex = await load
0.014028549795176145
async
0.01370549635258582
BuildRegex
 */
export type
0.013437652495074642
testCaces
0.013152430786498321
void
0.012850446899509529
@param
0.012079668649445109
commonjs
0.01179007422952507
regular expresion
0.011776661378278677
Function instantiation
0.011684206810872672
Array
0.01148374461833486
input array
0.011167162979682349
Regex
0.011134970012948386
Grex.js
0.011055385508981257
export type
0.010699147519695381
capturingGroup
0.010585051610541374
@type
0.010389548833330228
Windows
0.010357064398059494
node

Import system
0.010315460307939013
top level await
0.010299337970082145
param
0.01028382512632364
buildRegex` function
0.010108461022124642
number
0.010076794781135278
@example
 * const regex
0.010033709214982766
conversionOf
0.010030912627950615
import("grex.js
0.0100050397359269
Installation

Via npm
0.00961025887858986
regex
0.009587421418045859
Linux
0.009368155215610643
aaa
0.009094829769083403
MacOS
0.008497103259512561
Promise<BuildRegex
0.008384579285039878
CaseInsensitivity
0.008096897018020181
@returns
0.008024330281396132
caseInsensitivity
0.008012473073514942
version
0.007998385278009855
repetition
0.007992709526191648
same logic
0.007795883549279859
Digit
0.007778854877598206
CapturingGroup
0.007619695425299482
Repetition
0.007569976595119108
https://github.com/pemistahl/grex
0.007435605762932691
@example
0.00727657019866291
argument
0.007114241123763947
bindings Rust
0.0070842481169751375
Node.js
0.006660210026577986
Word = "word
0.006645088155708611
NoWord
0.0065981897224742635
grex.js
0.006590932437682547
noSpace
0.006344264639123935
UMD or ES modules
0.006339189629511471
available options
0.006325956312545348
Type
0.0063074708348165535
JavaScript
0.006253711321819483
Usage
0.006242598009219998
yarn
0.006186080362140111
Via pnpm
0.006182538716009959
minimumRepetitions
0.006010484604036682
grex.js/lib/wasm/browser/index.(amd|commonjs|system).js
0.005992219240404792
minimumSubstringLength
0.005881871372174198
console.log(regex
0.005795139042813771
Loads
0.005526297659817318
noDigit
0.0052160340545641445
Load
0.005010868430374056
escapedNonASCIIChars
0.0049852459182687615
