Upload sample contract
0.027429347275657986
account
0.018210027150868505
CPS.IO source code repository
0.015410355037679327
CPS
0.014145873545930351
cd
0.01386552965313028
wallet
0.01354370209350954
command
0.011730335155911237
message
0.011445694806598357
dependencies
0.010949303926773386
private key
0.010480703042580902
cpsd binary
0.010101720475173945
smart contracts
0.010087098275672881
node
0.009593722896877223
necessary permission
0.009301446454255936
initial block producers
0.009243706193214518
inita account
0.00922214526333704
Ubuntu
0.009149192706015998
MacOS Sierra
0.00909694349508002
git clone https://github.com/cpsio/cps
0.008563435679329578
git submodule update
0.007948202549139517
code
0.007829195062586742
build
0.007824635993415532
built WASM compiler
0.0077573420912918824
zkp
0.007517298313264363
automated build script
0.007455668184744881
instance
0.00697361791434617
blocks
0.006943923551870472
messages
0.006870893153718001
cps
0.006869168523514723
secp256k1
0.006816684794709928
default configuration
0.006730866887437065
account key
Creating accounts
0.006715704538890987
build/programs
0.006572343034845898
data
0.0065333752763148106
testnet_np
0.006413589115066107
@2017
0.006365313442506343
transaction
0.006241551287236736
_
0.006044883070040398
= initb
producer-name = initc
0.006040856712539018
time
0.005941606693298521
API commands
0.005898801044861884
following

{
  "account_name
0.005885112031582771
json response
0.005876267183389251
response
0.005783537017178448
Creating accounts
0.005711024580842253
~/wasm-compiler
cd ~/wasm-compiler
git clone
0.005604731880648901
blockchain information
0.005454411876134513
.bash_profile
0.005308781021194446
date
0.005294199086584048
launcher



Creating
0.0052281367167402795
testnet producers
0.005134766052797338
=
0.005103216179831498
nodes network composing
0.005090295511272092
config.ini
0.005049543111470994
account creation
0.005046330658796476
data-dir
0.004986768690972882
block producer plugin
0.004986518991604032
testing purposes
0.004956231580259896
Cryptonomex branch
0.004941647070177659
values
0.004846978533489822
future reference
0.004808305554806784
http requests
0.004804664992617546
install
0.004777417211246108
CMake
0.004655603773589957
process
0.004629411438480682
binaryen
0.004608553418677212
latest version
0.004590094385544507
apt-get update
wget
0.004532319262287841
submodules
0.004498811256933802
sudo
0.004473012892462897
following instructions
0.004401279800859767
public/private key pairs
0.004382341305852437
account",
     "balance
0.004349948887546207
repo
0.004338214140617108
Blockchain
0.004330963794101039
Building CPS
0.004265731278417039
initc
0.004261926869643964
Docker
Manual installation
0.004234574369687475
project
0.004203387024232736
Dependencies
0.004175227835246929
cpsc/
0.004161767239806594
https://raw.githubusercontent.com/Homebrew/install/master/install
0.0041598296265453714
synchronization
0.004141650000542629
cmake
0.004074078383928434
09T07:56:32 producer
0.004046723403313579
WASM_LLVM_CONFIG environment variable
0.004043084014216694
key # owner_key
./cpsc
0.004042466422653088
clangs default choice
0.0040054639584205295
respective tests
0.004001848179171693
XCode
0.003993160649177383
-j4
0.003986975554865959
Unix Makefiles
0.0039468780751047775
testnet genesis state
0.003883506924972827
transaction_id field
0.0038382309394659544
xcode-select --install
ruby -e "$(curl
0.0038344980666744893
stale chain
0.0038084077271443306
programs/cpsd/cpsd --skip-transaction-signatures --data-dir tn_data_0
spawning child
0.0037825456559607497
rapid development
0.003780206012856657
output
0.003705930608498894
architecture [ubuntu|darwin]
optional mode
0.0036860684070144398
trx
0.003683624606734198
second optional input
0.003667267400605239
blockchain infrastructure
0.003655955640975356
export BINARYEN_ROOT=~/binaryen
0.0036168689678683064
https://github.com/WebAssembly/binaryen.git
cd ~/binaryen
git checkout tags/1.37.14
cmake
0.0035957414625114132
build/development environmentAutomated build scriptClean install
0.003569042650242305
WebAssembly -DCMAKE_BUILD_TYPE=Release
0.0035666723449200217
private multi-node test network
0.003448960605381873
CPS.IO
0.0034253950976830742
thread-0
0.003413688611404454
--single-branch --branch release_40
0.00336497880171759
single-node testnet


Example Currency Contract WalkthroughExample Contracts
0.0032632623744322754
PUBLIC_KEY_1
0.003109075354656388
next step
0.0031028327459747575
tn_data_0
0.0030971308834944113
currency",
  "cps_balance
0.003090896960864915
https://apt.llvm.org/llvm-snapshot.gpg.key|sudo
0.0030510625944328526
PUBLIC_KEY_2
0.0030483456752978216
apt-key add -
sudo apt-get install
0.003032096472693455
directory
0.002993814671716485
interfaces
0.0029587351970840835
port
0.002954478208760564
127.0.0.1:8888
0.002930433274441318
ID
0.0029003882519360834
Edit
0.002885689787708037
active_key
0.0028516997433077167
tn_data_1
0.0028468862510996327
Docker
0.0028085104483824984
pairs
0.002785618678029058
Synching
0.0027626407934223953
/path
0.0027546388220918605
number
0.002753340368142626
defaults
0.002743161919177235
external dependency
0.0027292268930169256
other internals
0.0027286240050546943
curl
0.0027282897472341986
owner_key
0.002719420572555645
walkthrough
0.002704341001581926
C++14
0.0027040754787258678
least 8 minutes
0.002699108966116498
programs
0.0026811597141253272
argument
0.002669380744803019
place
0.002664957298084342
purpose
0.0026611079373463488
authority
0.0026553985389331076
part
0.002651356166955586
Cryptonomex branch)
binaryen



Clean install
0.0026481341532439127
Outputs
0.00264175326228073
Debug
0.002633399094710978
password
0.002613557392562743
dependenciesClean
0.002608364258080026
default data storage path
0.0025957377948107705
child
0.002588808605518704
block.one
0.0025712920884552225
CPSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Important
0.0025621564327093418
--scope
0.002561774070900055
steps
0.0025527473472007674
flag
0.0025461905585207035
Add WASM_LLVM_CONFIG
0.002520686148263141
fact
0.0025164912253308343
LLVM_DIR
0.002512969599141889
exectime_ms=0
0.0025062112284368033
cpsio::producer_plugin
# Wallet
0.002506012406045236
libtool
0.0025040684756026544
network conditions
0.002500313852802251
users
0.002484824283954743
content
0.0024766908866459096
flags
0.002461324784062826
llvm@4 gmp ninja gettext
brew link gettext
0.0024575072494958496
genesis.json
0.002455581569830111
detailed API documentation
0.0024460351722213605
Brew
0.0024245435252999836
easiest way
0.0024228607249982487
recursion
0.002411286981531322
from":"currency","to":"inita","quantity":50
0.002406894369181436
software
0.0024000900842838244
ruby
0.0023873188875405908
https://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.bz2/download
0.002382322167408973
case
0.0023821848866396505
Ctrl-C. Note
0.0023794836304968114
simple test network
0.0023792769204671674
Messages
0.0023767616092717023
balances
0.002352393306581384
Release
0.002344154540502091
./
0.002308038842334127
funds
0.002304265542799024
tail
0.0023040585709473375
cp
0.0022894794395956312
04T04:26:18
0.0022886709307981513
deployment
0.0022870518425032256
last req
0.002276129907032314
boost_1.64.0.tar.bz2
0.0022694840923862024
recursive clone
0.002258712063358216
future release scope
0.0022521120857998873
inputs
0.0022446772936607767
confirmation
0.002242131994644188
public testnet
Doxygen documentation
Running CPS
0.002231644135006876
from":"currency","to":"inita","quantity":50} --scope currency
0.002230068751246257
developers
0.0022226033534320207
generalization
0.0022106000704434155
test suite
0.0021959384291465357
c++
0.002188730794353504
Powerful Infrastructure
0.0021682442961924358
alpha-quality
0.002158871656504229
less tokens
0.0021575181684466904
develop applications
0.002137604918316979
Decentralized Applications
0.002113940794312298
cps/source/genesis.json
 # Enable production
0.0021134429086374267
initial supply
0.0021083897600016627
release_40
0.0021057927079723114
proper initial balance
0.0020941013910658187
error
0.002093142909529497
cmake -DBINARYEN_BIN=~/binaryen/bin -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DOPENSSL_LIBRARIES=/usr/local/opt/openssl/lib
0.0020661615339082257
info
0.0020587032142729087
code currency
code hash
0.00204421257384671
peer
0.0020432512026689626
cpsd/
0.0020288453208950384
producer-name = initq
producer-name = initr
producer-name =
0.0020229770892280733
wallet import XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX



Upload sample "currency" contract
0.0020128562510297503
high-performance
0.0020125910658135085
unstaking_balance
0.0020101185604096076
mkdir
0.0020073370961786203
cpsd - server-side blockchain node component
cpsc - command line interface
0.0020056293676739253
currency/currency.wast
0.001999068903303261
&
0.0019934080513644365
last_unstaking_time
0.001974577898234596
false
}



Transfering funds
0.001970808549764093
export WASM_LLVM_CONFIG=~/wasm-compiler/llvm/bin/llvm-config
0.0019594208011335613
blockchain
cps-walletd - CPS wallet
launcher - application
0.001954751951249692
Resources

CPS.IO Website
Documentation
Blog
Community Telegram Group
Developer Telegram Group
White Paper
Roadmap

Table
0.0019465100221226338
lldb-4.0 libclang-4.0-dev cmake
0.0019371066224832224
enable-stale-production
0.0019273974953326369
WASM build target
0.0019105458010481792
plenty early experimenters
0.0019087409807995463
pending
...



Example "Currency" Contract Walkthrough

CPS
0.0018824778847772248
contents
0.001837569833972562
libbz2-dev libicu-dev
0.0018227502074366073
producer-name = inith
producer-name = initi
producer-name = initj
producer-name = initk
producer-name = initl
producer-name = initm
producer-name =
0.0018196213791086232
producer-name = inito
producer-name
0.0017933292321000265
echo "export LLVM_DIR=/usr/local/Cellar/llvm/4.0.1/lib/cmake/llvm
0.0015327856712307238
