CMake
0.028815769245087275
binary file test.wasm
0.020096189983474382
wasm-interp
0.019694382028689957
WebAssembly binary format
0.01799300384473361
cmake
0.01791509178640549
tools
0.016987550576846443
Address Sanitizer
0.015599420984700015
spec interpreter
0.014734932238839031
Visual Studio
0.014446631191404985
wabt project root
0.01432493068698561
new directory
0.014269224997091049
wasm2wat
0.013429225326116815
build type
0.013405390160226351
tests
0.013044563634934638
multiple wasm files
0.01301183869931355
# meaning
0.012826177823210124
wat2wasm
0.012507991614027818
test.wasm
0.012357618927782449
other configurations
0.012287347617485884
clang-debug
0.011755264683267165
example
0.011317263382416438
WebAssembly Binary Toolkit
0.01111164194729168
WebAssembly text format
0.010506751099650925
clang/Debug/
0.010308972712071485
changes
0.010042472413531546
gcc
0.009774627851734658
exported functions
0.009484699120917409
other
systems
0.009368154954693045
macOS
0.009247748684939217
DEBUG
0.009170575653083506
gcc-i686
0.009167874616180672
Clang
compiler
0.008986668340214958
uninitialized memory
0.008931915791129109
C source
0.008726330733487195
additional help
0.008592076954824291
dir]
> cmake
0.008575679293656283
CC=gcc scripts
0.008245888379842966
debug
0.008238587980011909
cd
0.008175808336905217
print information
0.008144535343755078
build
artifacts
0.007972640047524996
LLVM sanitizers
0.007914931170686715
config] parameter
0.007826171598285725
default
0.00757996046051462
suite
0.0075587049267867926
verbose output
0.007432061211288783
re2c
0.007332050195252619
sanitizer name
0.006988712320982785
following demos
0.006907086995935894
compilers
0.006407020702704354
exports
0.006332015530294055
online demo
0.006139330887527197
test/README.md
0.006070140809420237
spec-test.json
0.005978747917152425
instructions
0.005926308176480971
Building
0.0059204494867636705
configuration
0.005853631252051059
spec-test.0.wasm
0.005842688249023205
WABT
0.00580053342659118
Modules
0.005734009301765032
toolchains
0.005733550114030639
Linux
0.005648665255374625
Travis bots
0.005619621995313011
Online Demos
0.005615828317574655
uses
0.005564674725294102
header
0.005509516661435397
compliance
0.005508334707776168
Wabt
0.005411242791427652
development
0.005355413592801063
inverse
0.005295301471248042
RELEASE
0.0052649058073859075
spec-test.1.wasm
0.005193990473437167
round-trips
0.005193746243791326
use
0.005168700304611288
gcc-fuzz
build types
0.005168224498749671
combination
0.0051676089726365206
gtest repos
0.005133940597287726
full fidelity
0.005119452654604617
Binaryen
0.005115020814857129
available
generators
0.005105911847508482
simple linker
0.005051140898262511
list
0.0050424672304708144
empty, asan, msan, lsan, ubsan, no-re2c,
no-tests
0.0050192841164972
testsuite
0.005019210286685584
\bin
0.005007659394186684
src/wast-lexer.cc
0.004988858393272177
wasm2c
0.004939619664405994
wast2json
0.004909660958231548
JavaScript
0.00485712073100067
link
0.0048227371998637745
s-expressions
0.004803899652866431
travis-test.sh
0.0048038691532819615
optimization platform
0.004789429622573231
lld
0.00476803894037587
undefined behavior
0.004750125284401692
behaviors
0.004747816007137372
command prompt
0.004723620965403334
higher-level compiler
target
0.00472224385134724
easier integration
0.004690688587123386
commandline
0.004662857415054717
stdout
0.004658140982481628
Undefined Behavior Sanitizer
0.004649986142989994
targets
0.004649736608953146
Similiar
0.004642657919658801
lexer
0.004617439418605665
result
0.0045858393211039685
functionality
0.004585766333571918
ASAN
0.004568849782092432
value
0.004554068993834936
make
0.004523787149053355
prebuilt C sources
0.004521885841289914
update
0.004490221716330621
surprise
0.004481919298277262
flat syntax
0.004481607545665468
invalid memory accesses
0.004473341238378007
PR
0.004441629142757078
byte
0.004396586259368735
dashes
0.004376219210401187
--target install
0.0043706564571193455
elements
0.004359322160656217
src/prebuilt/.

CMake
0.004331042254436333
MinGW
0.0042729322692306535
MSAN
0.0042631539540361136
LSAN
0.004251045761251022
bounds
0.004223549821797647
UBSAN
0.00418699868663913
Windows
0.004172755891073795
C/C++
0.004170551399294402
.wat
0.0041536078789004395
stack-based interpreter
wat-desugar
0.004143177007633603
parse .wat text form
0.00409222185289386
canonical" flat format
wasm-link
0.0040693448616947675
# parse and typecheck test.wat
$ out/wat2wasm test.wat

# parse
0.004046914015303828
Clone
0.003964703089610621
target
0.003940714949223944
submodules
0.003870759229752157
release
0.0037687015893340513
change
0.0032915435173235088
easy way
0.003204605940400374
