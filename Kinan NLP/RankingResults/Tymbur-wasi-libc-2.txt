WASI system calls
0.061955626004184736
sysroot
0.05798779595713047
compiler
0.04002842572263941
standard I/O
0.029298553631236072
support
0.02714986149202669
\
0.02703756535473302
top
0.025621317582847778
libc++.a
0.023694375128087246
POSIX-compatible C APIs
0.022323363779068364
clang
0.021404758166077658
cross-compiled builds
0.0195508148085497
time
0.019082609572749088
string
0.01896219836750951
filesystem manipulation
0.018711678442272263
setenv
0.018689060966481732
memory management
0.0181135198254624
wasm32.a
0.017514957857898326
environment variables
0.017504670816662626
getenv
0.017442135410857963
libclang_rt.builtins
0.01720991805865211
mkstemp
0.016786572373815273
WASM_AR=/path
0.016683242615871646
system-based commands
0.016676461428657294
fork
0.016371130813957583
program startup
0.01632616668854299
wasm
0.016187200171355304
Shell
0.016166435586114365
file
0.016091565709849237
libcxxabi
0.015988824557510356
sdk
0.015336714296625432
build
0.015247157184801357
wasi
0.015002108004392117
llvm-ar
0.014998056593127699
libcxx
0.014955997989640516
WebAssembly programs
0.01486512448110852
many other APIs
0.01460751651572748
libc
0.014030367555841299
default
0.013827043885339334
wide array
0.013395297877144456
directory
0.013353780049321496
better
align
0.013343456185729725
c
0.013250834053119298
iOS underlying system
0.012880943147339976
WASM_CC=/path
0.012643892595988268
customization options
0.01220865702202821
easiest way
0.012138644869541986
source
0.01206895355041768
Clang packages
0.012035388138315487
--sysroot= option
0.01190719056533794
many purposes
0.011826152173914568
other compilers
0.010505874174961877
libc++abi.a
0.010085958093654772
extra setup
0.009718615837980659
WASI Libc

WASI Libc
0.009609231594973908
things wasi-sdk simplifies
0.00959623667282482
