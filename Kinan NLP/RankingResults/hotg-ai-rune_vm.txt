capability
0.02495267590893089
const rune_vm::Severity severity
0.021604998272902146
Main Rune abstractions
0.01864879564385937
OFF
0.017161623724935203
app - iTerm2
0.017065626128349047
\
0.01553917606901271
rune_vm
0.014766549759058077
delegates
0.014194732760025076
redundant data
0.014170303039837791
external tensorflow binary
0.013027937052680282
flow
0.0109540439239994
Android
0.010540313814562566
context
0.009956827024326369
script
0.009742426593408075
shared library target
0.009547676925750299
iOS
0.008755962619372542
return
0.008517250668736225
other host system
0.008190157842907962
project
0.007792245884105109
=
0.00771645975487571
cmakeCommon options
0.007712784021604652
armeabi-v7a armeabi
0.007661347514051456
Rune(-s
0.0076401108758677
arm64-v8a
0.007595336212463781
cmake source dependency
0.007508769572209965
delegate
0.007429685363183351
details
0.007320030925133848
tests
0.007208312091498726
const rune_vm::TRuneId runeId
0.007038911240902912
input
0.006899852005802285
\
    -DCMAKE_BUILD_TYPE=Release \
0.006889862730877988
allocated capabilities
0.006701218526141057
uint32_t length
0.006663997078184857
runtime
0.006561868522725427
d
0.006506211912516923
bool requestCapability
0.006318290482813039
interface
0.006256236792230431
NDK
0.00594167911431996
console
0.005887455826673684
IRune::call
0.005781163714309237
lot
0.005676795735349804
Build
0.005651309676582116
capabilityId
0.005531975174433469
Mac
0.0054871618657957415
_
0.00537453150847189
compilation
0.005312679239331504
default
0.0052681789189219915
NDK_PATH variable
0.005255434208027308
reason
0.005224145037999017
Configure
0.005202961297277886
Possible values
0.005189639373663946
mobile platform
0.0051484571289749535
PROJECT_DIR
0.005133831003932687
auto logger
0.0051316543643041244
binary
0.004985362093792917
C++ SDK
0.004891994801126557
buffer size
0.0048888089683548136
RUNE_VM_BUILD_TESTS
0.004800341057501505
cmake
0.0047372318576680145
.a objects
0.0047209019935930616
object
0.0046611080359512105
Examples
0.004559269514313417
Overview
0.004533029471534321
Tests
0.004461210679850868
param applicability
0.004449003182601601
final {
            return m_supportedCapabilities
0.004282147740722293
INSTALL_DIR=$(pwd
0.0042701845892895995
rune_vm::capabilities::TKey
0.004070962485598991
multiple runes
0.003925159015484571
&
0.003871665142625089
x86_64
0.003730794284894434
BUILD_DIR
0.0036831608557458804
x86
0.0036645686526641267
getconf
0.0036610198335904607
cores
0.0035749201815517516
ANDROID_NDK
0.003571779195951121
key
0.003527832808967327
accelerometer
0.0035168710378079464
images
0.0034971221944720965
ANDROID_NATIVE_API_LEVEL
0.0034880221520719483
m_input->m_data
0.003484438643502282
.so
0.0034816860932403238
https://developer.android.com/ndk/guides/cmake
0.0034281621036083448
path
0.0034130111944239284
random number generator
0.0033903335410718624
compiler
0.003390152282966512
json
0.0033726925323684788
RUNE_VM_INFERENCE_TFLITE_LIBRARIES
0.0033536483524187035
omit
0.003353348237822498
camera
0.003336922829495286
armeabi
0.0033360357773088455
ANDROID_ABI
0.0033030239349652467
count
0.003297432157324566
things
0.003296482229745522
rune_vm::IEngine
0.0032796186528456436
buffer.m_size
0.003275863290296396
ANDROID_STL
0.003271507556293075
RUNE_VM_INFERENCE_TFLITE_INCLUDE_DIRS
0.0032472092555430425
linker
0.003235733040332879
std::memcpy(buffer.m_data
0.0032093608428032695
cd
0.003187147176485374
build.gradle
0.003176319696795982
Add externalNativeBuild
0.003168180273128379
null || sysctl
0.0031549967075974036
rune_vm::capabilities::Capability::Sound
0.0031390276637532186
rune_vm::WasmBackend::Wasm3
0.003134554898095945
Library
0.003133312736043181
rune_vm::capabilities::Capability::Accel
0.003123551166182854
BUILD_WORKERS_COUNT=$(nproc
0.003108704685332997
arch
0.003102761694564163
https://stackoverflow.com/questions/18727894/how-can-i-find-my-apple-developer-team-id-and-team-agent-apple-id
0.003069134050594399
pages
0.0030681074181244236
rune_vm::IRuntime - context objects
0.0030643850200122885
Load
0.0030568243440990245
availability
0.0030555040206360004
target device
0.0030535380199387153
newCapabilityId
0.0030455107178501027
hw.ncpu
0.0030380782980259577
Release
0.003024603831685614
couple
0.0030244025367772262
Contents
0.0030131042631620147
environment
0.0030117805635358386
Debug
0.003008912321567568
std::max
0.0030076991968679564
std::array
0.0029776301510087535
CMakeLists
0.0029770410228684998
requests
0.002958072178954249
rune_vm::createEngine
0.002956436144174518
BuildPrerequisitesAndroid
iOS


GuidePrepare
0.0029543539905880745
delegate->setInput(data
0.0029320050308461873
team
0.0029282511179315024
Capability
0.0029250417748720504
User guideMain Rune abstractions
Library
0.0029244163262880873
System.loadLibrary("rune_vm_loader
0.002921299638367713
-DANDROID_TOOLCHAIN=clang \
0.0029178025804405543
parameter
0.0029151217006047475
rune_vm::capabilities::Capability::Image
0.0029115213181703957
-DRUNE_VM_BUILD_EXAMPLES
0.002907226869477758
case
0.002880663527331635
creation
0.0028726338150135474
git clone git@github.com
0.0028690925838466075
cmake

Common options

Notable cmake options
0.0028640438536372027
toolchain
0.002843825190747041
Swift
0.0028379043652158203
next env variables
0.0028320264881969547
gui
0.002827379013706882
shared_ptr
0.002810176974740046
request capability
            if(m_supportedCapabilities.count(capability
0.0027972945156677447
external native build cmake
0.0027909276681284097
Add jni layer
0.002789394404101066
Pod
0.00278680805032012
Table
0.002782389525399943
m_input.reset
0.0027810124982792436
rune_vm::capabilities::IDelegate
0.0027789271105830176
-DRUNE_VM_BUILD_TESTS
0.0027784117596767206
IResult::Ptr
0.0027781358131933986
>
0.0027758570677235473
request
0.0027702678450994074
location
0.0027689918661505525
expected resolution
0.002759600540758271
engine
0.002741598280652683
easiest way
0.0027369757962527933
CMAKE_TOOLCHAIN_FILE - toolchain file
0.002731559489314097
Runes
0.002729045845180496
RUNE_VM_TFLITE_EXTERNAL
0.0027244167203815278
ndk/21.1.6352462
0.002722079226657149
--target rune_vm --config Release
0.0027128034664311183
Notes
0.0027120773503520853
std::thread::hardware_concurrency
0.002703815300964421
framework
0.002702985031749734
complete list use cmake
0.0027011367899182743
shared_ptrs
auto engine
0.0026927299717673255
static constexpr auto g_supportedCapabilities
0.0026767577115372394
useful AI functionality
0.002655142359490317
time
0.002653120359320524
Kotlin/Java
0.0026468842577364086
public rune_vm::ILogger
0.002622879518915728
StdoutLogger
0.002620333612473861
Caveats
0.0026094450519732085
checkout examples
0.002607165684529346
c++17 support
0.0026070528119454227
rel-$ABI
0.002603806743987902
Delegate
0.002583005431450575
Prerequisites
0.002579419098139789
Test
0.002577488260465732
add_subdirectory
0.0025743663083930383
m_input->m_size
0.002567957494586562
Apple clang version 12.0.0
0.0025606842467848267
BUILD_WORKERS_COUNT
0.0025566575447155395
mkdir
0.0025545701051519405
engine->createRuntime
0.0025454784371623474
image
0.0025366985797652614
IDelegate
0.00252019808886904
g_supportedCapabilities.end
0.00251708059197761
macOS Big Sur
0.0025156026082556304
user
0.0025129314035646647
-DCMAKE_INSTALL_PREFIX=$INSTALL_DIR/install-$CONFIG_POSTFIX \
0.0024991557295682156
moment
0.002491974291600701
m_supportedCapabilities(g_supportedCapabilities.begin
0.002490769403830003
capability-related stuff
0.002489481774827261
cd rune_vm
git submodule update
0.0024873266583352598
rune_vm context
// logger
0.0024712792688406544
repo

Cloning submodules
0.002443930254423827
run
0.0024419220380169516
elements
0.0024400300535753587
rune->call
0.002424917922844134
AllInOneDelegate
0.002411464995755578
Rune
    auto result
0.0024015839233940857
IResult::asJson
0.002388855728734195
clang-1200.0.32.29
0.0023880612868373216
bundle
0.0023526269036527997
file deserialization
0.002352323903683047
data
        TCapabilitiesSet m_supportedCapabilities
0.0023419651400750337
--target install
0.002326240749948255
auto json = result->asJson
0.0022986994703514067
std::optional<rune_vm::DataView
0.0022885499959814388
callback
0.0022858847099534577
rune_vm/examples directory
0.0022801153698038595
PATH_TO_TFLITE_FRAMEWORK env variable
0.0022627909062638606
cases
0.002254331005822932
variable-length array
0.0022392306600196063
constructor arguments
0.002220867144211489
result
0.002212853344965125
IRuntime::loadRune function
0.0021886641640033845
message
0.0021801084998303143
binary

Android

Modern ndk
0.0021731236140689813
catch
0.0021205929157177557
module
0.002095432686900217
setup
0.002034792151474899
pathToRuneFile
0.0020131812845922354
