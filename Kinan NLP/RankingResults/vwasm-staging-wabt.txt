CMake
0.03314490415408902
cmake
0.017943457118878448
WebAssembly text format
0.01787780356717117
# parse
0.017335685348790535
tests
0.01711891763831506
wabt
0.016627562597547694
wasm-interp
0.0165686868187936
separate directory
0.015549596287568808
file
0.015092258959846085
wasm binary
0.013309606171697132
clang
0.013290001618353151
tools
0.012063583053822402
Address Sanitizer
0.011541195783725445
spec interpreter
0.01151648964815657
example
0.011326552985376966
WebAssembly Binary Toolkit
0.011264180564245043
macOS
0.011226283792677785
Visual Studio
0.010976731543645398
build files
0.010905667257765431
print information
0.010232139711755999
build type
0.010224611658774961
--help
0.010137219659688466
additional help
0.010063992092541153
# meaning
0.010059425098274821
wat2wasm
0.00959653625833057
DEBUG
0.009314800559079836
other
systems
0.009252114330205877
other configurations
0.009160053000265338
flag
0.008096641235135189
wasm2c
0.008042486664179904
validate
0.007797801268082021
bin/wast2json
0.007772213851687543
wast2json
0.007233911329924844
instructions
0.007191933068393141
gcc-i686
0.007141478048446326
tool
0.006890342879779458
Linux
0.006876158141164336
Clang
compiler
0.006854359404460005
Proposals

Proposal
0.006806796773150691
exported functions
0.006750520714807089
uninitialized memory
0.006629801045294896
dir]
> cmake
0.006566639228408431
gperf
0.00647477076378893
debug
0.006443919422873102
project
0.006281507660917693
Name
0.006150534247416869
CC=gcc scripts
0.006139183632487951
higher-level compiler
target
0.006048169603408015
config] parameter
0.005999954219040098
LLVM sanitizers
0.00584915854885278
mkdir build
$ cd
0.005782261861836376
new keywords
0.00575621122802961
default
0.005564217780922917
suite
0.005499954445697354
following demos
0.005341977008244412
normal way
0.005149013316440722
gcc
0.005141113007822672
sanitizer name
0.005122936973132341
compilers
0.004927235989702408
online demo
0.004881851556097545
exports
0.004845581941678182
lsan
0.004816588204916736
spec-test.0.wasm
0.004720012626772615
int
0.0047022342960197
spec-test.json
0.004686007141067625
ubsan
0.0045378403675075
--enable-tail-call
0.004536351004617955
Modules
0.004520185115431602
configuration
0.004503730662917844
msan
0.004477391092537611
test/README.md
0.004417148033499251
changes
0.004400156200737921
WABT
0.004348408693545673
spec-test.1.wasm
0.004346499222673209
Flag
0.004296099414451701
Online Demos
0.004248308244719379
support
0.004227904175954984
files
0.0041974458026308534
examples
0.004179778618120072
run
0.004149816737391318
uses
0.004148875121144432
toolchains
0.004146580699953084
Travis bots
0.004141462649779133
compliance
0.004139543352197925
operations
0.004132012998186913
Wabt
0.004118216838847985
https://aka.ms/cmake
0.004097416730039536
more details
0.004083441364137759
gcc-fuzz
build types
0.004069516904335647
feature
binary
0.004033021852424491
inverse
0.004010267201691625
RELEASE
0.0040019837153300805
exception
0.003984557726086571
combination
0.003974316433247208
round-trips
0.003942637151808274
typecheck
0.0039239205987977475
available
generators
0.003899059706377848
cd
0.003892454614471586
development
0.003870242523547969
dashes
0.0038605541965882556
full fidelity
0.0038576408947514026
list
0.003854141959701324
syntax
interpret
0.003828782919730421
--enable-exceptions    
mutable globals
0.003823876254832673
Binaryen
0.003818008327772646
\
0.0038135067636863827
bin/clang/Debug/
0.00377653788379764
result
0.003754028404194238
command prompt
0.0037539460528355486
JavaScript
0.0037505903894195993
wasm2wat
0.003724375357931357
wasm spec test format
0.003723018234739678
stdout
0.003718316727618457
s-expressions
0.0037087981536454346
PR
0.003703783704819729
C source
0.0036740908570580795
spec-test.wast
0.0036615652629269427
gtest repos
0.0036586637543332915
Developer Command prompt
0.003640417918071078
use
0.0036365820869646353
verbose output
0.0036198717060602257
link
0.0036170761439278873
travis-test.sh
0.003603188873589518
functionality
0.0036020773743653265
commandline
0.003596988540544458
testsuite
0.0035958139197938
optimization platform
0.003570635246433622
targets
0.003567334455164915
sections
0.003566968017879842
behaviors
0.0035629563125422863
undefined behavior
0.003554600422074471
associated wasm binary files
wasm-opcodecnt
0.0035493396257709297
prebuilt C++ sources
0.003537165322369544
PATH
0.003532851728381239
easier integration
0.003520012522688496
elements
0.003514768316758177
bin/wat2wasm test.wat

# parse
0.003502858394536343
value
0.0034955192225625377
opcode usage
0.0034915887150558165
flat syntax
0.003487824690876691
Undefined Behavior Sanitizer
0.0034828349980136723
Similiar
0.003480536757197831
lexer
0.003464768198621733
wat-desugar
0.003438807306125585
parse .wat text form
0.003437794132485042
readable C-like syntax
0.0034359014352680108
ASAN
0.0034180261769906424
byte
0.003416559118061673
CMakes default build generator
0.003415128601097907
canonical" flat format
0.003374380444064071
Ninja build system
0.003371091778671892
invalid memory accesses
0.0033600381696617557
box
0.003359782115143241
surprise
0.003357036255462657
Windows
0.0033438514788522444
MSAN
0.0032044477437583804
LSAN
0.003198868928161122
bounds
0.0031780181022986165
hood
0.0031652290789938357
C/C++
0.003161136141495738
UBSAN
0.0031537721668185685
test.wasm
0.0031295723063564872
.wat
0.003123129455411732
stack-based interpreter
wasm-decompile
0.00310938156941278
annotations
0.0030909754897510823
MinGW
0.0030764915854552496
Cloning

Clone
0.0030185640871632762
test.json
0.002977161609524798
errors
0.0029582661222229017
target
0.002930259347464141
sign-extension
0.0028352379147180747
submodules
0.002794470823929669
release
0.0027842061659401197
change
0.0024314807600045625
