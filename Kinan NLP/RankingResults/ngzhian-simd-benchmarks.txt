AVE
0.11772607143512916
171ms 105ms
ST SEQ
0.10103062659158606
ms)
ST BLOCK
0.04350005247684458
timing
0.03892034880237229
double_sum
v128
0.028003528221377843
result
0.023807428656010297
SIMD benchmarks
0.02368068590277785
354ms
0.013632123196447814
317ms
0.013058772074990082
120ms
0.013036106012454363
instructions
0.012459810711582234
randoms
0.011538106167811996
AVE 447ms
0.011376617318945445
ST BLOCK [1, 2) AVE: 105ms
0.011144790799313409
cpp source
0.01103610771110404
AVE 354ms 304ms
0.010778065886203404
normal code
0.010169486917327514
AVE 199ms 125ms
0.010086584901209698
intrinsics
0.009675930043236431
LLVM version
0.009471548199321417
Wasm
0.009340969574630693
John
0.009278080282328911
emcc-std emcc-simd
0.009220910095409164
excerpt
0.009015820752568363
int64_average
0.008788092169193911
et al
0.008669692555331114
Dart
0.008578611372585485
Programming models
0.008563042033363829
Workshop
0.008343084601783644
JavaScript
0.008309019523665096
McCutchan
0.008160115833845401
summarizing results
0.007802996963048609
SIMD programming model
0.0077332389270356565
451ms
0.0075166004873223665
355ms
0.007465964927031225
362ms
0.007456854093417943
199ms
0.007453813037318627
452ms
0.00744336684469964
421ms
0.007439115965215297
Examples
0.007417166846099648
309ms
0.007404748548263907
413ms
0.007394368119012208
384ms
0.007393520164328164
415ms
0.007384094418410563
404ms
0.007362183651960382
Proceedings
0.007360245974222671
SIMD/Vector processing
0.0073320780573498745
kinds
0.007318621514895261
total = 1500064655.815183

Distribution
0.007300635747477965
wasm-objdump
0.007271203160461133
liner
0.00723371797317997
scripting languages
0.007187657732517295
Time
0.007169386302479681
matrix_multiply_intrinsics.wasm mandelbrot-game-simd.wasm
0.007128399120698681
performance
0.007061593899390783
double_average_64.wasm
0.006858150497278472
= substr($0
0.006777452907942388
double_sum
0.006516448051922355
i64x2.splat
0.0064923224498408495
171ms
0.006488302668811392
index($0
0.006484140974402719
double_average
0.006388115793023693
f64x2.replace_lane 1
      9 f64x2.extract_lane 1
      9 f64x2.extract_lane 0
      8 i64x2.replace_lane 1
      6 i64x2.add
0.006244527419561912
Comparing ../lapack/results/arm64_gemm_benchmark_test.json
0.0061566616982301125
Benchmarks
0.006135944303986164
consumed time
0.006042027992920195
d8 test-std-M19937.js
0.0059654110923900334
mandelbrot
0.005850100592856384
f64x2.splat
0.00578602427227158
ACM
0.005761731698291604
SIMD-oriented Fast Mersenne Twister(SFMT
0.00576010173328336
double_sum.bench
0.005756481552514527
test
0.00571900779919253
benchmark
0.005689506857242368
arm64
0.005589354094512978
-O3
0.005541546343505836
i64x2.shr_s
0.005511729429803865
separate implementations
0.005498519243231459
Emscripten
0.0054278092571552914
simd
0.005362400131066027
f64x2.add
0.005270545089719326
algorithm
0.005246809224613289
sdm845
0.005235817636770809
int64_average.bench
0.005136038915054063
toolchain
0.005026911679255228
a
0.005001884494870358
slides
0.004762232309108578
Time New       CPU Old
0.004485382851733288
paper][0
0.004410442195677196
bit types
0.004198656017332297
gemm_benchmark_test.json
0.003989657434038262
