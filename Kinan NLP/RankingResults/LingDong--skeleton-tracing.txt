test image
0.040464866219338154
pixels
0.03532741286136536
C++
0.02186207896458496
C
0.02142936363323455
column
0.019911811822146137
row
0.0195737900581452
polylines
0.018431688834838755
non-empty submatrix
0.01818640775315574
center
0.017734881684559965
coordinate
0.01687622379649676
demo
0.015800453639026463
2D matrix
0.014688409455438629
least amount
0.014482392604773008
flag
0.014373014062332464
Python
0.01420312993406748
topological skeleton
0.013798568935921067
submatrices
0.013232694870879275
JavaScript
0.013057174972051522
set
0.011776327257351385
Java
0.011749210935959042
binary images
0.011547647858733544
coordinates
0.011431054273767513
area
0.010692384104847973
skeleton tracing
0.01055761531420179
WebAssembly
0.01036104328838924
thinning
0.010261172565156565
stack
0.010114942118653799
new algorithm
0.009723885683853668
pixel
0.009678698250453288
%
0.00958827379206008
stroke width
0.008477275292201313
endpoint coincide
0.008197869699332117
contour-finding
0.008177553900756428
skeletonization
0.00796059489741391
times
0.007892538684855904
Julia
0.007863861668502429
line segments
0.007794040639693246
following
0.007754606415384686
step
0.007531084672776663
Unity Engine
0.007496955475896256
single segment
0.007440930244863
favorite languages
0.007100522471893863
result
0.007089681516314739
X11
0.006317466780724337
AppKit
0.006121411703875569
Rust
0.006089967333033674
display
0.006046256357179534
Exception
0.0060401985802901485
reading
0.00597957951152865
NSImage
0.005950960985493453
overhead
0.005884287702306075
number
0.005884238677073989
y
0.005876787255972301
simple rust implementation
0.00584171142919807
x
0.005715192499960946
browser
0.005545144678452853
emscripten
0.005483703704297542
pthreads
0.005427386644437206
C99
0.005424063670542184
friendly wrapper
0.005412709516532294
open tabs
0.005409430048062015
arrays
0.005362326357181055
SWIG
0.005348509020422734
goroutines
0.005346931154579961
performance
0.005346613256301975
Benchmarks
0.005338947766431651
OpenFrameworks addon
0.005336633234690555
code
0.005332479391019399
MHz DDR3
0.005276303016488557
GB
0.005272667809050462
Wrappers
0.0052641171792515646
benchmarks
0.005227112672548931
array views
0.0051620282249582854
qualities
0.005152459986295039
opencv
0.005144995330563176
clockwise
0.0050981998835950585
lots
0.0050707828570875045
C++ version)
C# (demo script
0.005069866750482513
wrappers
0.0050611019676948575
implementations documentation
0.0049880481574126586
ant-clockwise order
0.004963856057963603
height
0.004926050533804677
return
0.004899833695967558
vertical splitting
0.0048984526659931055
MacBook Pro Mid
0.004849805847570483
reverse
0.004838391819300998
polyline
0.0048170716624231546
imperfection
0.004754444947690706
GHz Intel Core i7
0.004730873855832283
stroke
0.004702520617729853
edges
0.004691415943426246
intersection
0.004654859999326233
real time
0.004639118156924976
convolution
0.004638223275888121
links
0.004634861754281938
Recursive bottom
0.004613555300573631
pure or "vanilla" implemenations
0.004590446899861414
slight variations
0.004557623827070209
test_images/opencv-thinning-src
0.004556052997509054
crossroad
0.004541755548029125
problem
0.0045191618957140835
endpoints
0.004505960828769295
steepness
0.004491707415006046
algoirthm
0.0044636254684557895
Raster
0.00443037463605791
single strokes
0.004326687010711516
enclosing outlines
0.00431903529974995
certian extent
0.00431532883767894
straight line
0.004306701869652146
corners
0.004291953948338839
parallelizable divide-and-conquer based algorithm
0.004288837305150978
estimate
0.0042479065986973825
pixels(foreground
0.004203569993892513
quality
0.004187060358996554
pixels(background
0.004150514804870346
morphological operation
0.004144948624412038
vector representation
0.004140789663770383
more candidates
0.004130410249698854
midpoint
0.004128227966419721
small, pre-determined size
0.004049076350296765
sec
0.004023617593266004
Check
0.004016985702822149
results
0.004004195600427322
rest 0.002 sec
Python
0.003915601922568599
Creative Inquiry
0.003852801356611516
highest possible optimization level
0.0037838713448007655
Frank-Ratchye STUDIO
0.003651557577795162
traditional raster skeletonization algorithm
0.0036396085402611604
Carnegie Mellon University
0.003578971197231313
Chinese characters
0.003522006082285643
Node.js v12.10
C# 4.266101 234 17%
0.003355002994690588
Language Seconds/1000 Runs FPS % C speed Note
C
0.003169929333047789
