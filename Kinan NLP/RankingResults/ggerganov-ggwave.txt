data
0.05728464740067766
F0
0.041627891345564806
ggwave
0.03870150643265681
80*dF Chunk
0.03519240191135075
sound
0.02286387753519225
library
0.01921793204129128
audio devices
0.014853686445669145
messages
0.014624286912478269
HackRF Radio
esp32-rx Transmit
0.014315516983694454
protocols
0.013847915365775914
demodulation robustness
0.013396298012122217
Value
0.013377538178008666
&
0.012794728887238234
cd
0.012775803989035227
possible applications
0.012376946605145156
bytes
0.012249476554373463
few examples
0.012029377162413306
Web Audio API
0.011875648390774625
modulation
0.011785789675007688
ECC
0.011358639774313667
commands
0.011312556779307191
cmake
0.01111170430622156
tones
0.010827170168521479
spaced frequencies
0.010632878769115303
git clone
0.010609227682605075
bit chunks
0.010301335880471845
PC speaker
buttons - Record
0.010024287933984227
special sound markers
0.009912564581248704
Freq
0.009851730491565533
Reed-Solomon error codes
0.009642858605745179
More info
0.008903283690692952
algorithm
0.008777091876208409
PC speaker PC speaker
ggwave-objc Minimal Objective-C iOS app
0.00870902580556959
web applications
0.008634826346723426
android.media
0.008133914033646088
Browser demos

HTTP service

# audible example
curl -sS https://ggwave-to-file.ggerganov.com/?m=Hello world
0.00812404206418966
buttons
0.00806580232409739
Windows
0.007686793750327392
install
0.007512076996047526
time
0.007268254443828225
mkdir build
0.007261244113826366
MSYS2
0.007168688840490415
sec
0.006966648131778726
moment
0.006961915661045312
https://github.com/ggerganov/ggwave --recursive
cd ggwave
0.006950502341127127
nearby devices
0.006931803242776502
speakers
0.006881798152165118
list
0.006867695797867979
dF
0.006843087314762023
Mac
0.006770653824422332
protocol parameters
0.006711732228803126
clipboard
0.006612377899666403
Error correction codes
0.0065742449381446695
microphones
0.006559484975177291
Hz
0.0064968614482051445
air-gapped devices
0.006495489172042525
number
0.006492704553525239
e.g. PulseAudio
0.006475967536618146
tone
0.00646021836009656
Examples
0.006355796651242754
Talking buttons


Audio QR codes[Twitter
0.006266393221374954
length
0.00624086668604037
Serverless
0.006136042690199461
Fourier
0.0061301837197853485
wave-gui
0.006125403120291248
small amounts
0.006118578846112287
frequency spectrum
0.006107918019340253
ALSA
0.006107309872777745
one
0.006081606568506113
bits
0.006077238408402574
Example Description Audio
0.0060691068084060265
Device
0.006034099414985899
prototypes
0.006026648803868117
generated waveform
0.005978343888099447
GUI
0.005943085959522304
short summary
0.005797046289532425
bandwidth rate
0.0057945698231824105
range
0.005750978361963742
receiver
0.005734636483680002
same way
0.005731745750832372
file
0.005727967639556077
Demodulation
0.005697478343984939
transmission
0.00566388573984495
#
0.005656816058839067
many broadcastwave-share - file sharing
0.005649104230315232
https://pypi.org/project/ggwave/

Node.js

npm install
0.005643199409447598
callbacks
0.005632600144354698
sound SDL
ggwave-py Python
0.005614898183781053
current approach
0.005611539181254742
pip
0.005585630253798173
free waver application
0.0055754421274970024
various projects
0.0055563058891521366
WebView
0.005514452994350899
brew
0.005491663800897435
Details
0.005472330786320894
multi-frequency Frequency-Shift Keying (FSK) modulation scheme
0.005466987947482304
MSYS2]
$ pacman -S git cmake
0.005461552361185673
uncompressed WAV file -
waver GUI application
0.005444884589605681
following platforms
0.0053104023962522
simple FSK-based transmission protocol
0.005280800881070283
RAW waveforms
0.0052192752860635485
Building

Dependencies
0.005213356526292955
SDL-based examples
0.005199073095895852
dev
0.0050838042874166425
mingw-w64-x86_64-dlfcn mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2

Linux
0.004762882724375028
Snap Store
0.0047238287012677125
Linux

sudo snap install
0.004621115281156319
images
0.004573276605407262
Swift Package
0.004219581601303063
npm
0.004110273984377811
Actions Status
License
0.003533534893865496
