oup::enable_observer_from_this_unique<T
0.0448458483349057
smart pointer
0.04158683326161734
pointed object
0.03381177679613856
owner pointer
0.03078236920286969
unique-ownership smart pointers
0.02543446873571346
observer
0.020453678854304786
small header-only library
0.016377213691893974
std::shared_ptr
0.014602614069290226
_
0.01338124787130741
reference counting object
0.012017741371634772
std::unique_ptr
0.011815230570786745
speed benchmarks
0.011317004768174795
policies
0.010982268456782646
std::weak_ptr
0.010424275693387169
std
0.009372693334456632
libstdc++
0.009224311253849296
Pointer raw weak observer unique shared obs_unique
0.009180790609492409
bytes
0.009140066493397919
pointers
0.009128861224120764
CPU
0.008260925519295326
auto
0.008217209802422298
convenience" types
0.008093706953831587
lifetime
0.008016585502347916
^
0.007934653877099315
trade-offs
0.007861214243026764
Policy
0.00759540171399755
member function
0.00708962961484747
MSVC
0.006936594021420271
GCC/clang
0.006880293386309074
observable_unique_ptr
0.006621757391577119
no(1) yes(2
0.006475856141451186
observable_sealed_ptr
0.00642898863036275
allocation optimizations
0.006352036933657589
arrays
0.00630508657653312
overhead
0.006259565810320419
nullptr
0.00621352564744441
Disallowing release
0.0061510840860507475
bit
0.0061470432915915986
Speed benchmarks
0.006122042709650843
feature
0.006107739083683428
possible implementation
0.006096199445884803
Size
0.006072719874008198
less safety
0.006057602141566994
Compiler
0.006049680134189188
limit
0.00597489683470247
Stack
0.005966712413234026
common 64bit linux platform
0.005944005307239443
features
0.005939007041855409
Labels
0.005899770667421592
repository
0.005882415276272812
cases
0.005743444567211129
comparison spreadsheet
0.005725883673942567
linux 5.1.0
0.005698103387723072
header
0.005573701111523006
instance
0.005551878092293323
#
0.005542890138354122
multiple ways
0.005483516707214419
CMake add_subdirectory
0.005407221520513438
>
0.005137620995007097
flukes
0.00509080964485795
obs_ptr
0.0050851173506020085
erases
0.005033296677998051
Observable deletion
0.004993139556673282
non-owning pointers
0.004942040088977566
float
0.004913184276282539
Support custom allocator N/A
0.004797870445334911
std::string
0.004705639558621714
race condition
0.004701818198724127
std::make
0.004696439805976235
stack and heap sizes
0.00467378870626776
int
0.004657339780818888
regular raw pointer
        assert(obs_ptr
0.004653869018733265
Atomic_counter_t
0.004562437515829145
Sealed (unique) pointer
0.004543815210755323
Heap
0.004462147468367441
yes
0.0044518980218096514
speed_benchmark.cpp
0.004346400621790154
Deleter
0.004314277748472985
more information
0.0042860800428943585
various allocation cost
0.004256454724126338
objects
0.004241676058406594
motivation
0.00422841728911511
std::array
0.004187137563164195
documentation
0.004152722154086226
tests
0.004131077654211611
lack
0.004125633748967131
behavior
0.0041242975721032535
benchmarking framework
0.00409034994668563
API
0.004084575844992465
MacOS
0.004066890248134473
benchmark executable runs tests
0.0040520494420794965
following limitations
0.004030079712504291
Windows
0.0038843195392537595
timings
0.0038491476142732623
practice
0.0038279464384836977
Limitations
0.0037938210131706054
Detail
0.003792645415430891
submodule
0.003744780309360773
only difference
0.0037306142013474714
own choice
0.003724438829785896
Microsofts STL
0.003712618366522761
real life scenarios
0.00368975636790281
worst-case values
0.0036743906777932825
LTO
0.0036518144326845615
mixture
0.0036280465666449512
size
0.003623624850122122
WebAssembly
0.0036103387422627368
Linux
0.0035827597331460066
Emscripten 2.0.16
0.0035764093063755664
time budget
0.003563561877748094
custom allocators
0.0035498348880998757
input
0.0035081421677959066
control block
0.0034993686920978774
libc++
0.003491388620885615
MS-STL
0.003478113671250211
virtual inheritance
0.0034197158468993326
target_link_libraries(<your-target
0.003397275590248242
access
0.0033791462386184397
PUBLIC oup::oup
0.0033787867239841655
fundamental limitation
0.0033746753226029684
generic classes
0.0033738646984587477
gcc
0.0033668494679327944
thread
0.003360278445892794
content
0.003354292717440536
Create owner 1 2.2 2.0 N/A
Create owner factory 1 1.3 2.0 1.4
Dereference owner 1 0.8 1.8 1.5
Create observer
0.003348272581216136
actual business logic
0.00332470334474926
recommendation
0.0033237764283064204
cassert>

int main
0.00332241654460354
oup/observable_unique_ptr.hpp
0.0033189136152130694
byte signed integer
0.003312883576937963
std::basic_string
0.0033029659861833326
type
0.0032970721820871477
string
0.0032800362063215138
observer_ptr
0.003250028997317798
i7
0.0032332474933211438
C++ standard
0.003231885239449054
box
0.0032260371947157983
construction
0.003217278764149221
Introduction
Usage
enable_observer_from_this
Policies
Limitations
Comparison spreadsheet
Speed
0.0032163444874236274
v0.4.0
0.0032070626307762885
issue
0.00320117143244046
observers
0.0031788448830821236
Max number
0.003153046689961385
own sources
0.0031450917485397463
Atomic
0.003144261690719522
price
0.0030996624608499086
times
0.003076545081955781
N/A N/A N/A
0.0030731075624716455
own code
0.003057514033740186
C++17-compliant compiler
0.003051247763941747
default
0.0030403755004108353
scope
0.00302804263162234
Thread-safe deletion
0.0029619025906111288
owner_ptr
0.002952304743687105
next instant
0.0029319565939581954
// Non-owning pointer
0.002917137367697573
obs_unique
0.00287622301470758
codecov
0.0028588426106056814
Introduction
0.0028042971955373175
return
0.0027558738353493737
assert(obs_ptr
0.0027354086271505033
object
        auto owner_ptr
0.0027097718273270863
allocations
0.0026661136761274625
std::atomic<std::shared_ptr<T
0.002658366498708196
Build Status Docs Build Status
0.00261135197770171
look
0.002584620339015263
assert(!obs_ptr.expired
0.002560673124878429
Notes
0.0025187054165855716
needs
0.00219263677126849
Create observer 1 36 2.4 2.5
Create observer
0.0020689331024931353
