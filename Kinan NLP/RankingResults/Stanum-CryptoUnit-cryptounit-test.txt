following command
0.07678747872331078
local node
0.05322604076228484
infeos
0.04263823022195189
terminal
0.03686014773006508
config folder
0.03280508150169888
smart contract
0.029982030211546846
npm
0.028239412445280825
WASM
0.025001465631766084
ABI
0.024949948492378908
test machine
0.024490602010513746
deployment process
0.023788565689570336
Compile EOSIO smart contracts
0.02264446843398929
generated WASM file
0.02171104735162568
default
0.021575543923975243
deployer account
0.021145714846231112
CRU tokens
0.018036094468574942
js
0.017919196378703265
values
0.01784763582826214
infeos_config
0.016742590300095714
stages
0.01650367151823965
init script
0.014398181792693535
abi option
0.014022295393258942
import keys
0.013888578983688922
benn
0.013773304197804946
wallet
0.013574292781891163
Infeos
0.013570498958785463
end
0.013544297849473917
scenes
0.01342331321897346
Install
0.013290090832056171
Testing

Tests
0.013253849603954194
EOSIODeployer
0.013144180243328854
instance
0.01311082010840224
more details
0.013000696611371564
blockchain
0.01262534624930415
fresh and clear new instance
0.012385296360889872
docker
0.01233908492249776
sample contracts
0.012285629516264966
files
0.012211685238820533
create test account and setup rights
0.012053448934651071
masterContract
0.011870047654517114
whole image
0.011727251532000186
actions
0.01148324108877608
time
0.011264284847228639
first deploy
0.011213640504545626
local EOSIO nodes
0.010973368678573696
result
0.010813739575827156
power
0.010556004090971599
infeos run-node
0.010439264564696299
Sample output
0.01043589632927054
Docker containers
0.010276255815823303
tests
0.01023712937287642
statefull procedure
0.010182933764469227
small but yet powerful images
0.009883701607794936
Framework

Environment setup
0.009492747273724992
Non
0.008580709999555779
user
0.007779925031171685
