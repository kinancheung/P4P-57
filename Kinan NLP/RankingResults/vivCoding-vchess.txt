move
0.03506046006040723
piece
0.029755367938690377
engine
0.028773053988031733
optimal moves
0.01980847815671546
chess programs
0.01906358597012819
mates
vector<Move
0.01704322281742962
Vector
0.01679096996061731
class
0.015363184318735967
turn color
0.013929034310093203
Piece
0.013458791823212406
moved_success = game.move_piece(Vector(x
0.013378244875330228
WHITE
game.reset_game
0.012605991538190734
|
0.011512741934708977
y
0.0110078045544712
bool
0.010768113341928223
QUEEN
// piece types
0.010387887667152462
chess difficulty level
0.009670050700929208
current turn color
game.get_turn
0.0091672554927197
#
0.008759302930358483
ChessGame
0.008715933610866904
Move utility evaluation
0.008225649346498706
position
0.008159873482278644
chess program
0.007956044305383691
x
0.007863653109112013
Utility Classes
0.007766436253706447
vectors
0.007496761325208961
board pieces
0.0073611358273240265
x2, y2
0.007360951028857246
int
0.00692288461613721
checks
0.0067578622552013435
BLACK
0.006718130506288222
Ng8-f6
0.006704774178115516
usage
0.006030549430443095
engine/Game.h
0.006024779634646095
move generation
0.006022195953621432
valid_moves
0.00601916320996109
use
0.006012152885051661
PAWN_PROMOTION
0.005990093697253444
enums
0.005788123068831555
readable format
0.005782647609407955
MoveType
0.005715978910034276
v = Vector(2
0.005714824397505091
pieces
0.005708738579301776
moved_success
0.005640124249801516
TODOs
0.0056051711349268535
alpha-beta pruning
0.0054735621785013625
Bb Nb Rb
0.005466049747996988
main classes
0.005433209061781306
move_piece returns
0.005432652517210857
pawn
0.00542540769242437
ChessEngine
0.005423393989435615
simple piece square tables
0.005281178799436646
higher engine levels
0.005229100714805862
Game State
0.0051137114160962035
turn information
0.005060073467751072
Proper piece movement and game/board state
Undo move
0.00504549267446273
Undo


Board State
0.004942322358736124
best calculated move
0.004912204319713981
history
Move generation
0.004862631855081941
chess_engine.board->get_piece(3
0.00483002396958091
Pieces
0.004795584624665899
game.pawn_promotion_available(x
0.004495566072393172
move.move_to
0.004461857984754378
chess games
0.004411577748400518
g8
0.004267228889044898
piece_moving
0.004206574501685753
main
0.004147534284151204
check
bool in_check = game.is_check
0.0041258304771431
BISHOP
0.004122892248105313
ConsoleChess.cpp
0.004033733439219987
Initialization
0.004027489670780198
knight
0.003983581227312562
startf
0.003958386896153908
ROOK
0.003939816736275846
get_valid_moves(Vector(x
0.003937837689267389
account
0.00386978660873003
CASTLE
0.0038112558236557304
Kb
0.003786466690138462
JavaScript
0.0037828595455962934
Resetting
0.0037812042264044167
KNIGHT
0.0037672809723026117
CAPTURE
0.0037623928191186083
passant move
0.00375351229844066
QUEENSIDE_CASTLE
0.003733355595543085
state
0.0037210766774926226
d
0.0037005106467881536
repo
0.0036952967942139514
e
0.0036860909778449282
path_to_engine>/*/*.cpp
0.0036753817407079196
h
0.0036426716517882246
center distance
0.003638614552453716
coordinates
0.0036329088112613283
mobility
0.003626224026368539
C++
0.003623286406523932
move.move_from
0.003617950961325204
Known Issues
0.0036150284474388036
other factors
0.003586083570166505
type
0.003560553644821455
e2
0.0035524120915810292
Vector(x2
0.003546806613924847
move.as_string
0.0035107055584457326
example value
0.0034680587560471095
movements
0.0034135089429189153
material score
0.003412641797612445
path
0.003406768004259515
number
0.0033729357092263175
WebAssembly
0.0033725277215219257
e4
    game.move_piece(4
0.003357590543639665
xy positions
0.003348464227150356
Lots
0.0033468790974730523
Runtime complexities
0.0033277697594259986
choice
0.003298519248422993
Chessboard
0.0032898983079887546
negamax
0.003281340661011603
Note
0.003268636261387319
specific location
0.003257884143918059
change
0.0032450085192031555
common scenario
0.003240859575367075
mates
0.003229203471739287
game.move_history_size
0.003228466930100159
namespace std
0.003225054515444208
capture
0.0032141572620386872
History
0.003205095323684966
chess long notation
0.00319317899765212
default
0.003161392763597157
get_all_valid_moves
0.003152906701368806
engine.generate_move
0.0031490585668542703
Color
0.003137192276726726
b  c
0.0031312119197435644
basic implementation
0.0031308067916952257
std::vector
0.0031171106899955596
other techniques
0.0031100252704647606
game.set_turn(WHITE
0.003061797692852242
p->type
0.00306170796367398
chess_engine.is_checkmate
0.00306122598767356
colors
0.0030499758781003627
move.first_move
0.003029589811311743
required header files
0.0030293611025774686
following types
0.003029247866902149
v.as_string
0.0030258832535308934
transposition tables
0.0030166861837099043
Pw Pw Pw
0.0030074368004292854
0th index
0.003007117366663343
Turns
0.002985381741261477
recent move
0.0029780903256219054
peek_history_back
0.0029675949081474926
backend
0.0029604515702352624
engine.generate_move(&game
0.002956210809061033
v.scale(2
0.0029559867296491044
Moves
0.0029557624120859004
move quality
0.0029535972224311634
indices
0.0029168672449945915
piece_moveds first move
0.002915123373754049
white_checkmate
0.0029135528267056005
oldest move
Move* oldest_move = game.peek_history(0
0.0029121968240489967
legal (valid) moves
0.0029119068805640515
game.undo_move
0.002907327565133119
Moving PiecesPlayer
0.0029064177789356604
Vector(4
0.0028937048646181787
y = 0
Vector zero_vector
0.002871639043949278
promotion
0.002851877944044156
return
0.0028169833308173235
v.equal_to(v2
0.002809367372679278
Engine Usage

Engine Levels
0.0028091045336236854
PieceType promotion = move.promote_to
// original pawn
0.002805317094795044
Bw Qw Kw Bw Nw Rw
0.0028028104132751643
vice versa
game.next_turn
0.002800932259015605
v.equal_to(Vector(1
0.0027911029262746804
engine.get_level
0.0027810415512059474
p->get_moveset
0.0027803683851700908
player
0.0027762563972244464
black_pieces
0.002768412929383353
v.set(Vector(5
0.0027529617280421764
v.set(5
0.002745456943287169
convenient function
0.0027267500004597815
engine.set_level(int new_level
0.0027228835891678193
Move* most_recent_move = game.peek_history_back
0.002719936688381699
game.next_turn
0.002713669589529639
info
0.002713362938521663
Vector v2 = Vector(4
0.002696004686159071
Pb Pb Pb Pb Pb Pb Pb Pb
0.0026758738590610875
generated move
0.0026700238142099847
ones
0.002663427261553598
UseInitialization
0.0026562570106885178
p->position
0.0026511094478256563
case
0.002644861729335145
bool white_stalemate = game.is_stalemate(WHITE
0.0026364792086221913
v.subtract(Vector(4
0.0026359181433184176
new one
v.add(Vector(1
0.0026104460892605935
consideration
0.002592360743240289
GUI
0.002572891208289236
Pieces
Game State and Valid Moves
Pawn Promotion
Move History
0.0025552982004363725
report issues
0.002547909795561158
initialization
Move move
0.0024883657768147156
GitHub
0.002467641881870342
Pw
0.002367614486520945
VChess

A basic C++ chess engine
0.0019485252649700763
