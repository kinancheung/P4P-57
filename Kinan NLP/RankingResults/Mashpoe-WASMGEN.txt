0x01
0.06412962036492284
0x07
0.04883801918830102
0x00
0.03906174526715983
LLVM IR code
0.03048221037463423
0x02
0.02927972130807961
WebAssembly
0.028279582869106087
size
0.026513070842569337
buffer
0.024622438560906415
i32
0.021242232854858423
0x03
0.020684896574746314
0x09
0.017210752427765808
wasm(code
0.016919180554908483
multiple $wasm statements
0.016845648490376453
0x64
0.013446353787150346
C preprocessor
0.012986239159631596
local_get
0.012849111308189724
0x61
0.012637741555123887
wasm_code* code = wasm_code_create
0.01197835103193558
0x7F
0.011523118049094297
WASMGEN

A tool
0.01120761307822916
func
0.010769348416026803
C
0.010578534080805252
magic number
0.010233057062054515
wasm version
0.0101420155436382
sec_type
0.01003326107341954
magic
0.010020671273631739
text form
0.009950606173597254
$sec_func
0.009834067864642082
binary-formatted WebAssembly
0.009470814338734413
sec_code
0.009442325056595691
function section
0.009408842762135317
JIT compiler
0.009406831520604828
side
0.008950658215006756
0B 0C
0.008928202427691698
0A
0.00876841300966201
char
0.008754129992465587
local index
0.00863186468429483
0x02) parameters, i32 and i32
      0x01, $i32,				        // function
0.008461657407077265
fast and lightweight interpreter
0.008460039152849885
separate sections
0.00841235752323536
0x0A
0.008131935256083187
export name string
0.00798417845169701
end
0.00784965797151922
WebAssembly JIT compilers
0.007745251818513471
0x20
0.007032037104186374
C++
0.00692505260185442
0x6A
0.0068932828003243655
0x60
0.006739841930319571
0x0B
0.006604003476286103
wasm_code_output(code
0.00656277414914338
Rust
0.006509812154814076
file
0.0064828699666398554
7F
0.006347658243324111
effect
0.006164333876232566
exports
0.006085709157249963
local decl count
0.006020090949498874
bytes
0.0060004326548231965
wasm_code_create
0.005969255099489959
body
0.005968954331144225
interpreters
0.005947512449585953
compiled languages
0.005920434985561011
Parentheses
0.005851939183790083
things
0.005832882837526484
sec_export
0.005810606527586304
output.wasm
0.005807997994339588
sequence
0.005741255001224356
wasm_code_add(code
0.005688625435842558
results
0.005672810484746426
organization
0.0056461142621146215
program
0.005629037328078033
num types
0.005548032736416758
wasm_macros.h
0.005533814345845202
Assemblers
0.0054573522765115874
other functions
0.005439572270881315
version,			    // meta info
0.00535005262738684
advent
0.005335596517560277
i32,	// function
0.005327598174415717
text-format
0.005293338215112291
order
0.005215079881243722
hex values
0.005121924918801826
Web
0.005115238695455386
assembler
0.005114478346288734
JavaScript
0.005069483507108053
Sample print output
0.005066433317952366
export kind
0.005032291163015117
i32_add
0.00502116528282929
wasm_code_print(code
0.004989803093730708
calls
0.004986099664407673
predefined macros
0.004942562130708976
sec_export, 0x07,		    // export section
0.004939081877022506
function 0 signature index
0.004775991828106734
web
0.004700310115816855
lot
0.004667415196606034
binary format
0.004584261677891007
world
0.004570729321964119
strlen(str
0.004555798398811811
much documents
0.0045228559185387825
wasm_code_add
0.00442183196142583
6D
0.004206823011965649
commented binary counterpart
0.004133289816781118
