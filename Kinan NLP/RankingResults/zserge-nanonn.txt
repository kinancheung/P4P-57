layer
0.06304324395999203
input vector X
0.03411601380137036
NanoNN
0.029957214842214145
Neural network
0.026459991343807523
connected dense layers
0.026346132270592296
Various activation functions
0.021343059941160238
output
0.019090866311588447
weight matrix
0.019073383792687595
different implementations
0.016904134900825072
resulting output vector
0.016804123259425017
error vector
0.01612778889664856
Implementations
0.014929365407310624
linear, optional bias
0.014921520639846421
ReLU
0.014578829272204462
toy code
0.013103551608633109
different programming languages
0.012782857830718334
JavaScript
0.012349146064642134
neurons
0.012273911984223545
linear list
0.011237629741157171
NN
0.011207466988787124
parameters
0.010909800817862723
Tensorflow
0.010880571580597461
backpropagation
0.010368008699632433
example
0.01033375004370039
type
0.009997562152799079
data
0.009951915566202804
mode
0.009837039292946954
prediction
0.009720302809174205
customizable cost function
0.009577647248396931
weights
0.009457187949805018
NanoNN model
0.008984125739468133
forward propagation
0.008413061236826714
neural networks
0.008142229688210018
C
0.007704377349734406
Thanks
0.007473553602817481
ES6
0.0074585415288521565
benchmarks
0.007434346058767287
SoftMax
0.007412908958667107
good old C89
0.007283245983879162
Android
0.0072422721581096965
MNIST demo
0.007141650281311275
examples
0.0070042131250943745
tall rectangles
0.006909431138171521
training
0.006868794352074506
units
0.0068542615053874
Layers
0.006851744488096158
sigmoid
0.006815293213085481
less than 1KB
0.006791469864963754
tests
0.006737864999305458
memory allocations
0.006734062355087635
vectorization
0.0066882234152043805
elements
0.006680970597561343
@krugloid
Java
0.006678958311762377
way
0.006677770797472945
replacement
0.006604874879065552
numbers
0.0065377549929757535
biases
0.006509486180764587
PyTorch
0.006497573131376424
Weights
0.006434342880007916
Kotlin
0.006422953374252426
hobby projects
0.006348491376470545
picture
0.0061734864899520335
multiplying arrays
0.0061536560891700355
technique
0.006136631720181365
Neural networks
0.006118741082647354
embedded systems
0.00610948251948531
inputs
0.00610870009992384
lines
0.0060918443418013545
unit
0.0060654770349376445
simplify
0.006020174838516985
project
0.006012218868911033
WebAssembly
0.005957044621908806
computer program
0.005915991075943177
numpy knowledge
0.005797899840511406
Rust
0.005736624093638582
essense
0.005714909727377564
last thing
0.005709937287558627
minutes
0.005624672854401392
result vector Z
0.005614583970144962
dropout
0.005605641071551769
simplicity
0.005593108749272291
math
0.005587214696024255
whole architecture
0.005552117447924779
sense
0.005538454530175597
whole range
0.005536275208009054
hood
0.00549844013530384
W. Bias
0.005486472016909893
didactic purposes
0.0054650725116207185
Zero dependencies
0.005388757335027035
Layers

Layers
0.00534117931301366
details
0.005340795652266134
human brain
0.005331623817196509
browser
0.005240818755300879
point
0.0052123766872577545
resulting dot product
0.005173961848387739
nano-framework
0.0051381605964408135
previous one
0.005130192603051697
interface
0.005105260696893474
box
0.005089495260810942
layer data type/class
0.005080089231508026
fixes
0.005066713290543519
learning rate parameter
0.005030318421567353
Swift
0.004966145035051498
new features
0.004919239145337062
major changes
0.004894809980247819
toy neural network implementations
0.004693087368010041
Go Report Card
0.004599795479746079
non-linear space
0.004501843229024266
Pull requests
0.004340565581950306
issue
0.004199849998208832
nanonn

ci
go.dev reference
0.003849568327914725
License

Apache License
0.0034176128376641668
