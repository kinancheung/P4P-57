Monero Crypto library
0.07215945642071427
Uint8Array
0.03677494762592801
message
0.02804448654522186
nonce
0.02633203926062528
=
0.02405526917051138
input Buffer
0.021902181569631946
Returns Hash object
0.02179905480053923
const hash
0.016506923076040073
Ring Signature Crypto Library
0.01621302139776628
synchronous, secret key encryption
0.014150798126206792
data
0.013488845034926564
Namespace
0.013442503173606518
use
0.012172072200020317
Promise
0.012079572778878889
project
0.012056969263892681
Monero test cases
0.011777888241104765
specified secret key and random nonce
0.011329389523028666
BoxSharedSecret object
0.010699068503647156
WASM
0.01046485622038446
box
0.010377053105020578
keyPair
0.010248605519430689
ring
0.010091636000184768
Typescript
0.010062708932066055
folder
0.008763263745249944
npm install ring-crypto
0.008642868313019744
signature validation
0.008634935050846218
JS
0.00837466784812244
msg
0.008133205485620153
tests
0.007837813441665316
SignKeyPair
0.007722534160030537
require("ring-crypto").Crypto
0.007558637856893756
sharedSecretKey
0.007447198745242527
Sign.verify(msg
0.0074315813454517935
Random.bytes(Crypto
0.007431049997676214
Box.box(msg
0.007351063491574889
curve Ed25519
0.0071628697738260385
const sign
0.007155456048094729
SecretBox.box

SecretBox.box(msg
0.007138794176312427
public key
0.0071325959103230975
bundled builds
0.007086255436717623
Sign

Methods

Sign.keyPair

Sign.keyPair
0.00706824860377995
b_shared_secret
0.00694292162246922
unbox
0.006908787755180805
Sign.keyPair
0.006899635879257045
s_sig
0.006862732286542696
ringSig
0.006650830154828149
levels
0.006523272413465902
secretKey
0.006517598102997418
Secret Key Encryption
0.006391888360616543
hash
0.006360748357791487
Array
0.006256573360285247
String
0.006251805019024692
sb_secret
0.006105857825185284
library
0.0060627618720295795
SecretBoxSecret
0.006006187206508908
large slowdown
0.006002878526958507
Cryptonight Hash Function
0.005832873486616412
r_key_image
0.005454224870212818
directory
0.005088049148682694
signer
0.005034414692443955
NodeJS
0.004958398424825934
keyPair.s_public_key
0.004933941690836785
sharedKeyA
0.004865072844644419
Browsers
0.004824915579436635
keyPairB
0.004752858367166958
Babel
0.004737201907407042
flexible compatibility targets
0.004624638641236465
secretKeyPair
0.0046124281283679534
Ring.verify(msg
0.004604502250876313
ES5 target
0.0045976286565256015
Box.open(box
0.004595773147054725
signing
0.004535088378517938
output
0.0044407709628069645
transpilation step
0.0043907237683181435
Sign
0.004307441722258822
plausible deniability
0.004300747971091726
ECC Signing
0.004289812797136338
Box.unbox(encryptedData
0.00428359103100159
SecretBox
0.004279723437552975
BoxPublicKey
0.004245498318106745
primary language
0.004204952143917641
expectation
0.004200744864654264
issue
0.004199651328839413
Hash.data(Buffer.from(msg))).hash
0.004194971253501226
b_public_data
0.004164166875942925
Box.sharedKey(keyPairB.b_public_key
0.0041609079877727
Box.sharedKey(remotePub
0.004157248806785804
b_secret_data
0.0041378228721578505
C/C++
0.004036722421726367
Prerequisites
0.00402951547757043
SecretBox.constants
0.004027348693821966
enhancements
0.004003256919810814
EMSCRIPTEN
0.004000037850047888
NONCE_LENGTH
0.003958355533091771
Elliptic Curve Cryptography
0.0039533451524574
b_secret_key
0.003929372294148717
easy
0.003912426848764381
Development
0.003889510136129688
parties
0.0038831802357878744
SecretBox

Secret Box
0.003864561196973048
Sign.sign
0.00386105047859277
BoxSecretKey
0.0038551673982560883
Hash

Methods

Hash.data(buf: Buffer
0.0038512060026027802
WebAssembly
0.003799461389346977
bugs
0.0037910997581718075
emscripten SDK
0.0037861419338377222
keyPairA
0.003782371679353089
package
0.0037742535163142778
Javascript interface
0.0037721204868657035
b_public_key
0.003767926151901543
Compilation
0.003752999362817081
install instructions
0.0036956994094099827
Contributors

Contributions
0.003676594962093725
s_public_data
0.0036685875793297925
Crypto.SecretBox.key
0.003651164312142941
Import
0.0036216058974606986
few modifications
0.0036150237789802295
mocha
0.003574114062131266
secure comms
0.003568932682552947
SecretBox.unbox

SecretBox.unbox(encryptedData: Buffer
0.0035660799606241755
Linux
0.003523794806848274
Box.keyPair
0.0035055817509222842
ring.push(keyPair.s_public_key
0.003447063628766469
SignPublicKey, sig: Signature
0.0034445170032205204
initial loading
0.003389682588067134
Promise<boolean>

Verifies message
0.0033698795132683975
Testing

Testing
0.00336741130366517
API

Random


Hash
0.0033521446451699787
s_secret_data
0.0033496182199556548
lib
0.003335537014315236
ring.push(secretKeyPair.s_public_key
0.0033325560444437373
bundle size
0.0032989337275272238
samples
0.0032815058047656184
base64 buffer inline
0.0032571652516688336
build/wasm-build.ts "emsdk" variable
0.0032323266011163093
i++
0.00323090168302587
tested implementation
0.0031104469892311946
signatures
0.0031062033657204306
SecretBox.key
0.0030233962444827737
boolean
0.0029724600845426885
GNU
0.002660544639626541
June
0.002431444506869861
