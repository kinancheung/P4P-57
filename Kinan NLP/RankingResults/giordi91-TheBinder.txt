learning project
0.03289096453006306
#
0.02762857354369619
different workflow
0.02525752883301941
lot
0.022182447546422093
mind
0.01859911072690708
https://craftinginterpreters.com/ book
0.018307621965356274
WASM
0.017952601202320766
scripting language
0.016666698359142876
code
0.016048343720781757
C++
0.015750926354670562
emscripten repository
0.015071713552557587
./emsdk install
0.015068522606820848
Windows Terminal
0.014831648996914824
CI
0.014067582249804936
monobuild
0.013937767664300833
CMake
0.013578381855252302
folder
0.01334696802655629
point
0.013336479133591697
compiler
0.012442047953393988
customBuild folder
0.011937415326129122
few goals
0.011867866873535004
puristic reason
0.011731801404026873
build-win.bat file
0.011652121198580289
cmake
0.01149227616220002
vm" part
0.01073224602537993
activate
0.010423162265450476
cleanup
0.009753353763162245
cross
0.00974280165776676
mono build setup
0.009701994631847812
new tools
0.00943216382855374
VIM
0.00942754517979436
browser
0.00936444223283982
refactor
0.009318843111038703
Clang
0.009273125309042325
bad things
0.0088025444920825
RemedyBG
0.00861158183789297
main development
0.008443509177439884
control
0.008409314839419212
multi pass
0.008386146580628728
build-windowsbuild-unix
0.008385142338624058
worlflow
0.008341581319155128
unhandled allocations
0.008205215956854453
unix
source
0.008199299733629171
backend
0.008190105944367927
different targets
0.008081190914762313
cd
0.008078998353464891
gameplay
0.008004070404441557
fro example memory allocations
0.007984850013113663
room
0.00793509103895817
PRs
0.007909057913728696
deallocations
0.007899301521308652
Mono
0.007865109560014303
evey aspect
0.007817260466424477
initial attempt
0.0077390657360641235
proper planning
0.007733920112636153
simple bat files
0.007719705943308487
useful stuff
0.007686715513621847
shot
0.007683374017882759
mkdir
0.007654810714089163
easiest thing
0.007636919276605715
sense
0.007608355961249094
memory patterns
0.007557716108694914
case
0.007522426866172478
compile times
0.00751516477678629
emsdk
0.00747785948780236
Visual Studio
0.007397053637011466
ownership
0.007354362624127044
Java
0.0073377707149216145
corners
0.007293471874764613
text

Goals
0.007261232037695795
projects
0.007172671087556831
production
0.007159882088626076
sharp edges
0.007140972455510291
custom build script
0.0070957989829380464
customBuild/build-js.bat
0.007023825944652289
first step
0.007009010548004959
latest sdk
0.006941919196116648
Github actions
0.006877735156041293
git
0.006868131450075919
legacyAST
0.006836519639969981
look
0.006766162029496829
standard
0.006703773174088707
shell
0.006684842258446465
parts
0.006684053797570552
c++
0.006673002542865469
native execution
0.006667244510650155
several options
0.006569406764089841
correct allocation strategy
0.00655768280051371
STL
0.006519827471483301
cleaner and faster part
0.006489327479955883
dependencies
0.006481700496281888
own scripts
0.0064530726000761795
game engine
0.006440397110117275
em++
0.006385519690192729
Virtual Machine part
0.006251048078862077
time
0.006027917743222768
https://giordi91.github.io/pages/bind.html
0.005848067006955257
environment
0.005838051922970106
result
0.005816197201297339
much work
0.0057760754250668995
blog
0.0055038565735778715
js app
0.005352799370141133
Master
0.005213585684086255
version
0.0051343784683776554
built files
0.004489157649455961
