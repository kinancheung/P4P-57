kaldi-chain.a
0.03827414411543443
hao
0.03141624606962976
return resample(msg.data.buffer
0.022602095084818054
response.value = value
0.020254848869311486
HTML
0.018298839909086338
JS
0.017662958918330824
async function
0.017586772890838452
clapack-wasm
0.017418468009811536
const { command
0.015577847472287605
FS
0.014132000411709858
-Wlinkflags]
em++
0.013894647202896574
end
0.01323768002471685
unsupported linker flag
0.013027830792296271
const response
0.012462776033458174
const content
0.01233663186468222
resampleJS
0.012161178857487387
dynamic library libfstfar.so
0.011227916504199503
em++: warning
0.011033237123728562
-rpath
0.009100249111771812
thisModule
0.008500108464386733
helper
0.008409157413581642
content.name
0.008252815646137173
_
0.007628217364862599
new kaldiModule
0.0074854488455182305
function(result
0.007299839135002452
/util
0.007276446761028205
var thisresampleMod
0.007250077140394421
resampleJS.then
0.007249762327666903
Author
0.007199083697034877
postMessage(response
0.007131940589783147
HEAD -> master
0.007107611735683536
args.reduce((wasmArgs
0.006985407055643605
https
0.0069853050647628945
kaldiJS.then kaldiModule
0.006984098377770954
//-----add
0.006886823561992253
-mavx  -msimd128"
LDFLAGS="-O0 -s ERROR_ON_UNDEFINED_SYMBOLS=0
0.006876060403050525
undefined symbol
0.006708653572932262
arg
0.006699639475889645
warning
0.006617215210661541
static object file
0.006450417923276241
model
0.006378259824115037
Building CLAPACK
0.006113959638958352
PROGRAM
0.005818001876038786
---begin
var thisModule
0.005795271937014224
wasmArgs.push_back(arg
0.005722820999557174
top-level compiled C/C++ code
0.005654201518573077
StringList
0.005555740601367754
parser = new KaldiConfigParser(kaldiModule
0.005529820745070248
WASM=1 -s MODULARIZE=1 -s ENVIRONMENT=worker
0.005497543930579131
args
0.0054317948912150854
modelName
0.005378928390058677
kaldi
0.005372481193728169
kaldi.mk
0.005221461411586035
cd dummy_serv && node server.js) & webpack-dev-server --open",



"scripts
0.005215645895248885
MAIN
0.005117154671107911
depend
#emmake
0.004915476226527747
resampleMod.then
0.0046843087872768035
FITNESS
0.004641829927554561
await
0.004580227816985109
result
0.004570625913105309
MERCHANTABILITY
0.004507850390444318
emulation
0.004485259767188003
workerWrapper.js:35
0.004463211844328472
lib
0.004425262201925695
HU Mathieu
0.004419792940749214
tools
0.004399839168849447
/ivector/kaldi-ivector.a ../nnet3/kaldi-nnet3.a
0.004392453028643918
echo
0.004389587664285898
writeToFileSystem(thisModule
0.004376073456666078
wasmArgs
0.00437061952184423
CLAPACKinstall.sh
0.004361549895743706
-mavx  -msimd128 -s EXPORTED_FUNCTIONS=[_popen,_main]  $EM_OPTS    online2-tcp-nnet3-decode-faster-reorganized.o ../online2/kaldi-online2.a
0.004345162802528384
https://github.com/kaldi-asr/kaldi
0.004312674133000493
Worker.handleMessage
0.004308291649865224
form
0.004299312659180752
libfst.a
0.00426624480768744
response.ok
0.004208816418485188
writeToFileSystem(kaldiModule
0.004199676859426309
/kaldi
0.004199328708559218
<mathieu.hu@inria.fr>
Date
0.004180064785476758
localhost
0.004130165091440943
thisresampleMod.init
0.00408051706291418
host
0.0040801132157438445
---begin
  await  kaldiModule.then
0.004059788174092063
true,
    proxy
0.004008329321536751
Emscripten fileSystem
0.0039977958636734905
kaldiJS
0.003952905793336369
-shared
0.003945415117935948
./install_kaldi.sh
0.003940874361110658
existing build systems
0.003940370632636843
LAPACK_DIR
CXXFLAGS="-O0 -U
0.0038740588572385975
PARTICULAR PURPOSE
0.003872801640805658
Xiang Li
0.0038700216194286806
Merge
0.0038594678172720253
lapack.a /opt/emscripten/kaldi-wasm/clapack-wasm/CLAPACK-3.2.1/libcblaswr.a /opt/emscripten/kaldi-wasm/clapack-wasm/CBLAS/lib
0.0038313873289652156
C
0.003810402122763846
frame range
0.0038095216556456356
unzipped.forEach
0.0037995881310258304
O0
0.003773457541452018
Copyright
0.0037712832561167496
cp openfst-1.6.7.tar.gz
0.003757748654061823
O1
0.003749807404304967
git clone
0.0037409019274925633
unzipped.file(file
0.0037071011516853283
-O3
0.003706239175230347
warranty
0.003704850966283915
devServer
0.0036737927163840722
-O0
0.0036723699712233604
thisresampleMod.terminate
0.003655445318845754
msg
0.0036415856170849232
eval
0.0036261412689399
thisModule.FS.cwd
0.003624841250148049
TypeError
0.003624531716057218
close
0.00361254883114427
kaldiModule.FS.cwd
0.0035981720284541203
property mkdir
0.0035931602475584683
node server.js
0.0035847710417545673
fix bug
0.003576409786343818
msg.data
0.003573075108856718
//resampleMod.terminate
0.0035713258489961115
onmessage
0.0035512733775506806
asrWorker.js   

Error
0.003542354655877842
s:-lpthread::g
0.003534350984862717
hack
0.0035320258587731154
s:-pthread::g
0.003530685584233119
thisresampleMod.reset
0.003528659627915081
>
0.003470411238486083
//resampleMod.reset
0.0034550098961660556
SIDE_MODULE setting
0.0034323922223815006
undefineERROR_ON_UNDEFINED_SYMBOLS
0.0034273418182730166
MIT license
0.0034115970315395884
helper[command](msg
0.003401889551473628
online spetral kernels
0.0033763468072102974
prepare_kaldi_wasm.sh
0.003365239968486554
npm
0.003345998657436269
cd dummy_serv
0.003276356455256664
s:-O1:-O0:g
0.003263839196292432
targets
0.003252940627238565
popen undefine -s ERROR_ON_UNDEFINED_SYMBOLS=0
0.0032269245750141846
--open
0.0032154566323843482
free and open source software
0.00320359858365694
presets
0.003172865975774878
directory
0.003171644996386046
last 2 Firefox versions"
        }
      ],
      "@babel/preset-react"
    ],
    "plugins
0.0031635451359583473
webpack.config.js

module.exports
0.0031429578668201825
lapack.a
0.003142653337176263
-soname
0.003142025651055703
@babel/preset-env
0.0031366262455801196
Date
0.0031256022892247664
Creating WASM module ------------
warning
0.0030985843842986907
EXTRA_EXPORTED_RUNTIME_METHODS="[ccall
0.0030535206108410987
outputInputSampleRateRatio
0.0030513363995570393
onRuntimeInitialized
helperasync
0.003049737852427575
response.value
0.0030421189222118302
/opt/emscripten/kaldi-wasm/kaldi/tools
0.003008074107385886
js -O3-O0

build_other_wasm.sh
0.0029955688391446536
\
     -s EXPORT_NAME=resampleTo16bint \
     --post-js audio-resampler/em_src/resampleTo16bint_post.js \
     -I audio-resampler/src -o src/computations
0.002994893641124338
Merge branch dev/update_kaldi
0.002992291718912854
cd ./kaldi/tools
emmake
0.002973441704594089
-O0-s ERROR_ON_UNDEFINED_SYMBOLS=0
0.00297324061052014
CFLAGS="-O3" CXXFLAGS="-O3 -s USE_ZLIB=1" LDFLAGS=-O3
0.0029721372895072885
UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
0.002966040448742601
master

    Update kaldi
0.002965483339524063
resampleMod.init
0.002866971579205327
target
0.0028665428600863343
EXPORTED_FUNCTIONS=[_main
0.002836161837757441
merge request kaldi.web/kaldi-wasm!19



emcc --version
emcc
0.0028039051992055503
cd kaldi/src
CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS" emconfigure
0.002729390309000581
transform-async-functions"
    ]
}

node

npm install
0.0027089070894067823
--use-cuda
0.002702086948343551
localhostserverip

vim package.json

"scripts
0.0026791348753159197
--with-pic
0.00267717201933232
lib/libfst.a /opt/emscripten/kaldi-wasm/clapack-wasm/CLAPACK-3.2.1
0.002633608092237931
Google Chrome.app/Contents/MacOS
0.00260219706785601
dummy_serv/public

kaldi-wasm/dummy_serv/public/english_small.zip
english_small.zip
0.0025330739691814667
Chrome --js-flags="--experimental-wasm-simd
0.002479148946877033
OPENFST_CONFIGURE
0.0024025173491925003
libf2c.a
0.0023499695842801706
chrome
0.00224991498535598
