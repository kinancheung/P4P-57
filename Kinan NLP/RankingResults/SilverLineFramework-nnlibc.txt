Run Wasm output
0.04433733119393913
xnet_add(mynet
0.029907250836901926
GSL library
0.02840401639614419
MLP
Epoch 0 Loss
0.024950565545275347
gsl_matrix
0.02354868760302552
first hidden layer
0.02179541594282169
rng
0.020287467480764772
np2dat.py file
0.019286595196933914
int main
0.01858588411500171
shape
0.01811503163445857
=
0.017776993334743533
models directory
0.017173945058435443
Linear* lin_layer1 = linear_init(784,512,0
0.016115777484256973
training and testing data
0.015692121788298312
gsl-2.7.1
0.0147840828177756
Output.wasm
0.01456705360572257
nnlibc
0.014191381562481517
run


  Terminal
0.013669968562805427
mynet
0.01310561118072414
nnlibc

Neural Network
0.01266124493447702
steps
0.012633673323219212
library
0.012233475968941828
XOR Experiment
0.012194632162789524
new iteration
0.011795763378532394
Layer
0.01176125900150001
forward pass
0.011406946097581654
network
0.011361639514067204
wrapper
0.010971574886850377
contents
0.010957251832369811
hidden layers
0.010772924755854783
SilverLineFramework Linux Runtime
0.010714484232700317
following commands
0.010557994282706136
WASM executables
0.010458273508423602
example
0.01025974833943732
x_train.dat
0.009978887812980545
matrix and vector operations
0.009792269310214034
playground.c
  Compile
0.009534605380138849
Pytorch-like neural network library
0.009412570736449093
Setup
0.008091036493349335
#
0.008061333265810128
net_forward(input
0.007903719737595507
syntax
0.007645979004779701
Numpy
0.007639091433847221
sh
0.007497117562994438
lin_layer2
0.007287160171565318
matrix.c
0.00720905186308966
Sample examples
0.007179600148837925
act1
0.0071339475880753634
vectors
0.007076874137823578
net_backward(desired
0.006997098544424215
https://get.wasmer.io
0.006881920757866745
Gradients
0.006872095183368124
lin_layer3
0.006838021489927942
epochs
0.006778864769854678
linear_init(512,512,2
0.006695053690434907
weights
0.006667339288690218
install
0.006587625715112996
WASM

Install Emscripten
0.006584372000204145
neurons
0.006473558000253547
epoch < num_epochs
0.006429330555653437
net_zero_grad(mynet
0.0063963697477018725
train_len
0.006373749092263893
gcc
0.0063670167338944475
loop
0.006332699246212896
epoch++
0.006330492748258939
inputs
0.006324748162053225
Activation* act2 = Act_init("sigmoid
0.006322336022129996
mnist.c
0.006315127634675674
n matrices
0.006306437558016054
WebAssembly
0.0063032116531009305
C.
0.006264105762761759
load_data("data/mnist_mini
0.0062542561358786735
gsl_rng_default
0.006216584053260429
.c
0.006215166751926217
gsl_rng_env_setup
0.006203415526970887
.dat files
0.006200466988362522
dir
0.006192107773204636
i++
0.006162907326545364
sigmoid activation
0.006151910077722552
image
0.0061179876551788175
Run

  python3 libsilverline
0.00609620794922986
net_step(mynet
0.006071615822591401
Wasmer

  Install Wasmer
0.00602087104575307
//Note
0.006001753564085422
Model Examples
0.005936053722462126
Activation
0.005896309091103542
path
0.005852156797953186
Wasmer runtime
0.00583154434741931
Xnet* mynet = Xnet_init(3
0.005808363331851944
return
0.005703691285354658
Open 4 terminal windows
0.005667076701865197
Current Stable Version
0.005660383730012361
data/mnist_mini/x_train.npy
0.005642580502450516
GNU Scientific Library
0.005598951106253618
load_data() function
0.00550928725920904
gsl_rng_type * T
0.0054042343471375496
model
0.005358448838405245
done.\n
0.005355973965397564
MQTT

  mosquitto

  Terminal
0.005180081315724925
GSL Random Number Generator

Referece
0.005078420387568063
C
0.004633583795783787
Accuracy Percentage
0.004056722238964734
