out
0.042018702432026704
v8
0.038363491344107825
browsers
0.037773093126946974
x64.release/d8 --no-wasm-tier
0.0363976505340585
WebAssembly
0.03594365545436556
liftoff compiler
0.03346718953589008
browser
0.03310584163820541
slp-vectorize
0.03237355503925343
d8
0.03227492776139768
various implementations
0.031907969011711126
halfsample.c
0.03019862100237996
explicit SIMD instructions
0.029638895054260306
multiple data elements
0.028677219316738237
latest Xcode command line tools
0.028488036264248468
support
0.02405579992613653
various half-sampling implementations
0.023770790698389763
benchmarks
0.023191175309544326
uint64_t types
0.023100764232179504
folder
0.021274927753373196
test.js
0.020798207361955662
page
0.020711907976735132
server
0.020484449663866446
sort
0.020089561415858534
-fno
0.019671843193735494
target
0.01942571143696011
auto-vectorization
0.019379840981388032
general ideas
0.01880395160682135
html
0.018265334546635863
uint8_t data
0.01793580870744529
test wasm implementation
0.01792823468857644
handy references
0.017637678954369868
path
0.017294427401584624
MacOS
0.01697644810401453
v7.7 branch
0.016867140441039184
Chrome Canary
0.01608350952516977
regular uint32_t or uint64_t elements
0.015926378233252384
latest master build
0.01576152281163497
code
0.015470248548146914
-O3
0.015235859846688687
latest-upstream
0.015025431169753625
optional WebAssembly SIMD implementation
0.01400274969153178
native build
0.013943538838026672
--experimental-wasm-simd test.js
0.01025790941959502
