Swift - Encoder
0.050196875060629004
decoder implementations
0.04785571609906388
image
0.03649808601606454
BlurHash
0.028600512227098158
images
0.023962260252435863
X and Y components
0.022532671181472418
pure PHP
0.021979721744165837
placeholders
0.02042992895309779
algorithm description
0.013864300327097515
data
0.013060887095010926
encoder
0.012992440273022878
portable C code
0.01295021339296737
implementations
0.012866325485239648
Go
0.012047070664175775
short string
0.010732055720649936
Android
0.010665865258680542
code
0.009717299650560209
version
0.009553897687940056
colour averages
0.009354994900535442
number
0.009343818227847706
example
0.00930549460426946
project
0.008680449750022277
punch parameter
0.008314112929392369
placeholder
0.008074228772772054
pure Haskell
0.0079023366563858
UI thread
0.00781425497902098
Swift
0.007733967155067187
C - An encoder implementation
0.0074832364862038115
BlurHashes
0.0072624259276098035
Java
0.007224314298955543
complicated DCT stuff
0.007220499963310757
Mastodon
0.00721783139334
network
0.0071525719988176075
search results
0.007058205373638601
Python
0.007020630252578014
JSON object
0.006989386185440554
efficient encoding
0.00697328364099898
Rust
0.00685720889798954
platform
0.00683320845661871
few other things
0.006748193878723652
instance
0.006532078064647224
different areas
0.006525014644211059
favourite language
0.006352809078770741
client
0.006313886206373353
normal, smaller values
0.00629256672406201
Python - Integration
0.006083707540171502
other basis representations
0.0058665073800473885
use cases
0.0058495890643376425
look
0.005847320671636083
output size
0.005842812455680234
shape
0.005729150236928298
base
0.005678117954199804
React Native
0.005629815295038641
many low-ASCII characters
0.005566273929511677
characters
0.00544030715249796
minimalism
0.005281026285966364
ImageView
0.004915767748307678
nice examples
0.004903853808899131
Glide
0.004730108809693247
iOS
0.004697646548397844
ReScript
0.004673099075893023
Elm
0.00467229262825419
Scala
0.00467096563820728
Decoder
0.0046207868844946555
support
0.004572613571210813
BuckleScript
0.004565981303236501
Kotlin
0.004532004845889889
choice
0.004490979696296975
more platforms
0.00443275788949041
HTML
0.004429561531473671
Blurhashes
0.004401854976231568
approximations
0.004394957673994523
Blurhash
0.0043731171761737
Clojure
0.004345904566812659
mobile clients
0.0043290156479976775
photo & video messages
0.004320710195478836
repos
0.004291420841181485
GitHub search
0.004281441675212008
web
0.004270503520137887
Piccasso
0.004270194401384863
spirit
0.004218683728204922
luck
0.004143901667079574
WebAssembly
0.004099442630053168
blurhash
0.004081513373041961
top edge
0.004070432257800302
Ruby
0.0040657498228025635
conduct
0.004035148411323979
aspect ratio
0.003975050503852669
shells
0.00395913911858424
contrast
0.003955875314863648
simple - less than two hundred lines
0.0039251965935351825
effect
0.003920790001171239
JavaScript - Tiny optimized decoder implementation JS
0.003914337742243848
contributions
0.0038615807626999157
simpler
option
0.003856136056715947
larger library
0.0038516502462558923
issue tracker
0.003818170035317185
Signal - Signal Private Messenger
0.0038180733585151086
service
0.003808310924931186
URL
0.003807293244540773
corner
0.003793994097431409
advanced features
0.0037815491591349213
same input
0.0037792387685393206
hiding media
0.0037656306529948065
issues
0.0037595595705244606
native Rust and WebAssembly packages
0.0037505244131433397
backend
0.003725575645937601
course
0.003711611225863011
expensive blurs
0.0036736337454095
parameters
0.003632829941139297
field
0.00359872826929478
performance
0.0035968151138118646
projects
0.003577320496685905
test app
0.0035702275847906777
borders
0.0035425248360889247
Armedi - ReScript (BuckleScript) implementation
0.003539025341359336
own repo
0.0035147903976829307
thumbnails
0.0035060241633713012
taste
0.0034766371686521685
chat conversations
0.003461062015605458
Technically
0.0034601976832349507
fine detail
0.003433804752267602
list
0.0034264154737987836
help
0.003416226904513476
tinted drop shadows
0.0033919570902117284
summary
0.0033759070945109143
trick
0.0033421746093280393
more information
0.0033340574198441105
Implementations
0.0033304131967363364
time
0.0033098437845637922
DC component
0.0032939596246194217
pull request
0.0032890381876029343
compact representation
0.0032823411409655797
Belvi Nosakhare - Kotlin extensions
0.003253212589068389
gory technical details
0.0032490678154155324
copy-paste
0.0032186295474527864
problems
0.003109254618603241
action
0.0030903844227673826
Atte Lautanala - Python integration


Lorenz Diener - Pure Python implementation
0.0030867495109273423
full Unicode character
0.0030821427134674188
OS capabilities
0.003061987594354571
Fotis Papadogeorgopoulos - Rust
0.0030562146252415567
big win
0.003006664750161061
circles
0.0029494919093783043
Olli Mahlamki - TypeScript decoder
0.0029004103760561697
empty boxes
0.002892171163140402
Mykhailo Shchurov - Kotlin decoder implementation


Hang Duy Khiem - Android demo
0.002890767552516974
much success
0.0028555357724330886
designed screen
0.002835319024363224
Fourier-Bessel base
0.0028137740205853336
database engineer
0.0027689675563654847
Authors

Dag gren - Original algorithm design
0.0027446662717330005
designer
0.0027409973471385685
Hendrik Schnepel - Java
0.00267417029829659
