WAIT
0.09747980953550905
WebAssembly
0.06445405814318608
resource-constrained IoT devices
0.033502580792454426
MCU
0.02997671908731388
Compile
0.029483057432908577
Avrora simulation framework
0.02901477717092703
python3.7
0.023310901699503322
instance.py
0.023160487583997667
.c
0.023100881800181425
libs folder
0.023047317442619692
install wasmer
0.022833791122232654
pip3
0.02229209499815475
*
0.02224381907787878
AVR
0.019356634266477466
root
0.01896140790632371
rm
0.018850841830026173
LTS
0.017725560641713725
Ubuntu
0.016987648461215487
easy build
0.01668566498767004
mkdir build&&cd
0.016476983579435157
test
0.016443874281717452
WASI SDK
0.015468953719619148
simulated execution environment
0.015218203714691882
cmake
0.014972213884009251
several approaches
0.014742809267282159
Install dependencies
0.014738280147953633
Optional
0.014686539056784357
memory usage
0.014674250172465448
repository
0.014294189212214434
install git build-essential wget curl
0.014188233187775349
example folder
0.014183386946955737
MobiSys
0.013956953605316477
TODOs

Code comments
0.013882103835883154
first work
0.013869387181791178
Modifiy
0.013691034826897376
more details
0.013583767723980004
src
Tree layout
0.013291740138910076
avrora output
0.013286476636625709
Time
0.01315701196248947
device-cloud integrated applications
0.01304507319904122
https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-12/wasi-sdk-12.0-linux.tar.gz
tar xvf wasi-sdk-12.0-linux.tar.gz 

The WASI SDK
0.012958008972865863
docker env
0.012926725456286889
unzip gcc-multilib xxd cmake wabt
0.01275739382697909
folder
Compiling WASM
0.012740481839996352
helloworld
0.01264150388280394
modifications
0.012271412315655058
ACM MobiSys22
0.012077757024753784
native benchmark
Complete gitignore
wasmer test
0.012071763274300144
readme
0.012067100727144231
code
0.011952461807683376
apt install gcc-avr avr-libc avrdude
0.011861313729436846
src
0.00935455687996158
