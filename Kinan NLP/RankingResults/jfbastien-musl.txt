.wasm module
0.0348751800439369
libc functions
0.029840979721650136
JavaScript
0.02571963420843838
V8 implementation
0.025302147279320848
heap
0.0220438842232372
musl libc
0.02128192973301095
musl
0.017951926210711427
musls code
0.01789506064762944
exported function
0.016168221517193382
wasm.js
0.01595964643191568
FFI
0.01581948594716014
limited dynamic linking

A musl experiment
0.01510183358879809
convenience API
0.01506224928136702
modules
0.013299531440538423
dlsym / dlclose
0.011822897834791095
WebAssembly waterfall
0.011775570484471832
memory segments
0.011491731230184637
toolchain
0.010434787253012409
first .wasm file
0.010250807795485655
developers
0.01007168836021424
APIs
0.009880848103090607
basic memory manager
0.009834766581346296
experimental WebAssembly C library
0.009803601078192385
bugs
0.009729955240626498
musl.wasm
0.009621162727544949
.wasm files
0.00954220303164819
WebAssemblys
design
0.00931746615990225
goal
0.008673507706256378
dlcall
0.008499743269499817
waterfall
0.008435803531517403
functionality
0.00826188096097793
dlerror
0.008165445896641447
Emscriptens musl port
0.007604935897780809
repository
0.00755137206135985
Loads
0.007538927371845437
typedef void
0.007451730000476382
user
stacks
0.007200057509090435
MVP
0.007164860327941996
different parts
0.007105264007130176
WebAssembly experiment
0.0068245273470455775
Interesting applications
0.006801744345104153
time
0.006510782208874283
good thing
0.0065059764043745565
world_type world
0.006410989951379083
example
0.006022144481933631
program
0.006006392704539016
clang
0.005785534622902593
symbol
0.005291259923633672
ABI
0.00521501652819774
NaCl
0.005186530864549942
experience
0.004941800979040702
overflow
0.004926140004895751
subset
0.004860465668308832
Exports
0.004793212466781127
Developers
0.004785848500059731
equivalent
0.004734625055990906
convention
0.0047034143872796835
handles
0.004668573895014847
handle = dlopen("dlworld.wasm
0.004649372795056778
other
security issues
0.004643907599734914
-ffunction-sections
and -fdata-sections
0.00461933862120449
control
0.004576724219844757
loop
0.004563241180833224
stub
0.0045469293424087115
modifications
0.0045211416808282525
success
0.004511495677050555
caching
0.0044973453129395135
hacked-up
libc.py script
0.00445184907576723
compilers part
0.004416363996342073
particular
0.004408301665637118
gymnastics
0.004389235786028529
private closure
0.004376086952875201
good isolation properties
0.004355882325033366
Things
0.004343845929313499
trampoline
0.0043362358602887
Compile
0.004329142282694221
same table
0.0042782233617139525
programs
0.004247799493060007
call_import
0.004223706330178221
ArrayBuffer
0.004197496672861406
Indirect calls
0.004166879851103039
sync
0.004125906509072913
signature
0.004123064542475014
world_type
0.004116262648161499
stack positioning
0.004114219809505786
current one
0.0041139559348585455
dlclose(handle
0.004104655665921401
puts(err
0.004091897427961654
abort
0.00409147488552873
changes
0.0040900779879972215
sharing heaps
0.00408356609336878
developer
0.0040182997959740605
puts("dlsym
0.0040133113318676665
section
0.003996093766835095
load failures
0.003991224929898014
default pattern
0.003962102005597593
thread-local storage allocation
0.003935854807084761
return
0.003895396651336462
un-met imports
0.0038891340079167504
err
0.00388234914596076
imports
0.00386604007511191
failure
0.003848196032560652
arch/wasm32 directory
0.003847608147739429
basic experiments
0.0038461570102399766
RTLD_NOW
0.0038355250163985884
dynamic loading mechanism
0.003831965106692415
embedder
0.003811830683979032
compilation / execution
0.00381133056189066
limited" nature
0.0037998640338548226
future
0.003779629490282305
ground
0.0037778010436499794
same memory location
0.003753573206488083
runtime memory management
0.0037519755241379486
.s assembly file
0.003747138037983118
approach
0.003732646174511845
foo.c
0.0037224540643984805
command-line
0.0036956063823607634
AST references
0.003690609831996896
same address space
0.0036418036782098354
archived binaries
0.0036358400153379154
puts("World
0.0036319221736950636
non-relocatable segments
0.0036047386901733192
binary format
0.003590533591797759
int main
0.003567442916826301
builds
0.003558322515123293
fancy
lazy-loading
0.0035453465803473314
green build
0.0035411558068556047
unexpected usage
0.0035372581433711662
shortcomings
0.0035282549343179544
Miscellaneous

Dynamic linking
0.003525165364934567
lazy-load and lazy-compile each function
0.0035146415777092222
stdio.h>
  void world
0.0034954529577934405
prototype
0.0034742318839866447
last known good revision
0.003467383225735826
dlfcn.h
0.003463829205979798
s2wasm
0.0034603658469754828
syscalls
0.0034361760070720547
const char
0.0034241614839686484
copy
0.00341449085711482
dlhello.c
0.003397692453623582
dynamic linker / loader
0.0033768954721717214
Linux copy_from_user / copy_to_user functions
0.0033701571430154497
start
0.0033228133615620745
_WASMEXP_ instance
0.0033200765422365603
exports
0.0033116751744280155
WebAssembly s-expression
0.0032980233732789518
foo.wasm
0.0032908038367537333
puts("dlopen
0.0032876786054687824
static linking
0.0032836771297364703
WebAssembly
objects capabilities
0.0032315828718663224
dlhello.wast
  s2wasm dlworld.s
0.003208991803654541
dlworld.wast
  sexpr-wasm dlhello.wast -o dlhello.wasm
  sexpr-wasm dlworld.wast
0.003161225250691171
Pre
0.00313978001977612
hack
0.0030844056512690406
cross-module function pointers
0.003077899735496821
patches
0.0030515523718915184
wasi-sysroot
0.0029709521330407683
tracking dlclose
0.0027885501924718803
