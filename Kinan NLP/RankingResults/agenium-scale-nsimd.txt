NSIMD
0.03126631781496393
vectorization library
0.014674319324464842
nsconfig
0.012711952543553368
header files
0.01183916830222575
others
0.011770938412421697
compiler
0.011749271297429139
fma intrinsics
0.011577481530974279
Software
0.01102457995350165
code
0.010334554972933886
C++ APIs
0.009276828554074027
TET1D module
0.008448150021916099
support
0.007929740911717803
MSVC
0.007778479192646019
compilers
0.007585056113834672
SOFTWARE
0.007516961140393334
C++98
0.007274395995167966
following
0.007094471646137824
Linux
0.007066725125817372
CMake
0.007039623124317909
Windows
0.006705974888767384
GCC
0.006699352962184365
C API
0.006687603554693392
portable compilation flags
0.006492902499845671
default
0.006131487924608111
time
0.006050320386651065
SVE
0.005728091351115684
nvcc
0.0057115470866385834
targeted SIMD extension
0.005641168475482038
Python internals
0.0054304590595845815
XL C/C++
0.005401225823486366
license
0.005317251904053454
SSE2
0.005273662010905355
-
0.005267936752368487
C89
0.005179223556235191
specific version
0.005003697402248254
modules
0.004847378178685044
NEON128
0.004813546419176001
SSE42, AVX
0.0047927532743480905
SPMD
0.004769907514399186
AVX2
0.004731311588110945
aarch64
0.004609069652122209
bits SIMD emulation
0.004605712321207533
build system
0.0045707074514534495
scalar functions
0.004547869305123121
tests
0.004534523308335665
cuda-host-c++
0.004516552833653912
architectures
0.004508818291337828
Clang
0.00443918844047298
armhf
0.0043091648878482896
underlying SIMD vector length
0.0043058022358755665
copies
0.004226817609484763
C++11
0.0040848822898149366
user
0.004072195610655727
_Generic keyword
0.004051138967508113
clang-format
0.003957076847332104
APIs
0.003909020403200714
GPUs
0.0038472086275776066
Intel oneAPI
0.003643915667603503
More details
0.0036351993667825037
variable VAR
0.0035756543256795603
several
versions
0.003504108015584924
Nsconfig
0.0034901901884631845
direct
type definitions
0.0034864960918364308
VMX
0.0034820080244208755
AARCH64
0.0033933988724998685
command
0.0032907531975717103
bit vectors
0.0031860722338837356
derivative works
0.003172589047979871
several programming paradigms
0.003165967530538552
armclang
0.0031539809712318348
armel
0.003140336969717001
Visual Studio
0.003134555712126376
missing numbers
0.0031195026048042966
Linux

bash scripts
0.0031102075127851284
CUDA
0.003103182408100069
case
0.0030767798517251227
SSE42
0.003068387168029379
traditionnal
                                          compiler
                    fcc_clang_mode
0.003005306317932749
CONTRACT
0.0029979679378010684
PARTICULAR PURPOSE
0.002974650319023369
compilers
                    fcc_trad_mode
                              Fujitsu compiler
0.002967272697783476
MERCHANTABILITY
0.002935679926454315
writing generic code
0.0029159622033859667
FITNESS
0.002913651361050972
DAMAGES
0.0029110337396599743
COMPONENTS
0.002875741152347923
VERSION
0.0028634403015822545
Y Y Y
CPU
0.0028592251267935947
NVIDIA
0.002845027116132436
SIMD registers
0.0028285295339783344
CONNECTION
0.002813589615800528
software
0.002805538283644004
multiplication
0.002800854201988585
LIABLE
0.0028005551080834768
SIMD_EXT
0.0027909987323643443
KIND
0.0027791160737703686
EVENT
0.0027704270293228807
WARRANTIES
0.0027688358842999435
LIABILITY
0.0027663173310998007
nsimd::pack
0.002760823655734855
USE
0.0027556001784053152
nsconfig
(https://github.com/agenium-scale/nstools
0.002745960136523522
COMMAND
0.002743861587924704
course
0.0027429217911727126
code generation
0.002740168080076092
bits ISA
                    aarch64
0.0027332415184724086
path
0.0027283347033944675
person
0.0027199730036214734
copy
0.002693462834670195
EXPRESS OR
IMPLIED
0.0026687128506021687
AUTHORS OR COPYRIGHT HOLDERS
0.0026460493089198573
use
0.0026348920648362564
OTHER DEALINGS
0.0026312108614896046
C++20 API
0.002596857365911304
cmake
0.0025945399586506795
instance
0.0025924681541946294
WARRANTY
0.0025795385724315346
fact
0.0025643528157823017
Intel AVX2
find_package(NSIMD COMPONENTS sve
0.002561175753223507
tool
0.0025564194963198952
restriction
0.002551273965725555
second one
0.002550898697154223
data ion memory
0.002545581235619022
simd_ext1/
0.002538646869016348
mkdir
0.0025235479109319554
ARM
0.0025203822593207236
lot
0.002497674459469416
informations
0.002482619737940279
CPU/SIMD extensions
0.0024773556053743068
SIMD types
0.0024662440653718245
BUILD_SYSTEM
                  Supported BUILD_SYSTEM
0.002463511293186082
original sizeless
0.002442421608868017
charge
0.002432225703241128
comp1/
0.0024310518797721445
x86_64 host
0.0024279338424990074
egg
0.002415402445744532
FCC_trad_mode
                                          Fujitsu C
0.0023942327358854776
-Dsimd=neon128                               #
0.0023928355968748337
Intrinsics
0.0023653105506940193
bits memory indexing
                    wasm64
0.0023356719423562747
scripts directory
0.00232583149896602
maximum power
0.0023209522816648263
Boost Software License v1.0
0.0023191008270168427
above copyright notice
0.0023141002451827148
Makefile
translator
0.0023103946078697267
Architecture NSIMD core TET1D module SPMD module
CPU
0.002309330300934138
Expressions templates
0.0022964573811030476
gcc
0.0022411775232288834
SIMD
programming
0.0022204540895723827
NON
0.002149617176107262
combination
0.002134860055839869
processors
0.002121040699523488
AVX512_SKYLAKE
0.0020788119675986512
VSX
0.002067667233094561
LLVM compiler infrastructure
                    armclang  Arm suite
0.0020650530858090516
COMPILER
0.0020536070189658365
SVE2048
0.0020525713984197733
clang++
0.0020454758536219094
INFRINGEMENT
0.002042027204055588
hcc
0.0020078204319237685
AVX512_KNL
0.0019929587485840857
sizeless_struct
0.0019629039193020895
Use
0.0019601945936337504
CPU
0.001959781373927453
NVCC
0.0019450530013073214
HIPCC
0.0019251046285897124
cuda+gcc
0.0019178636101837654
Default
0.00191722334386073
C11
0.0019156817572243423
SVE1024
0.0019143961310517225
armclang++
0.0019108341536023647
SVE128, SVE256, SVE512
0.0019039369806728953
cuda+clang
0.00189625251020864
hipcc
0.0018858309513786573
overloads
0.001876439490787231
TORT
0.0018707642024934639
ROCM
0.0018509380244026066
tricks
0.0018498005962993684
operators
0.0018429056411104466
C++14
0.0018422483442363377
binaries
0.0018330222730885582
TITLE
0.0018326037090853843
cuda
0.0017970239153409886
FP16
0.001796663626482986
ARMClang
0.0017927521227509016
pairs
0.0017860253242602837
scalars
0.0017830359651016948
ACTION
0.001776717102904762
NSIMD_FP16
0.0017754252684366752
infinities
0.001773601487528571
simple
0.0017730771149388554
ARMv7
0.0017604937981510155
CLAIM
0.0017603420642465937
Paul Gannay
0.001754589980532604
users
0.0017472671069070913
test
0.0017452523493095488
concepts
0.0017401086144200354
NaNs
0.0017372602345734436
emcc
0.0017366052437115145
em++
0.00173306731613086
speed
0.0017318890849386296
rare input values
0.0017307606067657902
Emulate
0.0017242864076883932
intrinsic integer arithmetic
0.0017223635419393432
https://ispc.github.io/
0.001714622004277761
cuda+msvc
                              Nvidia CUDA C++ compiler
  -comp=COMMAND
0.0017145553332037118
ISPC
0.0017121530686187254
family
0.0017030464796016043
better error reporting
0.0017011791954575726
VSX + testing system
0.0016951934224005516
majority
0.0016928013445088326
find_package
0.0016900224643142405
slower but correct alternative
0.001684882829669214
addition
0.0016835110406457734
stores
0.0016788002915651213
Correctness
0.0016777001634670607
chips
0.001674008008347821
corner cases
0.0016681366649874405
install
0.0016544542537512204
cl              Microsoft Visual
0.0016528424937844474
view
0.001651365835302333
ABI
0.0016512493707110073
emulation
0.0016491766041671963
ICC
0.0016480440991230164
ARCHI
0.0016464741808402844
square root
0.001643760661767882
msvc
0.001641544546769331
NONINFRINGEMENT
0.0016370283329985144
rights
0.0016323395329331082
belief
0.0016317616644651492
limitation
0.001628063960227132
organization
0.001614961241086802
type
0.0016134302319362158
OPTIONS
0.0016098129006913004
shared memory
0.0016045446300960494
ppc64el
0.0016032526075275512
casting
0.0016029008158328201
good paradigm
0.0015932521964472162
oneapi
0.0015880454830767977
Philosophy
0.0015878620461471605
scripts\build.bat
0.001587060088412036
Erik Schnetter Fixes
0.001582845003646503
zeros
0.0015791846968122064
various vendors
0.0015791543990819272
SUITE
0.0015773215121895894
priority
0.0015714029242548987
way
0.0015608254766359022
approach
0.0015600143293498477
Lnac Bagnres Fixes
0.001555574147191486
accompanying documentation
0.001551726006211206
wrapping
0.0015493883300409363
integers
0.0015454346783862905
place
0.0015444705123877041
pair
0.0015398397216825938
targeted architecture
0.0015353601816366106
chaining operations
0.0015347626981992216
Charly Chevalier Benchmarking system
0.0015338923418168322
latter defaults
0.0015254741717061955
templated constants
0.0015211242159029138
Quentin Khan Soa/AoS loads
0.0015198695780089756
DIRECTORY
Configure project
0.001519199234221052
Binary compatibility
0.00151818597325873
installation
0.0015169079637183383
component
0.00151383443431362
several
flaws
0.0015132551917826564
same constraints
0.0015123065042051372
life
0.0015115566659593882
macros
0.0015039980721663776
example
0.0015018395217593378
many unwanted casts
0.0015015885112693462
Dependencies
0.0015009016765801908
own set
0.0015002310165262136
register
0.0014997126592361818
more efforts
0.0014992127873804171
parameter one
0.0014903114626620725
developer
0.0014896785522436307
common names
0.0014887563320913546
ninja file
0.0014872433176158649
Copyright
0.001486341580027998
form
0.001485490418335673
WebAssembly
0.0014824484017210754
common computation libraries
0.0014821953354788406
c
0.0014804548440241108
binfmt_misc
0.001479408834088877
weird loop
0.0014783731934151203
major number(s
0.0014756683226105351
thin layer
0.0014755777429996846
direction
0.0014753668120501722
machine-executable object code
0.0014745284876798597
tedious and
repetitive tasks
0.0014727026532278616
bits ISA
                    x86_64   Intel/AMD 64-bits ISA
                    armel
0.0014691477756668214
#
0.0014642920244630727
main contributor
0.0014622963624273265
O
0.0014620417851980026
Alan Kelly Arm NEON
0.0014596341298780534
feature
0.0014590060651229317
em++            Emscripten compilers
0.0014534157786107041
GNU Compiler Collection
                    clang
0.0014526759306075791
g++
0.0014509772530041584
ARMv5
0.0014496045436853875
only function calls
0.0014495879251432498
portable zero-cost abstraction
0.001446028349034415
expressions
0.001444113452155352
-ltf
0.0014404444317130186
possible otherwise
C99
0.0014403741588611037
cross-lane data transfer
0.0014345552781177401
many optimizations
0.001433649515773221
developers
0.0014323197788756068
TET1D module
Jean-Didier Pailleux Shuffles
0.0014255097023491547
quick tutorial
0.0014211399698181666
Raspberry Pi
0.0014172186014489402
-suite
      switch
0.0014168182521877202
TORT OR OTHERWISE,
ARISING
0.0014155879977981955
clang++        LLVM Compiler Infrastructure
                    emcc
0.001413582283391013
cd nsimd
$ python3 egg
0.0014134863438016265
syntax
0.0014121454655874833
vectorization
0.0014107739625431462
optimization penalty
0.001409872021182252
lots
0.00140982571733254
ARMv8
0.0014081806211999823
existing
ones
0.0014076782908083358
default
  -suite=SUITE
0.001402513370826795
inline optimization
pass
0.0014020137113949546
icc
0.001401192500541137
current help
0.0013984969167060123
verbose mode
0.0013978948543294726
richer API
0.0013977030306424395
guaranty
0.0013976168673673739
parameters
0.0013948035360028782
effort
0.001393816065884271
cd
0.0013930022178025013
inability
0.0013919105899478817
Single Program Multiple Data
0.0013902877855382215
https://visualstudio.microsoft.com/vs/community/
0.0013880013503163578
caution
0.0013848799099049158
Kenny Pou Fixed point module
Xavier Berault PowerPC VMX
0.001381806447326984
low development cost
0.001381770303184388
IEEE float16
0.001378445061037148
problem
0.0013770889198454347
bunch
0.0013769944514019335
standard
C/C++/Fortran compiler
0.0013737464292632733
entire statement
0.0013732061347582804
OUTPUT
0.0013730832114087685
project
0.0013707247779940423
persons
0.001354264206585915
official binary
0.0013471646407403445
doc/markdown/CONTRIBUTE.md
0.0013457981957241813
package manager
0.0013453748095098733
debugging
  -nodev          Build system
0.0013426724973264737
--help
0.0013368847419125687
permission notice
0.001332409638576268
Guillaume Quintin Maintainer
0.0013236774459456124
Permission
0.001321727687483874
testing
0.0013105019952982591
src folder
0.001304853431911569
source language processor
0.001295156161306895
rocm
0.0012904622379566557
different problems
0.001287314581643231
maintainer
0.0012868707100738477
list-vars  List project specific variables
  -oOUTPUT        Output
0.0012855425927613226
bin/nstest -j20

Cross compilation
0.0012705538314513347
ninja
$ ninja tests
0.001266611066785872
clang mode
                    emscripten
                              Emscripten suite
0.0012617712654565511
JS
                    icc       Intel C amd C++ compiler
                    rocm      Radeon Open Compute
0.0012555833107777286
nsconfig
  -DVAR=VALUE     Set value
0.0012499661905952767
bin/nsconfig .. -list-vars
Project variables list
0.0012386339916989001
simd_ext
0.0012356356679536675
| CUDA target arch flag(s
0.001148848904470351
SVE Y Y Y
IBM POWERPC VMX Y Y Y
IBM POWERPC VSX Y Y Y
NVIDIA CUDA N Y Y
AMD ROCm
0.0011254079121766638
N Y Y
0.0011087322001363984
KNLs Y Y Y
0.001082331421794613
Y Y Y
Intel AVX Y Y Y
0.0010516669574828273
Documentation
0.0009761603055594215
