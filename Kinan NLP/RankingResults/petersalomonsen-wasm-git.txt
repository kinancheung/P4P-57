browser
0.03668044243543846
github
0.026977841789514068
local git repository
0.026903926789196484
example
0.026197789044821927
libgit2
0.022490683118398466
lg = window.lg2
0.021900892549337622
pre built binaries
0.02075841822105674
const
0.018980714190488388
html
0.01871167713306306
examples
0.018386610380486054
proxy
0.016974185440878174
script>new Worker(yourworker.js)</script
0.016661086840329343
synchronous http requests
0.01659383184296625
webworker
0.01633953091822944
async wasm-git build
0.016051544996589485
var Module
0.015364745823516513
basic operations
0.013693611348548114
simple demo
0.012851518882293314
JavaScript implementation
0.012550137251135145
web_user/.gitconfig
0.012370763697000105
main thread
0.012023127448283596
await
0.011804064072587321
await callMain
0.011750378098241742
window.lg2ReadyPromise
0.011589478151641614
following
0.010858370833872278
CORS restrictions
0.009996713742319708
async function initApp
0.009936239838885119
commits
0.009689451076047585
FS.readdir(testrepo
0.00949158351175856
importScripts(https://unpkg.com/wasm-git@0.0.2/lg2.js
0.00932149614896841
window.lg2Ready
0.009188618450998604
WebAssembly
0.008764313404328102
Emscripten
0.008704723547030026
lang="en
0.008703815719889645
webassembly
0.0086801031866423
nodejs
0.008349120514160849
cloning
0.008255563608598783
Demo
0.008021900593970725
concept
0.008014580925578432
lg2 module
0.007916250565920852
GIT
0.007881398904641217
initialisation
0.00784851610667001
size
0.007779911580901152
index.html
0.007757188209581177
non-async builds
0.007750849820035062
edit files
0.007688681521847512
sources
0.007672969632462277
place
0.0075148300358847545
kubernetes
0.007455082156333754
reponsiveness
0.00739633960483125
Proxy
0.0073863526464563395
proof
0.007375851098444561
use
0.007282822110557827
method
0.007249007308084626
web UI
0.007196312678368522
promise
0.007194735011527412
compiled output
0.007094271811491346
Notice
0.0070516374695369895
HTML
0.00696205361451823
more details
0.006921635003681934
Note
0.006864298907829742
simple git server
0.006780846549104957
tag
0.006770705282611456
building
0.006733285140939592
githttpserver project
0.006581970808397263
Example WebWorker
0.006453426846021555
lg2.js
0.0064206695648472535
testing
0.006410622841025582
long running operations
0.006389330704419867
git interaction code
0.006338271161506369
worker
0.006280093576728285
direct calls
0.006278337651171249
https://unpkg.com/wasm-git@0.0.2/
0.006256190355182403
W
0.0062133738114791845
webworkers
0.006212966425768186
Browser
0.006212468908643378
npm package
0.006162820205626377
s
0.006156150235493093
lg.callMain([clone,`http://localhost:5000
0.006062843428826832
bundle
0.006006864842020888
emscriptenbuild
0.005977163395050621
https://github.com/emscripten-core/emscripten/pull/10669
0.005921044375890632
locateFile: function(s
0.0058976204568444235
cases
0.005882892592055968
pull requests
0.005797715185943182
emscriptenbuilds
0.005713167329024254
script src=/build/lg2.js></script>
  
    <script
0.005705275271680936
FS.writeFile(/home
0.005685229146285538
FS.readdir(made
0.005620617235186168
push
0.005578734677960978
default builds
0.0055596766426173495
NODEFS
0.005543886610335098
async versions
0.005521276695436775
torch2424
0.005402578845069419
body
0.005377116589932028
patches
0.005364169168907137
resolve(true
0.005333370597103439
master
0.005283890816864117
webserverwithgithubproxy.js
0.005253273148066522
webserver
0.005209961317914825
bundle.js></script
0.005203785028803647
new Promise((resolve
0.005093123769796865
resulting lg2.js / lg2.wasm
0.005075575325380185
user]\n +
                name = Test User\n +
                email
0.004684646387884205
full build and test pipeline
0.004683422716725875
Wasm
0.004643158767521141
const MEMFS = FS.filesystems
0.004441798199207728
