benchmark runner CLI tool
0.0301686148028094
benchmarks
0.02334792640557904
cargo run
0.020525213020987358
benchmark suite
0.019882506614143647
phase
0.019755015021742893
libwasmtime_bench_api.so
0.017034379565795343
CPU cycles
0.01597936510504469
Wasmtime
0.015368842826523614
measure
0.015264505766612348
feature branch
0.014616165300674064
Web browsers
0.01446872351234777
mdash
0.013364652080489408
perf-counters
0.012424391949354508
various measurement mechanisms
0.01237776831470145
Sightglass
0.012246836307384186
\
0.012062101800955856
different aggregations
0.011663154974855306
engines
0.011576280020182189
Cranelift
0.011520565242005414
wasmtime_main.so
0.011325993035121154
program
0.011031993920816177
performance
0.010875068056656856
results
0.010748313354395847
various output
formats
0.010396123523339294
-
0.010083773854553052
wasmtime-bench-api
0.009942038104348188
different WebAssembly compilers
0.009664614406797402
Results
0.00927633052800096
details
0.008966398954982437
~/wasmtime/Cargo.toml
0.008797020445495816
JavaScript benchmarking wars
0.008640334571110454
various versions
0.008557787709800889
emits measurements
0.008466847297353775
flag
0.008157130305857773
benchmarking infrastructure
0.00791299633397246
execution
0.007855391577171515
cd
0.007638949953483144
latest main branch
0.007391678135012596
example
0.007318404727555901
engine
0.007304312294901248
further changes
0.007208405860833814
work
0.007195712104036303
git checkout main
$ cargo build
0.007031394050676885
RFC
0.006928818689584723
cross-engine portability constraints
0.0066753987449672935
Wasm file
0.00641512352191062
goal
0.00583828312120132
compilation
0.005773521588217662
sorts
0.005638741343055434
vtune
0.005619887759746052
rendering
0.0056063066510785835
path
0.005598604847215053
DOM
0.005525582907872197
VTune task
0.005500340906990589
Linux
0.0054848446088286915
instructions
0.00548277074230885
tweaks
0.005476559874852498
selection
0.005439631166544389
options
0.005407298786119427
analysis
0.005377264346884665
respect
0.005362895508591046
Building
0.005357083827862274
cache
accesses
0.0053454539872789305
instantiation
vs. execution
0.005318385765267615
noop
0.005226767521072287
heap
allocations
0.005213769521138039
playing field
0.00520612198941173
subcommands
0.00519166786759147
help
0.005166639829074402
locations
0.0051430816437407455
Different Kinds
0.005051870058136903
rest
0.005046251164261696
oranges
0.005044654005109938
explicit non
0.005037463238105334
number
0.0050343233763043595
apples
0.005033000118019409
repeated use
0.005008756262137035
typical usage scenarios
0.005003943005855054
cache misses
0.004999863621281334
couple
0.004938811237266305
eye
0.004925439905661133
great care
0.004809811974362928
engine specific
configuration options
0.004804933299523724
portion
0.004789989119446683
interactions
0.004782863487560782
accuracy
0.004740832982842107
new commits
0.004728715178786296
Runtime Engine
0.004724417137938386
Wasmtime

$ cd engines
0.00472424091536739
elapsed duration
0.0046929518350016085
crates
0.004685145557361636
RDTSC
0.004639950651637058
CSV
0.0046343587205284155
cli/
0.0046105702058544355
wasmtime
0.004566732272530578
tooling
0.004527812506329365
flags
0.0045194367522576355
history
0.004485044878847528
benchmark --raw --output-format
0.004455935899073852
many iterations
0.004452497281835881
sightglass-cli tool
0.0044500288140863
host functions
0.004442465823174379
bench.start
0.004442146853490826
raw JSON
0.0044092048521933
summary
0.004395429834275108
comparison
0.00436667723301034
purposes
0.004360459219307056
rustc
0.004353004039337032
Wasm applications
0.004318125029183172
instantiation
0.004317145845042997
issue
0.004289292915456286
git
0.004282453774637606
context switches
0.004247055823114923
benchmark.wasm module
0.004225170551249356
repository
0.004223738907425928
Dockerfile
0.004220917382343045
process
0.004219258174296268
server
0.004218196113903274
--measure option
0.004207164316688324
significant
additional complexity
0.004179937243280429
Several measures
0.004145653506804382
benchmarks/
0.0041406943125236375
bench.start and bench.end host calls
0.004119935723531046
bench API
0.004093070184410829
command
0.0040843319743368
cargo build --manifest-path
0.0040707043127757485
requirements
0.004058965436673448
fuller
set
0.004055367249237026
things
0.00401688482183798
shared library
0.004014174790325267
significant difference
0.004006147788440912
csv
0.003967178933103195
OS
0.003951910902415642
runtimes
0.003933016345071412
General-Purpose WebAssembly
0.003924220014597203
Firefox
0.003885142552139743
script
0.003860125835294468
cp target/release/libwasmtime_bench_api.so
0.00381956412011233
Raw JSON or CSV Results
0.0038168546092330075
general-purpose WebAssembly benchmark suite
0.0038059624970506432
human-readable
format
0.003804522554068434
engineers
0.003736827512442751
generated code
quality
0.003721838543299279
effect size
0.003519931568296765
own R/Python/spreadsheets
0.0034875841044759107
Feature Branch
0.003459921103550479
Bytecode Alliance project
0.0030761105023617637
