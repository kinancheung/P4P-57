smart contract
0.09045690916837827
wasm bytecode file
0.0482387526600258
symbolic execution
0.04610015025811151
solidity
0.02685460406192352
following command
0.025878961727364508
solc
0.02165329268477073
output
0.019805984843577134
bytecode
0.019364390404107572
example.wasm
0.018692385859928894
cpp or rust source code
0.018249694214473103
wasm files
0.017525480067191845
example.wast
0.0171975297585408
contract.wasm
0.01666616619163921
directory
0.01617089656684244
logic
0.016037039533842508
process
0.015070176134346695
vulnerability count
0.014788949686989303
later version
0.014347552699875152
developer
0.013543050533532228
WANA
0.012801826003441704
binary representation
0.012614354778705242
bin_reader.py
0.011813246788722588
technical details
0.011722058431944897
states
0.01075345610721408
bin_format.py
0.01066920034445874
Symbolic Execution Engine
0.010561710780085247
Wasm Bytecode
0.01040006742169265
Bo Jiang
0.010158470898874278
option
0.01012796789923539
global_variables.py
0.009819469262858036
WebAssembly
0.009659755598993675
loop depth
0.009526104012065667
library function emulating
0.009520423385603459
module
0.009431531391521107
helper modules
0.00925816220079981
rust
0.009250845116706293
sym_exec.py
0.009200696582205512
logger.py
0.00914257265831652
approach
0.009088954390134407
present
0.009054560261169901
cpp
0.00889742358116312
Analysis
0.008853867354652179
timeout
0.008843474038391896
seconds
0.008762107456237008
Prerequisites
0.008710680305570791
vulnerability analysis unit
0.008534906377634165
experimentation
0.008531398492326167
type
0.008510836264742597
tool
0.008486576987306036
download
0.008452171764421703
example_directory
0.00838088247868173
experimental stage
0.008373513932367373
bug_analyzer.py
0.008363903704169054
following Python packages
0.008215595083235279
virtual machine runtime structure
0.008106377036833074
appdemo
0.008099452164226924
arxiv
0.008038210870423716
record or pattern matching logic
0.0080040260693707
paper
0.00783530520656352
function-level and instruction-level execution
0.0078011327790843184
optional
0.00780092810410187
example
0.007741796443640727
principle
0.00768623725430991
official development kit
0.007562977987866391
Ubuntu
0.007559925805464572
fake eos
0.00754209517005377
eosio-cpp appdemo.cpp
0.00749113619696553
./solc-static-linux
0.007488822511955309
project
0.007426477506526592
main components
0.007314795747695439
entry point
0.007270500449583014
README
0.006986026380646224
input
0.00687009278459132
forged transfer notification
0.006794787829473788
Dong Wang
0.006753038402405584
sources
0.006661483652841254
complete analysis
0.006481822421873243
basic information
0.006066539283048249
questions
0.00587244282781609
python3
0.005608829921529398
