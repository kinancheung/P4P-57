code
0.054167151967141204
spec implementation
0.022739167320506307
.wast files
0.02124816778967903
parser
0.020508507999546757
performance related questions
0.020481114598346336
Running wasm
0.020156975640187196
Time
0.018931592240103105
prototypical Wasm
0.01877944395585143
wrapper folder
0.01784249589041227
LLVM IR
0.016414003885123856
Spec implementation
0.015659353340515925
spec changes
0.015547648776360065
-
0.014268690488692611
tests
0.014201630946342924
TODOs
0.013794806746695119
point
0.013544302463865853
Flex lexer
0.013478827844882963
spec uni
0.01319600718174485
project
0.012657313568236652
LLVM O2 Optimizations
0.012385367416618777
most part
0.011998257917918876
script file
0.011830846714401152
following
0.011708005151578408
prototype
0.011707142505595932
todos
0.011450729242355557
times
0.01140505135817822
compiler
0.011211503564217304
testing script
0.010934267271695858
language
0.010929412210147024
test cases
0.010744105428173792
S-Expression form
0.010692871226379817
lot more things
0.010502835350999494
Flex/Bison
0.010132593775584812
repository
0.009987313138698143
core
0.009926529457508855
llvm_wasm <wasm filename
0.009692325154676771
nodes
Generates
0.009576596346710974
module
0.009504628160297296
wasm_file.h
0.009473309936574692
debug.h
0.00939998968817148
exports
0.009259635380200108
Assert traps
0.009230427799603032
information
0.008787027026491302
new features
0.008780215995289768
Discussions
0.008588162045750964
AST
0.008483002075118514
assertions
0.008412419409024777
Parses
0.008379259080559209
syntax
0.008221259793734085
definition
0.008107980999464881
reference
0.007942610374393071
projects
0.007903655090244132
reason
0.0077467976696209825
significant semantic
changes
0.007690629504523722
semantical questions
0.007670850230920488
moves
0.007479883317338601
function pointers
0.007330467625253308
Participation
0.007293052525542386
format
0.007211520843387038
device
0.007169554611787678
ideas
0.007091759435720042
assert
0.007083634014260535
run.sh
0.007062259223076894
easy testing
0.007017954892299045
functions
0.007009503565982049
differences
0.006915618753356436
alternative
0.0068971453869406014
trail
0.006884393456898254
single assertion driver
0.0068539182240954215
specification change
0.0068169535862297416
substantial discussion
0.006808981217459905
runaway recursion
0.006764661919113987
place
0.006685640674691132
O3
0.006657685811370784
par
0.006639416352131802
clarity
0.0065990602289249314
discrepancies
0.006563034025493086
simplicity
0.006502523045114563
goal
0.0064516205235313935
order
0.006370964895234175
example
0.006342478187353257
original parsing
0.006327650245095721
way
0.0062839474968577926
single execute_asserts method
0.006262886901763122
copies
0.006240606902241116
major components
0.006158938102400301
playground
0.006141523674512403
asserts
0.006073154606217566
assertion opcodes
0.00578500480907916
Tests
0.005710144782356171
./perf_tests
0.0056751977521389855
built objects


tests
0.0055933177140114615
Things
0.005543677146739985
hack job
0.005403083012369502
submodule route
0.005352151223093012
flex/bison analyzers
0.0053398606353105855
assertion trap test compliance
0.005311923409032557
sides
0.005144883517557572
git submodule init
0.0051244734897607285
WIP
0.0051223442211217295
guidelines
0.004886727880096764
