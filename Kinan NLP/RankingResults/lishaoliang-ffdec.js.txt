var Module
0.03963037622744696
w/2
  pitch_v
0.03315613307991446
new Uint32Array([3000
0.030268196041875438
xxxx
0.028856045496917157
return
0.02883103498435015
@param
0.02573461860541649
frame.time = 0x8000000000000000
0.024443726258982328
binary
0.023809288399609586
frame
0.02376674208389084
y
0.021851611450737406
//gl.viewport(x
0.020094339888210126
width, height
0.01918953821210892
ffdecjs.print_file
0.018969448309354445
V
0.01845317355649985
Y
0.017893598453900345
function(path_name/*string*/
0.01787241669551444
w
  pitch_u
0.01786526991884353
U
0.01774730528262267
= new FileReader
0.01748151996435535
u
0.017086738107652592
h
0.016705607980389017
@brief 
/// @return int
0.016549576158863544
new Uint8Array(pitch_u * h
0.016508800105490322
otpye
0.016267077702852187
unix
0.015907659441636062
uglifyjs
0.015885704693021346
eg."/xxx.flv
0.01548200851671744
./ffdec.js/lib/testffdec.html
0.015440550562254312
reader.readAsArrayBuffer(file0
0.01537724005182542
reader.onload
0.01510280274498113
WebGL
0.0148480277170818
emcc
0.014649455906716489
time
0.014613559691163942
setInterval(function
0.014498890518525716
TODO
0.014256485319305592
pitch_y
0.014213736758599278
var frame = ffdecjs.get_next_frame
0.014173060630477777
Step2
0.014135331039276909
postRun"



ffdecjs.postRun = function
0.013875922472509346
var binary = new Uint8Array(this.result);
    //console.log("binary
0.013817505049824758
document).ready(function
0.01363057384023492
sudo npm install
0.013614773840576359
draw_begin
0.01356182508840155
event.target.files[0
0.013247178074723911
draw_end
0.012750867837558636
binary.length
0.01241513012657014
ffdecjs
0.012400522596777975
//console.log("frame
0.012138145838709181
FS"

var file0
0.011988825559904092
Step3
0.011844635921137303
unix)

ffmpeg(:mp4,flv)
demo

ffdecjs.postRun = function
0.011519467435542672
int
0.011378897110126364
H5WebGL

Wasm
0.011019716575262918
function(n/*number*/){return
0.010882292914522938
v
0.010740830275679724
TODO



Demo

Image text
0.010690154528960306
p_path_name  
/// @param [in] *p_param json 
/// @return int 0.; 0.
ffdecjs.open = function(name/*string*/
0.010559112945321001
ffdecjs.print_file(/data
0.01055609370511216
/// @note , 
ffdecjs.close = function
0.010221701971391923
/data
0.009529129733770375
