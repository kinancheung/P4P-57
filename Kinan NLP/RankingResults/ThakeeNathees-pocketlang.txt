pocketlang
VM
0.03206733175435101
pocket cli/*.c src/core/*.c
0.03180546988683479
embeddable scripting language
0.02680239839695482
file handling
0.020895685110321846
limited memory allocations
0.019197073075955935
NaN-Boxing
0.018170142728550588
little python script
0.017893222576627014
C files
0.017494536210848406
source files
0.014844052865381261
import statement
0.014587361697474212
Bob Nystrom.(2021
0.014256971422478391
bytecode VM
0.01416678895231271
compiler
0.014100935101384961
benchmarks
0.013555111064377881
external dependencies
0.013515983678246376
test/benchmarks/
directory
0.013023232737098333
MSVS installation path
0.012935345788327793
recursive fibonacci function
0.012723472200954477
C.
0.012572861175773357
pre
0.012443135672816633
WebAssembly build
0.012098549971037445
Pocketlang
0.012092528954584014
input
0.01034467194036544
cl
0.009921789262285699
features
0.009853244560060866
m
0.00973048630719039
README
0.009659306153058144
scripts
0.009533525312541459
nix
0.009532364861729745
Performance Benefits
0.009364038800600745
Technical report
0.009349769989167396
References
0.009154945391946369
gcc
0.009140684962934374
MSVC
0.009117922963054345
wren v0.3.0
0.00908263711094478
Compile
0.009052030475845681
wonderful book
0.008927235268707511
June
0.008785195902678506
Tail Recursion Removal
0.008765141833769753
GNU
0.008757122718689482
tool
0.008749274834791113
Crafting Interpreters
0.008743386682224706
call
0.008704813222704496
&
0.008538024893717404
Visual studio project files
0.008516040726456384
rm
0.008486940445805755
Windows10
0.00847774246880406
msys2
0.008472616139063617
O(n
0.008467656352314551
python v3.7.4
0.008421419733269797
performance
0.008415270074433994
64bit
0.00834588718041587
alias
0.008332558962608223
cygwin
0.008250811672178797
additional requirements
0.008228600712766996
callee
0.008224742131947174
more information
0.008172648609783442
premake
0.008144429079491776
# Python
0.008140446967545279
cli/ directory
0.008122760815503529
Add src
0.008051674443108702
MinGw / Clang
0.00805114179531975
referenceto
0.00798839164729441
windows
0.007949916273093835
issue
0.007883168239592347
Procedural Languages
0.007740329421638663
Wren Language
0.007682135841033637
Waldemar Celes Closures
0.00763321098109058
Luiz Henrique de Figueiredo
0.007594903687125115
webassembly version
0.007581013228470559
date
0.007574193782628018
http://cs.hamilton.edu/~mbailey/pubs/techreps/TR-2001-2.pdf


Roberto Ierusalimschy
0.007476983781572809
Source
0.007416997286077009
following command
0.007379307534292989
callers stack frame
0.007319500371777757
GB SODIMM Ram
0.007291620744349262
runtime
0.007289364177541799
Pratt Parsers
0.007271110424200028
browser
0.007255744755024982
Lua
0.007241247786385438
tail recursive
0.00722230832013791
stackoverflows
0.007002157838906761
Visual Studio .NET developer command prompt
0.006939799958434249
Available at www.craftinginterpreters.com/ (Accessed January 2021)


Mark W. Bailey
0.006906219297828239
tail call
optimization
0.0068959024704471125
hosting program
0.0068601556084741345
time
0.006849496201124802
dynamic types
0.006771400030765427
self descriptive name
0.0066798355960490845
minutes
0.00641544390115895
stdout calls
0.006409862195754971
Expression Parsing
0.00637291071720856
documentations
0.0063649236670172546
docs branch
0.006362079797055083
Leonard schtz.(2020
0.006220335445021114
fib(i)}")
end
0.0061304404942759474
ruby
flavoured python syntax
0.006099890949289178
print("fib($i
0.006013961336311381
https://leonardschuetz.ch/blog/nan-boxing/
0.005866414547682832
end
  return fib(n-1
0.005589441549217495
lightweight (~3000 semicolons
0.005563967671182732
end
0.005520719660949238
