WebAssembly Applications
0.08264971037961956
JavaScript
0.0640843104596728
benchmarks
0.02703712521462403
Firefox
0.024929138591458164
Microsoft Edge
0.02267058034327687
more memory
0.022655985230098666
Google Chrome
0.021850595025862705
browser
0.020639179706407065
desktop
0.018651456637694613
time output
0.016516816767427858
mobile devices
0.014379993033942714
optimization opportunities
0.013087711467257684
compilation script
0.012908921436932893
-O2
0.012794880190004809
program input size
0.012761168307586057
stable version
0.012519774943013455
benchmark
0.011996984487308961
performance
0.01164334674476179
-Ofast
0.011367470678487524
figure
0.010959655520257081
code
0.0107010165417623
paper
0.009320287616432376
Raw experiment data
0.009246635282949573
WebAssembly tooling developers
0.00829885651982895
Python
0.00815568888331618
browsers
0.008035788432837981
Dependencies

Cheerp
0.007744940168968255
CHStone
0.00742564621142657
-cheerp-linear-heap
0.006851272307240346
optimizations
0.006442422574324933
%
0.006437421197157666
chromedriver
0.0060861043858885
0.83x
0.00599135312035059
Extra dependencies
0.005910164330637808
g
0.005888564009417457
reference
0.0056725507432699215
findings
0.005618877149645214
diverse settings
0.0055655049543681685
file
0.005530008571277872
command line options
0.005503487497714949
ret
0.005491367545994682
subject programs
0.00544797089978925
result
0.005446818692520186
alternative method
0.005443669640692301
average
0.005333166965237291
browser data
0.0053153904425902645
src
0.0052758411673791954
RQ3  Browsers
0.005249633734325229
developer tool
0.005198595668876803
value
0.005169587936321354
int*) malloc
0.005154609823396333
-Oz
0.0051145665882683326
others
0.005079148549087274
Large (increases
0.004929300741989417
KB
0.004842704485705681
corresponding JavaScript file xx.js path
0.004834175834303851
FFmpeg
0.004771594194880364
test.html
0.004748151354351575
MB
0.00474461497150102
Use
0.00468330704639602
/opt/cheerp/bin/clang -target cheerp datamining/correlation/correlation.c utilities
0.004660531113717592
final command
0.0046345170330234125
extra-small or small input size
0.0046140800978329176
following HTML code
0.004612207575264226
mixed results
0.004601689008430925
python
0.004583914878226406
local server
0.004545569016571684
Instructions
0.004518761181914739
Repeat
0.004492803113216237
d
0.004361488051514999
Setup
0.0039701914645469474
insights
0.003714698348960261
fixes
0.003648774668018646
comments
0.003636404938545425
4.93x
0.00358600881656085
dfsin.c
0.0035668784077551243
void
0.0035508464623946493
0.57x
0.0035458449590448264
3.39x
0.0035435004819670646
modifications
0.0035415828630835132
Hyphenopoly
0.003481842911431182
0.98x
0.003462669902162777
possible side effects
0.003461306677753235
1.28x
0.0034602537748595293
step c
0.003452290267452426
WASM
0.0034317355379160364
solutions
0.00342865561960053
incognito mode
0.003416982588380066
whole repository
0.0033969692631933453
more times
0.0033497142301059622
terms
0.0033383576255122407
Chrome version
Selenium

Install
0.0033273303463529193
purposes
0.003289342046490421
contrary
0.0032832585601344985
chs.py
0.003268781029596343
contrast
0.0032527196847251328
stability
0.0032484091988779873
auto.py
0.0032398016940776357
0.61x
0.003237419987558515
stats
0.003183404690248528
different types
0.003179456014048521
PolyBenchC
0.003172470762366958
h
0.003163721243935869
0.67x
0.003160749184873904
baseline
0.0031412749577335833
other approach
0.0031404797361806055
localhost:8000
0.0031260216585981718
PolyBenchC.
0.0031098219531935567
heap
0.0030953304389673302
Compilation
0.003080606418125962
console
0.003074212101353664
pages
0.003072545645593387
Node.js
0.0030659285921007472
challenges
0.0030651666131590923
0.90x
0.0030556372069545936
instruction
0.0030466387343911034
python2
0.0030346562175918423
measurements
0.003009110331723834
readers
0.003003603897352366
resulting code sizes
0.002931416021732814
suite
0.002920892520409019
float
0.0029079002334210335
scripts
0.002907081891610142
malloc
0.0029045019062571877
following content
0.0029041054479855208
JS Benchmarks
Long.js
Hyphenopoly
0.002896203565861529
compiled_benchmarks
0.0028761994842634777
0.74x
0.0028409229456374243
universal automated solution
0.002830959717792534
execution environment
0.002828200437304717
different compilation settings
0.002824737528033098
LLVM
0.002822698231132226
wasm-compatible python server
0.0028201268776896814
MiB
0.0028054704805010895
poly2.py
0.002801248632652318
utilities/polybench.c
0.002797759783510338
mm benchmarks performance difference
0.0027976204348300927
3.19x
0.002789115977922632
larger inputs
0.002763434842433003
Findings

RQ1  Program Input Size

Detailed input size
0.002756365707257738
example
0.0027343430202917355
attention
0.00273216080508733
first systematic study
0.0027296313373627126
WebAssembly maximum heap size
0.0027279910166069657
speedup
0.0027207859394695368
compiled benchmarks
and skip step
0.0026496314764291396
newest language
0.002638448834196003
JavaScript/WebAssembly file
0.0026363842910712655
Source Code Transformation
0.0026181714126360797
-DXXXL_DATASET
0.002600862328281763
Little research
0.0025910550507378238
Performance
0.0025655406677407766
/opt/cheerp/bin/clang -target cheerp dfsin/dfsin.c -cheerp-linear-heap-size=1024 -cheerp-mode=wasm -DXXXL_DATASET
0.002543349403693963
web
0.0024855940608062782
compact binary format
0.002349074313028258
-cheerp-wasm-loader=chs/dfsin/wasm/Oz/dfsin_-DXXXL_DATASET_Oz_load.js
0.0022428686867107337
-cheerp-mode=wasm
0.0021625629142298184
