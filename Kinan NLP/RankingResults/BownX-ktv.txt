char
mentor
0.06711318441797552
obj values
0.06421649920414915
const char *alias
0.0571357154392309
set value
0.03199837015116459
uint16_t count
0.029257589523385218
type
0.027909207479515977
ktv_obj
0.027493758851386007
array
0.02529004394024183
title
0.023145877378470264
bytes
0.02163772176356171
name
0.020233974456560187
data object
0.01540791410210053
proto file
0.015334378935512233
KTV
0.014846525544091597
void ktv_array_delete(ktv_array
0.012698204295979273
user = ktv_obj_new(tree, "user
0.011858603360031746
many platforms
0.011716698571628952
project
0.011239883788528497
job
0.010800685545575516
#user
0.010718862904426746
values
0.010233223847123473
More examples
0.009975856839453963
gender
0.009676966896661705
int32_t *valeus
0.00947109681557066
ktv_buffer *buffer
0.009452867710418115
int16_t *ktv_array_get_int2s(ktv_array *array
0.008873509567391259
>
0.008686579321022262
buffer
0.00840635405989979
ktv_obj_to_json(ktv_obj
0.008357330535798612
d
0.008348017369464764
strlen(title
0.00821620144068264
model
0.008114509220348298
ktv_obj_decode(ktv_obj
0.008097722596819512
basic types
0.008080834078489524
starts
0.008062448443226183
task
0.008025468148072938
use
0.007942277631320624
ktv lib
0.007798536045622039
intern
0.007741070084011838
int2 
status
0.0077358804866833
unsigned 1 byte
byte
0.007713520858002651
received_user_buffer
0.007709913622153617
int4
0.007634468627975409
ktv_obj_decode(recieved_user_obj
0.00758996121974207
ktv_obj_set_byte(ktv_obj
0.007586521944729427
ktv_obj_set_array(job
0.007551238623458867
proto.bin
0.007505033303839826
strlen(name
0.007487741199434239
Product Manager
0.007089010892290015
Embedded Systems
0.007069548510924826
= ktv_array_new_string(job
0.007064493721667761
ktv_obj_set_byte(job
0.007014655212767406
ktv_obj_set_obj(ktv_obj
0.006994938978839207
#
0.00693101807311549
BLE
ktv_buffer *received_user_buffer = receive_data_from_ble
0.00693070646925295
cJSON
0.006832828642524289
load proto.bin
ktv_tree *tree = ktv_tree_new(proto_bin_bytes
0.006769320860589779
IoT.

Usage

1 Copy ktv.h
0.006764753578022205
name_array = ktv_array_new_string(user
0.006756961879249385
help
0.006711151929352859
Zhang Ji
0.006700310781727978
byte
0.006687255554287582
ktv_obj_get_obj(ktv_obj
0.006607407307672792
received_name = ktv_obj_get_string(received_user_obj
0.0065812122310184825
ktv.c
0.006530642872494605
ktv_array_get_string(ktv_array
0.006525256685697058
text file
0.006491497957601986
proto_bin_length
0.006441468159879623
send_data_to_ble(user_buffer->buffer
0.0063816022465145155
ktv_obj_new(ktv_tree *tree
0.006373121541780427
ktv_obj_get_byte(ktv_obj
0.006326423752154837
ext folder
0.006276316242305586
full-time
0.006238657805912174
json
0.006224260972769342
iOS
0.006206444054854335
JSON string
0.006147653691622709
void ktv_array_set_obj(ktv_array *array
0.006070581534629052
ktv_obj
ktv_obj
0.006068219346570505
int16_t ktv_obj_get_int2(ktv_obj
0.006015811292737319
ktv_buffer
0.0058936878163576446
user_buffer = ktv_obj_encode(user
0.005816175332629792
proto_parser.py
0.0058077701160186975
business data structure
0.00567718974879673
age
0.005639601322089023
child object/array
0.005551894518274502
size_t size
0.0050112516925637065
ansi C
0.004977936043012391
ultra lightweight, schema-based binary protocol serialization/deserialization library
0.004938155535986632
ktv_json_test.c
0.004733954902509884
