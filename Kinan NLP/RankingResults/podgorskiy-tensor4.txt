t4::tensor4f
0.04182893682972584
t4::tensor1f features_0_bias
0.029201929193076664
t4::tensor2f
0.02770147188252692
AlexNet
0.024255176790029642
%
0.020198480167784593
code
0.019806407019076523
t4::tensor2f x31 = t4::Dropout(x30
0.017139472819181503
t4::tensor4f x17 = t4::Conv2d<11
0.016599397117203825
C++
0.014716342363191167
PyTorch trace
0.013127154431986997
tensor4 convertor
0.012182026830818834
PyTorch traces
0.011616195960979573
MKL
0.009727468773212141
char
0.009700444835451403
0.5f
0.00964375737614607
GEMM
0.00956482097066074
t4::Conv2d<3
0.00917456677518632
filename
0.008854824526392874
paddle
0.008834330536279597
amphibian
0.008686217220598196
test tensor
0.008495637616555377
amphibious vehicle
0.008459825025299603
cpp
0.008435168648345787
case
0.00827795456480058
canoe
0.008199671781077687
t4::MaxPool2d<3
0.007986189219690408
small binary footprint
0.007881009564074157
DenseNet
0.007825513735052723
container ship
0.007522331551507639
DCGAN web demo
0.007426687354324316
t4::tensor2f x39
0.007363141568371423
x34
0.007294580306382293
containership
0.007133240282990044
x23
0.006581976266877719
classifier_1_weight
0.006521567105310935
t4::ReluInplace(x33
0.00650181419221172
features_10_bias
0.00641064717902637
//classifier.2
0.006304801604173183
features_8_weight
0.0062355557100762255
ctx.features_6_weight
0.006233721563965235
ctx.features_6_bias
0.006166763344791143
//features.6
0.006134904994780201
t4::release(x33
0.006073782979315911
//classifier.3
0.005974729530696716
t4::release(x22
0.005966654090407196
lightweight tensor library
0.00593524650199127
//features.7
0.005914245572896274
ctx.features_10_weight
0.005869067405881104
t4::release(x34
0.005859548683564688
features_0_weight
0.005831195957190465
t4::release(x23
0.005711237527343436
ctx.classifier_1_bias
0.005694627192985975
t4::ReluInplace(x23
0.0056893140494120534
ctx.features_10_bias
0.00568854444912935
ctx.classifier_4_weight
0.00562694514391568
ctx.classifier_1_weight
0.005620324303719974
ctx.classifier_4_bias
0.005606506502426251
ctx.features_3_weight
0.005605827673188006
1>(x22
0.005590834772765233
t4::release(x31
0.005513231222440169
//features.1
0.005447136400768111
t4::release(x21
0.0054404870092089564
ResNet
0.0054304257242999004
support
0.005422208211658241
TODO
0.0054125435161776125
t4::ReluInplace(x17
0.005373618934982444
CPU
0.005336616557966115
ONNX
0.005293925884453751
t4::ReluInplace(x37
0.005289344102629157
1>(x26
0.005262266125884598
http://podgorskiy.com/static/stylegan/stylegan.html
0.0052576127915415286
ctx.features_3_bias
0.00523624058550878
t4::release(x17
0.005206315829834635
//features.5
0.005156733001338535
t4::release(x35
0.005111915352741435
definitions
0.005070827148611248
//features.10
0.00505042236139627
//classifier.0
 t4::release(x30
0.005042425538572789
#
0.005030692069528112
1>(x19
0.005025940674693292
//classifier.5
0.004989278339979567
figure
0.0049697982260771675
x18
0.0049686670206852915
t4::Flatten<1>(x29
0.0049610827803290136
t4::release(x29
0.004957653967095271
Vgg16
0.004929969850170522
forwatd pass function and weight loading function
0.004882363956351274
https://raw.githubusercontent.com/podgorskiy/tensor4/master/examples/common/alexnet224x224_input.png
0.0048802669072240895
t4::ReluInplace(x25
0.004800282408247391
weights
0.004789760827383509
internal implementation
0.004789101611398296
t4::release(x25
0.004592293341308628
dict.load(ctx.classifier_1_weight
0.004570203505373852
classifier.1.weight
0.0045335336479467424
t4::release(x24
0.004522970159808535
Exampe
0.004518444316931578
classifier.1.bias
0.004509400393768331
dict.load(ctx.classifier_1_bias
0.0045054397320394525
pytorch
0.004487885211414438
features.10.bias
0.004484274211395601
differences
0.004478619850661136
hello-world

Predictions
0.004456419752277969
network
0.004445727003012799
//features.11
0.004433769542394381
gradients
0.0044166507635158645
corresponds
0.004392089100473279
t4::release(x19
0.004359457282652414
dependencies
Inference
0.004358844123439667
dict.load(ctx.features_10_bias
0.00434733084888956
classifier.4.bias
0.004302639856131869
+
0.004302522666046009
dict.load(ctx.classifier_4_bias
0.004295419124011086
Easy
0.0042913139830140275
dict.load(ctx.classifier_6_bias
0.004249848267293079
float point nubares
0.004243522495717799
table
0.004217355065866748
classifier.6.bias
0.004202809676539896
0>(x28
0.004185215249785251
Single header library
0.00417564541750894
//features.4
0.004158715612499193
ctx.classifier_6_bias
0.004154200470989964
ctx.features_8_weight
0.00414892267233475
features.8.bias
0.004079613832514578
same type/size
0.004050214223229474
dict.load(ctx.features_8_bias
0.004011386544620677
kb
0.003994023532449659
dict.load(ctx.classifier_4_weight
0.003979518676973138
difference
0.003974931644187207
U-boat
0.00396332500537199
t4::release(x18
0.003898327087385351
dict.load(ctx.features_3_bias
0.0038976686586028853
input
0.00387262694635078
features.3.bias
0.0038698580848543144
ctx
0.0038584425224848728
features.6.bias
0.003852637162561274
dict.load(ctx.features_6_bias
0.0038471315285005148
classifier.6.weight
0.0038424242330723497
one
0.003828678251275722
converter
0.0038123812447183976
tensor4.generate(alexnet
0.003785192184523952
alexnet.eval
0.003782315200231118
% lifeboat
  0.594838% sandbar
0.0037755834260444236
WebAssembly
~ 2k lines
0.0037549112225994372
modes
0.0036948954958204556
threading
0.003668973318024742
features.10.weight
0.0036656230261974975
t4::load(filename
0.0036653777880668896
project
0.003603058484835989
ctx.features_0_weight
0.003594884486277708
features.3.weight
0.003411132821242396
fun experiment
0.0033862464153187636
features.0.bias
0.0033546302671392174
sandbar
0.003223013334546153
tensor4 - single header
0.0031195771297344694
