function_name
0.03859716824469693
Arguments
0.027074119050223652
WasmEdge
0.026736152994123463
function arguments
0.025561696603389562
args
0.024995666702250195
result
0.02320413410046994
return value type
0.021496087425410614
users
0.02112823927919215
execution runtime
0.020796925804261013
wasm files
0.019749730453955297
Default
0.019736016032284517
Wasm-Bindgen application
0.016048748854876983
option
0.015291841089802295
Integer/String/Uint8Array
0.014868528585689784
delimiter
0.014723365899479684
apt install
0.014156919803479698
options
0.013108196361507219
prebuilt version
0.012844837755547034
wasmedge-core versoins
0.012378786039978822
environment
0.011394482241156625
vm
0.0111714312585408
measurement
0.011037470704775674
source
0.010835036406797187
array
0.01045408049107259
strings
0.010415753029949328
Node.js addon
0.010192612019220977
Integer
0.009827737152967324
options object
0.008971007546484337
Wasm file path
0.008887489369528514
unit
0.008667732868846166
llvm
0.008666208282760319
Example
0.007848440764078035
AllowCommands
0.007498275777281734
executed instructions
0.007014639610419562
BigInt
0.006982342859536176
project
0.006946311969355019
String
0.0069257567428407975
Uint8Array
0.006839903820475208
performance
0.006830450958712404
following requirments
0.006729775155087909
Rust
0.006535762233990325
rc.1
0.006504639819340068
WasmEdge AoT mode
0.006449410782690841
high-performance WebAssembly runtime
0.006234744365604739
server-side applications
0.006201761211405679
Tutorial
0.006152281945095028
WebAssembly functions
0.006109780974440067
aot/file
0.006043411284549462
Expected output
0.00601177583630468
GetStatistics
0.005984272761621147
standalone wasm program
0.005901610833549443
compilers
0.005798641469383249
g++
0.005791375181328269
docker image
0.005600895978033643
aarch64
0.005595325133970726
InstructionCount
0.005509297507069607
MacOS Darwin
0.005372680772033397
Linux
0.005284094375003356
stat
0.005184526754179391
liblld-10-dev
0.0051698131558663585
Measure
0.005064028479132845
rustwasmc
0.0050494444195425285
compiler tool
0.0050215462241253615
setup
0.004736312527176554
x86_64
0.004688764894569302
libraries
0.0045899499189897205
WasmEdge execution environment.options args
0.004571083897819798
#
0.004548751503668435
clang++
0.0045078451642436585
Tools
0.00450164466086281
Clone
0.004494142913980605
llvm-dev/focal,now 1:10.0-50~exp1 amd64
0.0044925205336466476
EnableMeasurement
0.004487644320974062
vm_instance
0.004246078149782688
/tmp/hello.wasm
0.004196485738142394
content
0.004188279162910669
Return value
0.004179806288174272
command
0.004167325494143398
support
0.0041654295032667035
number
0.004150754123497663
Users
0.004142592718901498
necessary packages
0.0041320560556579854
Development Requirements
0.004105267115821041
Int32
0.0041040924670440165
0.9.0
0.004076560082986807
AllowAllCommands
0.0040587898779712705
UInt32
0.004045254467914662
Int64
0.004041743403396455
Wasm bytecode format
0.0040205716596967605
name
0.004017899813491122
second
0.004013211298314688
RunXXX("Func
0.003992780162470883
dependencies
0.003965664535141359
commands
0.003948026298388498
UInt64
0.003930731634352031
mappings
0.0038929386359453956
Run npm
0.0038738018936057134
current stage
0.0038679113604547337
ubuntu
0.003866983908220456
given output_filename
0.0038514615112561074
native binary
0.0038203116560016925
\
    software-properties
0.003810518028490088
Compile("/path
0.0037976217237513134
installation script
0.0037855276271855937
statistics
0.0037844628773434034
eei or wasi functions
0.0037623714002276874
steps
0.0037470380452185197
VM("/path
0.003729114486210771
standalone wasm32-wasi application
0.00371181599229392
Host functions
0.003653204374024398
Wasm exeuction time
0.003628847381058412
RunInt64(function_name
0.0036246394976762655
Start
0.003621006407676807
arguments
0.0035911650279921124
cost
0.003578234020427335
Run("Print
0.003556508168065128
true,
  TotalExecutionTime
0.003534131461271214
Object
0.003527123313854187
wasmedge_options
0.00352179782042171
error code
0.003519960684120973
\
    llvm-dev \
    liblld-10-dev

# WasmEdge
0.003516130607036224
APIs

Constructor: wasmedge
0.003510838133322289
SSVM
0.0034833611967117176
_
0.0034788785103957998
TotalExecutionTime
0.0034583931707106827
GLIBCXX_3.4.28
0.0034459349249591716
wasm-bindgen mode
0.0033834819919030326
> void
0.003358901474436803
lib/x86_64-linux-gnu/libstdc++.so.6
0.0033336876723550238
RunInt(function_name
0.0033106983083499553
Second State VM
0.0032622638396044763
Node.js Addon

The WasmEdge
0.0031934960005469207
RunUInt(function_name
0.003176311081201835
compilation
0.003144296643707554
RunUint8Array(function_name
0.0031077420261421593
Amys math score
0.002932149444602879
3.4.28
0.0029081732529979837
grep GLIBCXX
0.0029077973849373703
real/path
0.002897007014357602
Compile(output_filename
0.002839981279762421
WasmExecutionTime
0.0028282221610204
Statistics
0.002587344165240651
InstructionPerSecond
0.0025631304167390593
